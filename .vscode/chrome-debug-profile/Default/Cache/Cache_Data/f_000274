import __vite__cjsImport0__sniptt_guards from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@sniptt_guards.js?v=226f7286"; const isArray = __vite__cjsImport0__sniptt_guards["isArray"]; const isNonEmptyArray = __vite__cjsImport0__sniptt_guards["isNonEmptyArray"]; const isString = __vite__cjsImport0__sniptt_guards["isString"];
import { isFieldActor } from "/src/modules/object-record/record-field/types/guards/isFieldActor.ts";
import { isFieldActorValue } from "/src/modules/object-record/record-field/types/guards/isFieldActorValue.ts";
import { isFieldAddress } from "/src/modules/object-record/record-field/types/guards/isFieldAddress.ts";
import { isFieldAddressValue } from "/src/modules/object-record/record-field/types/guards/isFieldAddressValue.ts";
import { isFieldArray } from "/src/modules/object-record/record-field/types/guards/isFieldArray.ts";
import { isFieldArrayValue } from "/src/modules/object-record/record-field/types/guards/isFieldArrayValue.ts";
import { isFieldBoolean } from "/src/modules/object-record/record-field/types/guards/isFieldBoolean.ts";
import { isFieldCurrency } from "/src/modules/object-record/record-field/types/guards/isFieldCurrency.ts";
import { isFieldCurrencyValue } from "/src/modules/object-record/record-field/types/guards/isFieldCurrencyValue.ts";
import { isFieldDate } from "/src/modules/object-record/record-field/types/guards/isFieldDate.ts";
import { isFieldDateTime } from "/src/modules/object-record/record-field/types/guards/isFieldDateTime.ts";
import { isFieldEmails } from "/src/modules/object-record/record-field/types/guards/isFieldEmails.ts";
import { isFieldEmailsValue } from "/src/modules/object-record/record-field/types/guards/isFieldEmailsValue.ts";
import { isFieldFullName } from "/src/modules/object-record/record-field/types/guards/isFieldFullName.ts";
import { isFieldFullNameValue } from "/src/modules/object-record/record-field/types/guards/isFieldFullNameValue.ts";
import { isFieldLinks } from "/src/modules/object-record/record-field/types/guards/isFieldLinks.ts";
import { isFieldLinksValue } from "/src/modules/object-record/record-field/types/guards/isFieldLinksValue.ts";
import { isFieldMultiSelect } from "/src/modules/object-record/record-field/types/guards/isFieldMultiSelect.ts";
import { isFieldMultiSelectValue } from "/src/modules/object-record/record-field/types/guards/isFieldMultiSelectValue.ts";
import { isFieldNumber } from "/src/modules/object-record/record-field/types/guards/isFieldNumber.ts";
import { isFieldOpinions } from "/src/modules/object-record/record-field/types/guards/isFieldOpinions.ts";
import { isFieldOpinionsValue } from "/src/modules/object-record/record-field/types/guards/isFieldOpinionsValue.ts";
import { isFieldPhones } from "/src/modules/object-record/record-field/types/guards/isFieldPhones.ts";
import { isFieldPhonesValue } from "/src/modules/object-record/record-field/types/guards/isFieldPhonesValue.ts";
import { isFieldPosition } from "/src/modules/object-record/record-field/types/guards/isFieldPosition.ts";
import { isFieldRating } from "/src/modules/object-record/record-field/types/guards/isFieldRating.ts";
import { isFieldRawJson } from "/src/modules/object-record/record-field/types/guards/isFieldRawJson.ts";
import { isFieldRelation } from "/src/modules/object-record/record-field/types/guards/isFieldRelation.ts";
import { isFieldRichText } from "/src/modules/object-record/record-field/types/guards/isFieldRichText.ts";
import { isFieldRichTextV2 } from "/src/modules/object-record/record-field/types/guards/isFieldRichTextV2.ts";
import { isFieldRichTextV2Value } from "/src/modules/object-record/record-field/types/guards/isFieldRichTextValueV2.ts";
import { isFieldSelect } from "/src/modules/object-record/record-field/types/guards/isFieldSelect.ts";
import { isFieldSelectValue } from "/src/modules/object-record/record-field/types/guards/isFieldSelectValue.ts";
import { isFieldText } from "/src/modules/object-record/record-field/types/guards/isFieldText.ts";
import { isFieldTsVector } from "/src/modules/object-record/record-field/types/guards/isFieldTsVectorValue.ts";
import { isFieldUuid } from "/src/modules/object-record/record-field/types/guards/isFieldUuid.ts";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
import { stripSimpleQuotesFromString } from "/src/utils/string/stripSimpleQuotesFromString.ts";
const isValueEmpty = (value)=>!isDefined(value) || isString(value) && stripSimpleQuotesFromString(value) === '';
export const isFieldValueEmpty = ({ fieldDefinition, fieldValue, selectOptionValues })=>{
    if (isFieldUuid(fieldDefinition) || isFieldText(fieldDefinition) || isFieldDateTime(fieldDefinition) || isFieldDate(fieldDefinition) || isFieldNumber(fieldDefinition) || isFieldRating(fieldDefinition) || isFieldBoolean(fieldDefinition) || isFieldRawJson(fieldDefinition) || isFieldRichText(fieldDefinition) || isFieldPosition(fieldDefinition)) {
        return isValueEmpty(fieldValue);
    }
    if (isFieldSelect(fieldDefinition)) {
        return !isFieldSelectValue(fieldValue, selectOptionValues) || !isDefined(fieldValue);
    }
    if (isFieldRelation(fieldDefinition)) {
        if (isArray(fieldValue)) {
            return !isNonEmptyArray(fieldValue);
        }
        return isValueEmpty(fieldValue);
    }
    if (isFieldMultiSelect(fieldDefinition) || isFieldArray(fieldDefinition)) {
        return !isFieldArrayValue(fieldValue) || !isFieldMultiSelectValue(fieldValue, selectOptionValues) || !isDefined(fieldValue) || !isNonEmptyArray(fieldValue);
    }
    if (isFieldCurrency(fieldDefinition)) {
        return !isFieldCurrencyValue(fieldValue) || isValueEmpty(fieldValue?.amountMicros);
    }
    if (isFieldFullName(fieldDefinition)) {
        return !isFieldFullNameValue(fieldValue) || isValueEmpty(fieldValue?.firstName) && isValueEmpty(fieldValue?.lastName);
    }
    if (isFieldAddress(fieldDefinition)) {
        return !isFieldAddressValue(fieldValue) || isValueEmpty(fieldValue?.addressStreet1) && isValueEmpty(fieldValue?.addressStreet2) && isValueEmpty(fieldValue?.addressCity) && isValueEmpty(fieldValue?.addressState) && isValueEmpty(fieldValue?.addressPostcode) && isValueEmpty(fieldValue?.addressCountry);
    }
    if (isFieldLinks(fieldDefinition)) {
        return !isFieldLinksValue(fieldValue) || isValueEmpty(fieldValue.primaryLinkUrl);
    }
    if (isFieldActor(fieldDefinition)) {
        return !isFieldActorValue(fieldValue) || isValueEmpty(fieldValue.name);
    }
    if (isFieldEmails(fieldDefinition)) {
        return !isFieldEmailsValue(fieldValue) || isValueEmpty(fieldValue.primaryEmail);
    }
    if (isFieldMultiSelect(fieldDefinition) || isFieldOpinions(fieldDefinition)) {
        return !isFieldOpinionsValue(fieldValue) || !isFieldMultiSelectValue(fieldValue, selectOptionValues) || !isDefined(fieldValue) || !isNonEmptyArray(fieldValue);
    }
    if (isFieldPhones(fieldDefinition)) {
        return !isFieldPhonesValue(fieldValue) || isValueEmpty(fieldValue.primaryPhoneNumber);
    }
    if (isFieldTsVector(fieldDefinition)) {
        return false;
    }
    if (isFieldRichTextV2(fieldDefinition)) {
        return !isFieldRichTextV2Value(fieldValue) || isValueEmpty(fieldValue?.markdown);
    }
    throw new Error(`Entity field type not supported in isFieldValueEmpty : ${fieldDefinition.type}}`);
};

//# sourceMappingURL=data:application/json;base64,