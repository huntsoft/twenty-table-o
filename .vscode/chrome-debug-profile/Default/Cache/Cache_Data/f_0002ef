import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/ui/feedback/dialog-manager/components/Dialog.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/ui/feedback/dialog-manager/components/Dialog.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import { motion } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/framer-motion.js?v=226f7286";
import __vite__cjsImport4_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useCallback = __vite__cjsImport4_react["useCallback"];
import __vite__cjsImport5_tsKeyEnum from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/ts-key-enum.js?v=226f7286"; const Key = __vite__cjsImport5_tsKeyEnum["Key"];
import { useScopedHotkeys } from "/src/modules/ui/utilities/hotkey/hooks/useScopedHotkeys.ts";
import { Button } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { DialogHotkeyScope } from "/src/modules/ui/feedback/dialog-manager/types/DialogHotkeyScope.ts";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
const StyledDialogOverlay = styled(motion.div)`
  align-items: center;
  background: ${({ theme })=>theme.background.overlayPrimary};
  display: flex;
  height: 100dvh;
  justify-content: center;
  left: 0;
  position: fixed;
  top: 0;
  width: 100vw;
  z-index: 9999;
`;
_c = StyledDialogOverlay;
const StyledDialogContainer = styled(motion.div)`
  background: ${({ theme })=>theme.background.primary};
  border-radius: 8px;
  display: flex;
  flex-direction: column;
  max-width: 320px;
  padding: 2em;
  position: relative;
  width: 100%;
`;
_c1 = StyledDialogContainer;
const StyledDialogTitle = styled.span`
  color: ${({ theme })=>theme.font.color.primary};
  font-size: ${({ theme })=>theme.font.size.md};
  font-weight: ${({ theme })=>theme.font.weight.semiBold};
  margin-bottom: ${({ theme })=>theme.spacing(6)};
  text-align: center;
`;
_c2 = StyledDialogTitle;
const StyledDialogMessage = styled.span`
  color: ${({ theme })=>theme.font.color.primary};
  font-size: ${({ theme })=>theme.font.size.sm};
  font-weight: ${({ theme })=>theme.font.weight.regular};
  margin-bottom: ${({ theme })=>theme.spacing(6)};
  text-align: center;
`;
_c3 = StyledDialogMessage;
const StyledDialogButton = styled(Button)`
  justify-content: center;
  margin-bottom: ${({ theme })=>theme.spacing(2)};
`;
_c4 = StyledDialogButton;
export const Dialog = ({ title, message, buttons = [], allowDismiss = true, children, className, onClose, id })=>{
    _s();
    const closeSnackbar = useCallback(()=>{
        onClose && onClose();
    }, [
        onClose
    ]);
    const dialogVariants = {
        open: {
            opacity: 1
        },
        closed: {
            opacity: 0
        }
    };
    const containerVariants = {
        open: {
            y: 0
        },
        closed: {
            y: '50vh'
        }
    };
    useScopedHotkeys(Key.Enter, (event)=>{
        const confirmButton = buttons.find((button)=>button.role === 'confirm');
        event.preventDefault();
        if (isDefined(confirmButton)) {
            confirmButton?.onClick?.(event);
            closeSnackbar();
        }
    }, DialogHotkeyScope.Dialog, []);
    useScopedHotkeys(Key.Escape, (event)=>{
        event.preventDefault();
        closeSnackbar();
    }, DialogHotkeyScope.Dialog, []);
    return /*#__PURE__*/ _jsxDEV(StyledDialogOverlay, {
        variants: dialogVariants,
        initial: "closed",
        animate: "open",
        exit: "closed",
        onClick: (e)=>{
            if (allowDismiss) {
                e.stopPropagation();
                closeSnackbar();
            }
        },
        className: className,
        children: /*#__PURE__*/ _jsxDEV(StyledDialogContainer, {
            variants: containerVariants,
            transition: {
                damping: 15,
                stiffness: 100
            },
            id: id,
            children: [
                title && /*#__PURE__*/ _jsxDEV(StyledDialogTitle, {
                    children: title
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/ui/feedback/dialog-manager/components/Dialog.tsx",
                    lineNumber: 146,
                    columnNumber: 19
                }, this),
                message && /*#__PURE__*/ _jsxDEV(StyledDialogMessage, {
                    children: message
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/ui/feedback/dialog-manager/components/Dialog.tsx",
                    lineNumber: 147,
                    columnNumber: 21
                }, this),
                children,
                buttons.map(({ accent, onClick, role, title: key, variant })=>/*#__PURE__*/ _jsxDEV(StyledDialogButton, {
                        onClick: (event)=>{
                            onClick?.(event);
                            closeSnackbar();
                        },
                        fullWidth: true,
                        variant: variant ?? 'secondary',
                        title: key,
                        accent,
                        key,
                        role
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/ui/feedback/dialog-manager/components/Dialog.tsx",
                        lineNumber: 150,
                        columnNumber: 11
                    }, this))
            ]
        }, void 0, true, {
            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/ui/feedback/dialog-manager/components/Dialog.tsx",
            lineNumber: 141,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/ui/feedback/dialog-manager/components/Dialog.tsx",
        lineNumber: 128,
        columnNumber: 5
    }, this);
};
_s(Dialog, "sg8Giv2XuhN2p7EBABPzLhN+EVo=", false, function() {
    return [
        useScopedHotkeys,
        useScopedHotkeys
    ];
});
_c5 = Dialog;
var _c, _c1, _c2, _c3, _c4, _c5;
$RefreshReg$(_c, "StyledDialogOverlay");
$RefreshReg$(_c1, "StyledDialogContainer");
$RefreshReg$(_c2, "StyledDialogTitle");
$RefreshReg$(_c3, "StyledDialogMessage");
$RefreshReg$(_c4, "StyledDialogButton");
$RefreshReg$(_c5, "Dialog");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/ui/feedback/dialog-manager/components/Dialog.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/ui/feedback/dialog-manager/components/Dialog.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,