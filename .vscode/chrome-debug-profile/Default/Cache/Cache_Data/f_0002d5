import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/client-config/components/ClientConfigProviderEffect.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/client-config/components/ClientConfigProviderEffect.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { apiConfigState } from "/src/modules/client-config/states/apiConfigState.ts";
import { authProvidersState } from "/src/modules/client-config/states/authProvidersState.ts";
import { billingState } from "/src/modules/client-config/states/billingState.ts";
import { canManageFeatureFlagsState } from "/src/modules/client-config/states/canManageFeatureFlagsState.ts";
import { captchaState } from "/src/modules/client-config/states/captchaState.ts";
import { chromeExtensionIdState } from "/src/modules/client-config/states/chromeExtensionIdState.ts";
import { clientConfigApiStatusState } from "/src/modules/client-config/states/clientConfigApiStatusState.ts";
import { isAnalyticsEnabledState } from "/src/modules/client-config/states/isAnalyticsEnabledState.ts";
import { isAttachmentPreviewEnabledState } from "/src/modules/client-config/states/isAttachmentPreviewEnabledState.ts";
import { isDebugModeState } from "/src/modules/client-config/states/isDebugModeState.ts";
import { isDeveloperDefaultSignInPrefilledState } from "/src/modules/client-config/states/isDeveloperDefaultSignInPrefilledState.ts";
import { isEmailVerificationRequiredState } from "/src/modules/client-config/states/isEmailVerificationRequiredState.ts";
import { isGoogleCalendarEnabledState } from "/src/modules/client-config/states/isGoogleCalendarEnabledState.ts";
import { isGoogleMessagingEnabledState } from "/src/modules/client-config/states/isGoogleMessagingEnabledState.ts";
import { isMicrosoftCalendarEnabledState } from "/src/modules/client-config/states/isMicrosoftCalendarEnabledState.ts";
import { isMicrosoftMessagingEnabledState } from "/src/modules/client-config/states/isMicrosoftMessagingEnabledState.ts";
import { isMultiWorkspaceEnabledState } from "/src/modules/client-config/states/isMultiWorkspaceEnabledState.ts";
import { labPublicFeatureFlagsState } from "/src/modules/client-config/states/labPublicFeatureFlagsState.ts";
import { sentryConfigState } from "/src/modules/client-config/states/sentryConfigState.ts";
import { supportChatState } from "/src/modules/client-config/states/supportChatState.ts";
import { domainConfigurationState } from "/src/modules/domain-manager/states/domainConfigurationState.ts";
import __vite__cjsImport23_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useEffect = __vite__cjsImport23_react["useEffect"];
import { useRecoilState, useSetRecoilState } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/recoil.js?v=226f7286";
import { useGetClientConfigQuery } from "/src/generated/graphql.tsx";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
export const ClientConfigProviderEffect = ()=>{
    _s();
    const setIsDebugMode = useSetRecoilState(isDebugModeState);
    const setIsAnalyticsEnabled = useSetRecoilState(isAnalyticsEnabledState);
    const setDomainConfiguration = useSetRecoilState(domainConfigurationState);
    const setAuthProviders = useSetRecoilState(authProvidersState);
    const setIsDeveloperDefaultSignInPrefilled = useSetRecoilState(isDeveloperDefaultSignInPrefilledState);
    const setIsMultiWorkspaceEnabled = useSetRecoilState(isMultiWorkspaceEnabledState);
    const setIsEmailVerificationRequired = useSetRecoilState(isEmailVerificationRequiredState);
    const setBilling = useSetRecoilState(billingState);
    const setSupportChat = useSetRecoilState(supportChatState);
    const setSentryConfig = useSetRecoilState(sentryConfigState);
    const [clientConfigApiStatus, setClientConfigApiStatus] = useRecoilState(clientConfigApiStatusState);
    const setCaptcha = useSetRecoilState(captchaState);
    const setChromeExtensionId = useSetRecoilState(chromeExtensionIdState);
    const setApiConfig = useSetRecoilState(apiConfigState);
    const setCanManageFeatureFlags = useSetRecoilState(canManageFeatureFlagsState);
    const setLabPublicFeatureFlags = useSetRecoilState(labPublicFeatureFlagsState);
    const setMicrosoftMessagingEnabled = useSetRecoilState(isMicrosoftMessagingEnabledState);
    const setMicrosoftCalendarEnabled = useSetRecoilState(isMicrosoftCalendarEnabledState);
    const setGoogleMessagingEnabled = useSetRecoilState(isGoogleMessagingEnabledState);
    const setGoogleCalendarEnabled = useSetRecoilState(isGoogleCalendarEnabledState);
    const setIsAttachmentPreviewEnabled = useSetRecoilState(isAttachmentPreviewEnabledState);
    const { data, loading, error } = useGetClientConfigQuery({
        skip: clientConfigApiStatus.isLoaded
    });
    useEffect(()=>{
        if (loading) return;
        setClientConfigApiStatus((currentStatus)=>({
                ...currentStatus,
                isLoaded: true
            }));
        if (error instanceof Error) {
            setClientConfigApiStatus((currentStatus)=>({
                    ...currentStatus,
                    isErrored: true,
                    error
                }));
            return;
        }
        if (!isDefined(data?.clientConfig)) {
            return;
        }
        setClientConfigApiStatus((currentStatus)=>({
                ...currentStatus,
                isErrored: false,
                error: undefined
            }));
        setAuthProviders({
            google: data?.clientConfig.authProviders.google,
            microsoft: data?.clientConfig.authProviders.microsoft,
            password: data?.clientConfig.authProviders.password,
            magicLink: false,
            sso: data?.clientConfig.authProviders.sso
        });
        setIsDebugMode(data?.clientConfig.debugMode);
        setIsAnalyticsEnabled(data?.clientConfig.analyticsEnabled);
        setIsDeveloperDefaultSignInPrefilled(data?.clientConfig.signInPrefilled);
        setIsMultiWorkspaceEnabled(data?.clientConfig.isMultiWorkspaceEnabled);
        setIsEmailVerificationRequired(data?.clientConfig.isEmailVerificationRequired);
        setBilling(data?.clientConfig.billing);
        setSupportChat(data?.clientConfig.support);
        setSentryConfig({
            dsn: data?.clientConfig?.sentry?.dsn,
            release: data?.clientConfig?.sentry?.release,
            environment: data?.clientConfig?.sentry?.environment
        });
        setCaptcha({
            provider: data?.clientConfig?.captcha?.provider,
            siteKey: data?.clientConfig?.captcha?.siteKey
        });
        setChromeExtensionId(data?.clientConfig?.chromeExtensionId);
        setApiConfig(data?.clientConfig?.api);
        setDomainConfiguration({
            defaultSubdomain: data?.clientConfig?.defaultSubdomain,
            frontDomain: data?.clientConfig?.frontDomain
        });
        setCanManageFeatureFlags(data?.clientConfig?.canManageFeatureFlags);
        setLabPublicFeatureFlags(data?.clientConfig?.publicFeatureFlags);
        setMicrosoftMessagingEnabled(data?.clientConfig?.isMicrosoftMessagingEnabled);
        setMicrosoftCalendarEnabled(data?.clientConfig?.isMicrosoftCalendarEnabled);
        setGoogleMessagingEnabled(data?.clientConfig?.isGoogleMessagingEnabled);
        setGoogleCalendarEnabled(data?.clientConfig?.isGoogleCalendarEnabled);
        setIsAttachmentPreviewEnabled(data?.clientConfig?.isAttachmentPreviewEnabled);
    }, [
        data,
        setIsDebugMode,
        setIsDeveloperDefaultSignInPrefilled,
        setIsMultiWorkspaceEnabled,
        setIsEmailVerificationRequired,
        setSupportChat,
        setBilling,
        setSentryConfig,
        loading,
        setClientConfigApiStatus,
        setCaptcha,
        setChromeExtensionId,
        setApiConfig,
        setIsAnalyticsEnabled,
        error,
        setDomainConfiguration,
        setAuthProviders,
        setCanManageFeatureFlags,
        setLabPublicFeatureFlags,
        setMicrosoftMessagingEnabled,
        setMicrosoftCalendarEnabled,
        setGoogleMessagingEnabled,
        setGoogleCalendarEnabled,
        setIsAttachmentPreviewEnabled
    ]);
    return /*#__PURE__*/ _jsxDEV(_Fragment, {}, void 0, false);
};
_s(ClientConfigProviderEffect, "EBndMhi8pP/swvGVsdbGs5hyYvw=", false, function() {
    return [
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useSetRecoilState,
        useGetClientConfigQuery
    ];
});
_c = ClientConfigProviderEffect;
var _c;
$RefreshReg$(_c, "ClientConfigProviderEffect");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/client-config/components/ClientConfigProviderEffect.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/client-config/components/ClientConfigProviderEffect.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,