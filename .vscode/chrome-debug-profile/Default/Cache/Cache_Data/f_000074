import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/action-menu/components/RecordShowRightDrawerOpenRecordButton.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/action-menu/components/RecordShowRightDrawerOpenRecordButton.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { ActionMenuComponentInstanceContext } from "/src/modules/action-menu/states/contexts/ActionMenuComponentInstanceContext.ts";
import { getRightDrawerActionMenuDropdownIdFromActionMenuId } from "/src/modules/action-menu/utils/getRightDrawerActionMenuDropdownIdFromActionMenuId.ts";
import { useCommandMenu } from "/src/modules/command-menu/hooks/useCommandMenu.ts";
import { CommandMenuPageComponentInstanceContext } from "/src/modules/command-menu/states/contexts/CommandMenuPageComponentInstanceContext.tsx";
import { CoreObjectNameSingular } from "/src/modules/object-metadata/types/CoreObjectNameSingular.ts";
import { getLinkToShowPage } from "/src/modules/object-metadata/utils/getLinkToShowPage.ts";
import { recordStoreFamilyState } from "/src/modules/object-record/record-store/states/recordStoreFamilyState.ts";
import { AppPath } from "/src/modules/types/AppPath.ts";
import { useDropdownV2 } from "/src/modules/ui/layout/dropdown/hooks/useDropdownV2.ts";
import { getShowPageTabListComponentId } from "/src/modules/ui/layout/show-page/utils/getShowPageTabListComponentId.ts";
import { activeTabIdComponentState } from "/src/modules/ui/layout/tab/states/activeTabIdComponentState.ts";
import { useScopedHotkeys } from "/src/modules/ui/utilities/hotkey/hooks/useScopedHotkeys.ts";
import { AppHotkeyScope } from "/src/modules/ui/utilities/hotkey/types/AppHotkeyScope.ts";
import { useAvailableComponentInstanceIdOrThrow } from "/src/modules/ui/utilities/state/component-state/hooks/useAvailableComponentInstanceIdOrThrow.ts";
import { useComponentInstanceStateContext } from "/src/modules/ui/utilities/state/component-state/hooks/useComponentInstanceStateContext.ts";
import { useRecoilComponentValueV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentValueV2.ts";
import { useSetRecoilComponentStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useSetRecoilComponentStateV2.ts";
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import __vite__cjsImport20_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useCallback = __vite__cjsImport20_react["useCallback"];
import { Link } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react-router-dom.js?v=226f7286";
import { useRecoilValue } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/recoil.js?v=226f7286";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
import { Button, IconBrowserMaximize, getOsControlSymbol } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { useNavigateApp } from "/src/hooks/useNavigateApp.ts";
const StyledLink = styled(Link)`
  text-decoration: none;
`;
_c = StyledLink;
export const RecordShowRightDrawerOpenRecordButton = ({ objectNameSingular, recordId })=>{
    _s();
    const record = useRecoilValue(recordStoreFamilyState(recordId));
    const { closeCommandMenu } = useCommandMenu();
    const commandMenuPageComponentInstance = useComponentInstanceStateContext(CommandMenuPageComponentInstanceContext);
    const tabListComponentId = getShowPageTabListComponentId({
        pageId: commandMenuPageComponentInstance?.instanceId,
        targetObjectId: recordId
    });
    const activeTabIdInRightDrawer = useRecoilComponentValueV2(activeTabIdComponentState, tabListComponentId);
    const tabListComponentIdInRecordPage = getShowPageTabListComponentId({
        targetObjectId: recordId
    });
    const setActiveTabIdInRecordPage = useSetRecoilComponentStateV2(activeTabIdComponentState, tabListComponentIdInRecordPage);
    const navigate = useNavigateApp();
    const actionMenuId = useAvailableComponentInstanceIdOrThrow(ActionMenuComponentInstanceContext);
    const { closeDropdown } = useDropdownV2();
    const handleOpenRecord = useCallback(()=>{
        const tabIdToOpen = activeTabIdInRightDrawer === 'home' ? objectNameSingular === CoreObjectNameSingular.Note || objectNameSingular === CoreObjectNameSingular.Task ? 'richText' : 'timeline' : activeTabIdInRightDrawer;
        setActiveTabIdInRecordPage(tabIdToOpen);
        navigate(AppPath.RecordShowPage, {
            objectNameSingular,
            objectRecordId: recordId
        });
        closeDropdown(getRightDrawerActionMenuDropdownIdFromActionMenuId(actionMenuId));
        closeCommandMenu();
    }, [
        actionMenuId,
        activeTabIdInRightDrawer,
        closeCommandMenu,
        closeDropdown,
        navigate,
        objectNameSingular,
        recordId,
        setActiveTabIdInRecordPage
    ]);
    useScopedHotkeys([
        'ctrl+Enter,meta+Enter'
    ], handleOpenRecord, AppHotkeyScope.CommandMenuOpen, [
        closeCommandMenu,
        navigate,
        objectNameSingular,
        recordId
    ]);
    if (!isDefined(record)) {
        return null;
    }
    const to = getLinkToShowPage(objectNameSingular, record);
    return /*#__PURE__*/ _jsxDEV(StyledLink, {
        to: to,
        onClick: closeCommandMenu,
        children: /*#__PURE__*/ _jsxDEV(Button, {
            title: "Open",
            variant: "primary",
            accent: "blue",
            size: "medium",
            Icon: IconBrowserMaximize,
            hotkeys: [
                getOsControlSymbol(),
                '⏎'
            ]
        }, void 0, false, {
            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/action-menu/components/RecordShowRightDrawerOpenRecordButton.tsx",
            lineNumber: 122,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/action-menu/components/RecordShowRightDrawerOpenRecordButton.tsx",
        lineNumber: 121,
        columnNumber: 5
    }, this);
};
_s(RecordShowRightDrawerOpenRecordButton, "NRHEzKSvfRK8Tii07B6/oyH0QiU=", false, function() {
    return [
        useRecoilValue,
        useCommandMenu,
        useComponentInstanceStateContext,
        useRecoilComponentValueV2,
        useSetRecoilComponentStateV2,
        useNavigateApp,
        useAvailableComponentInstanceIdOrThrow,
        useDropdownV2,
        useScopedHotkeys
    ];
});
_c1 = RecordShowRightDrawerOpenRecordButton;
var _c, _c1;
$RefreshReg$(_c, "StyledLink");
$RefreshReg$(_c1, "RecordShowRightDrawerOpenRecordButton");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/action-menu/components/RecordShowRightDrawerOpenRecordButton.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/action-menu/components/RecordShowRightDrawerOpenRecordButton.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,