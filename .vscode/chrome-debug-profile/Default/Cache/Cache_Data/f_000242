import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/object-record/record-picker/multiple-record-picker/components/MultipleRecordPickerMenuItems.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-picker/multiple-record-picker/components/MultipleRecordPickerMenuItems.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import { MultipleRecordPickerMenuItem } from "/src/modules/object-record/record-picker/multiple-record-picker/components/MultipleRecordPickerMenuItem.tsx";
import { MultipleRecordPickerComponentInstanceContext } from "/src/modules/object-record/record-picker/multiple-record-picker/states/contexts/MultipleRecordPickerComponentInstanceContext.ts";
import { multipleRecordPickerPickableMorphItemsComponentState } from "/src/modules/object-record/record-picker/multiple-record-picker/states/multipleRecordPickerPickableMorphItemsComponentState.ts";
import { multipleRecordPickerPickableRecordIdsMatchingSearchComponentSelector } from "/src/modules/object-record/record-picker/multiple-record-picker/states/selectors/multipleRecordPickerPickableRecordIdsMatchingSearchComponentSelector.ts";
import { multipleRecordPickerSinglePickableMorphItemComponentFamilySelector } from "/src/modules/object-record/record-picker/multiple-record-picker/states/selectors/multipleRecordPickerSinglePickableMorphItemComponentFamilySelector.ts";
import { MultipleRecordPickerHotkeyScope } from "/src/modules/object-record/record-picker/multiple-record-picker/types/MultipleRecordPickerHotkeyScope.ts";
import { getMultipleRecordPickerSelectableListId } from "/src/modules/object-record/record-picker/multiple-record-picker/utils/getMultipleRecordPickerSelectableListId.ts";
import { DropdownMenuItemsContainer } from "/src/modules/ui/layout/dropdown/components/DropdownMenuItemsContainer.tsx";
import { SelectableItem } from "/src/modules/ui/layout/selectable-list/components/SelectableItem.tsx";
import { SelectableList } from "/src/modules/ui/layout/selectable-list/components/SelectableList.tsx";
import { useSelectableList } from "/src/modules/ui/layout/selectable-list/hooks/useSelectableList.ts";
import { useAvailableComponentInstanceIdOrThrow } from "/src/modules/ui/utilities/state/component-state/hooks/useAvailableComponentInstanceIdOrThrow.ts";
import { useRecoilComponentCallbackStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentCallbackStateV2.ts";
import { useRecoilComponentValueV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentValueV2.ts";
import { useRecoilCallback } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/recoil.js?v=226f7286";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
export const StyledSelectableItem = styled(SelectableItem)`
  height: 100%;
  width: 100%;
`;
export const MultipleRecordPickerMenuItems = ({ onChange })=>{
    _s();
    const componentInstanceId = useAvailableComponentInstanceIdOrThrow(MultipleRecordPickerComponentInstanceContext);
    const selectableListComponentInstanceId = getMultipleRecordPickerSelectableListId(componentInstanceId);
    const pickableRecordIds = useRecoilComponentValueV2(multipleRecordPickerPickableRecordIdsMatchingSearchComponentSelector, componentInstanceId);
    const { resetSelectedItem } = useSelectableList(selectableListComponentInstanceId);
    const singlePickableMorphItemFamilySelector = useRecoilComponentCallbackStateV2(multipleRecordPickerSinglePickableMorphItemComponentFamilySelector, componentInstanceId);
    const multipleRecordPickerPickableMorphItemsState = useRecoilComponentCallbackStateV2(multipleRecordPickerPickableMorphItemsComponentState, componentInstanceId);
    const handleChange = useRecoilCallback(({ snapshot, set })=>{
        return (morphItem)=>{
            const previousMorphItems = snapshot.getLoadable(multipleRecordPickerPickableMorphItemsState).getValue();
            const existingMorphItemIndex = previousMorphItems.findIndex((item)=>item.recordId === morphItem.recordId);
            const newMorphItems = [
                ...previousMorphItems
            ];
            if (existingMorphItemIndex === -1) {
                newMorphItems.push(morphItem);
            } else {
                newMorphItems[existingMorphItemIndex] = morphItem;
            }
            set(multipleRecordPickerPickableMorphItemsState, newMorphItems);
        };
    }, [
        multipleRecordPickerPickableMorphItemsState
    ]);
    const handleEnter = useRecoilCallback(({ snapshot })=>{
        return (selectedId)=>{
            const pickableMorphItem = snapshot.getLoadable(singlePickableMorphItemFamilySelector(selectedId)).getValue();
            if (!isDefined(pickableMorphItem)) {
                return;
            }
            const selectedMorphItem = {
                ...pickableMorphItem,
                isSelected: !pickableMorphItem.isSelected
            };
            handleChange(selectedMorphItem);
            onChange?.(selectedMorphItem);
            resetSelectedItem();
        };
    }, [
        handleChange,
        onChange,
        resetSelectedItem,
        singlePickableMorphItemFamilySelector
    ]);
    return /*#__PURE__*/ _jsxDEV(DropdownMenuItemsContainer, {
        hasMaxHeight: true,
        children: /*#__PURE__*/ _jsxDEV(SelectableList, {
            selectableListId: selectableListComponentInstanceId,
            selectableItemIdArray: pickableRecordIds,
            hotkeyScope: MultipleRecordPickerHotkeyScope.MultipleRecordPicker,
            onEnter: handleEnter,
            children: pickableRecordIds.map((recordId)=>{
                return /*#__PURE__*/ _jsxDEV(MultipleRecordPickerMenuItem, {
                    recordId: recordId,
                    onChange: (morphItem)=>{
                        handleChange(morphItem);
                        onChange?.(morphItem);
                        resetSelectedItem();
                    }
                }, recordId, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-picker/multiple-record-picker/components/MultipleRecordPickerMenuItems.tsx",
                    lineNumber: 124,
                    columnNumber: 13
                }, this);
            })
        }, void 0, false, {
            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-picker/multiple-record-picker/components/MultipleRecordPickerMenuItems.tsx",
            lineNumber: 116,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-picker/multiple-record-picker/components/MultipleRecordPickerMenuItems.tsx",
        lineNumber: 115,
        columnNumber: 5
    }, this);
};
_s(MultipleRecordPickerMenuItems, "O26FD4GDSnHjhFNwJRmXvnP8uVo=", false, function() {
    return [
        useAvailableComponentInstanceIdOrThrow,
        useRecoilComponentValueV2,
        useSelectableList,
        useRecoilComponentCallbackStateV2,
        useRecoilComponentCallbackStateV2,
        useRecoilCallback,
        useRecoilCallback
    ];
});
_c = MultipleRecordPickerMenuItems;
var _c;
$RefreshReg$(_c, "MultipleRecordPickerMenuItems");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-picker/multiple-record-picker/components/MultipleRecordPickerMenuItems.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-picker/multiple-record-picker/components/MultipleRecordPickerMenuItems.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,