import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/D:/twenty-table-o/packages/twenty-ui/src/input/button/components/Button/Button.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-ui/src/input/button/components/Button/Button.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import isPropValid from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_is-prop-valid.js?v=226f7286";
import { css } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react.js?v=226f7286";
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import { ButtonHotkeys } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/input/button/components/Button/internal/ButtonHotKeys.tsx";
import { ButtonIcon } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/input/button/components/Button/internal/ButtonIcon.tsx";
import { ButtonSoon } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/input/button/components/Button/internal/ButtonSoon.tsx";
import { useIsMobile } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/utilities/index.ts";
import __vite__cjsImport9_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const React = __vite__cjsImport9_react.__esModule ? __vite__cjsImport9_react.default : __vite__cjsImport9_react; const useState = __vite__cjsImport9_react["useState"];
import { Link } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react-router-dom.js?v=226f7286";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
import { ButtonText } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/input/button/components/Button/internal/ButtonText.tsx";
const StyledButton = styled('button', {
    shouldForwardProp: (prop)=>![
            'fullWidth'
        ].includes(prop) && isPropValid(prop)
})`
  align-items: center;
  ${({ theme, variant, inverted, accent, disabled, focus })=>{
    switch(variant){
        case 'primary':
            switch(accent){
                case 'default':
                    return css`
              background: ${!inverted ? theme.background.secondary : theme.background.primary};
              border-color: ${!inverted ? !disabled && focus ? theme.color.blue : theme.background.transparent.light : theme.background.transparent.light};
              border-width: 1px 1px 1px 1px !important;
              box-shadow: ${!disabled && focus ? `0 0 0 3px ${!inverted ? theme.accent.tertiary : theme.background.transparent.medium}` : 'none'};
              color: ${!inverted ? !disabled ? theme.font.color.secondary : theme.font.color.extraLight : theme.font.color.secondary};
              &:hover {
                background: ${!inverted ? theme.background.tertiary : theme.background.secondary};
              }
              &:active {
                background: ${!inverted ? theme.background.quaternary : theme.background.tertiary};
              }
            `;
                case 'blue':
                    return css`
              background: ${!inverted ? theme.color.blue : theme.background.primary};
              border-color: ${!inverted ? focus ? theme.color.blue : theme.background.transparent.light : theme.background.transparent.light};
              border-width: 1px 1px 1px 1px !important;
              box-shadow: ${!disabled && focus ? `0 0 0 3px ${!inverted ? theme.accent.tertiary : theme.background.transparent.medium}` : 'none'};
              color: ${!inverted ? theme.grayScale.gray0 : theme.color.blue};
              ${disabled ? '' : css`
                    &:hover {
                      background: ${!inverted ? theme.color.blue50 : theme.background.secondary};
                    }
                    &:active {
                      background: ${!inverted ? theme.color.blue60 : theme.background.tertiary};
                    }
                  `}
            `;
                case 'danger':
                    return css`
              background: ${!inverted ? theme.color.red : theme.background.primary};
              border-color: ${!inverted ? focus ? theme.color.red : theme.background.transparent.light : theme.background.transparent.light};
              border-width: 1px 1px !important;
              box-shadow: ${!disabled && focus ? `0 0 0 3px ${!inverted ? theme.color.red10 : theme.background.transparent.medium}` : 'none'};
              color: ${!inverted ? theme.background.primary : theme.color.red};
              ${disabled ? '' : css`
                    &:hover {
                      background: ${!inverted ? theme.color.red40 : theme.background.secondary};
                    }
                    &:active {
                      background: ${!inverted ? theme.color.red50 : theme.background.tertiary};
                    }
                  `}
            `;
            }
            break;
        case 'secondary':
        case 'tertiary':
            switch(accent){
                case 'default':
                    return css`
              background: transparent;
              border-color: ${!inverted ? variant === 'secondary' ? !disabled && focus ? theme.color.blue : theme.background.transparent.medium : focus ? theme.color.blue : 'transparent' : variant === 'secondary' ? focus || disabled ? theme.grayScale.gray0 : theme.background.transparent.primary : focus ? theme.grayScale.gray0 : 'transparent'};
              border-width: 1px 1px 1px 1px !important;
              box-shadow: ${!disabled && focus ? `0 0 0 3px ${!inverted ? theme.accent.tertiary : theme.background.transparent.medium}` : 'none'};
              color: ${!inverted ? !disabled ? theme.font.color.secondary : theme.font.color.extraLight : theme.font.color.inverted};
              &:hover {
                background: ${!inverted ? !disabled ? theme.background.transparent.light : 'transparent' : theme.background.transparent.light};
              }
              &:active {
                background: ${!inverted ? !disabled ? theme.background.transparent.light : 'transparent' : theme.background.transparent.medium};
              }
            `;
                case 'blue':
                    return css`
              background: transparent;
              border-color: ${!inverted ? variant === 'secondary' ? focus ? theme.color.blue : theme.accent.primary : focus ? theme.color.blue : 'transparent' : variant === 'secondary' ? focus || disabled ? theme.grayScale.gray0 : theme.background.transparent.primary : focus ? theme.grayScale.gray0 : 'transparent'};
              border-width: 1px 1px 1px 1px !important;
              box-shadow: ${!disabled && focus ? `0 0 0 3px ${!inverted ? theme.accent.tertiary : theme.background.transparent.medium}` : 'none'};
              color: ${!inverted ? !disabled ? theme.color.blue : theme.accent.accent4060 : theme.font.color.inverted};
              &:hover {
                background: ${!inverted ? !disabled ? theme.accent.tertiary : 'transparent' : theme.background.transparent.light};
              }
              &:active {
                background: ${!inverted ? !disabled ? theme.accent.secondary : 'transparent' : theme.background.transparent.medium};
              }
            `;
                case 'danger':
                    return css`
              background: transparent;
              border-color: ${!inverted ? variant === 'secondary' ? focus ? theme.color.red : theme.border.color.danger : focus ? theme.color.red : 'transparent' : variant === 'secondary' ? focus || disabled ? theme.grayScale.gray0 : theme.background.transparent.primary : focus ? theme.grayScale.gray0 : 'transparent'};
              border-width: 1px 1px 1px 1px !important;
              box-shadow: ${!disabled && focus ? `0 0 0 3px ${!inverted ? theme.color.red10 : theme.background.transparent.medium}` : 'none'};
              color: ${!inverted ? theme.font.color.danger : theme.font.color.inverted};
              &:hover {
                background: ${!inverted ? !disabled ? theme.background.danger : 'transparent' : theme.background.transparent.light};
              }
              &:active {
                background: ${!inverted ? !disabled ? theme.background.danger : 'transparent' : theme.background.transparent.medium};
              }
            `;
            }
    }
}}

  text-decoration: none;
  border-radius: ${({ position, theme })=>{
    switch(position){
        case 'left':
            return `${theme.border.radius.sm} 0px 0px ${theme.border.radius.sm}`;
        case 'right':
            return `0px ${theme.border.radius.sm} ${theme.border.radius.sm} 0px`;
        case 'middle':
            return '0px';
        case 'standalone':
            return theme.border.radius.sm;
    }
}};
  border-style: solid;
  border-width: ${({ variant, position })=>{
    switch(variant){
        case 'primary':
        case 'secondary':
            return position === 'middle' ? '1px 0px' : '1px';
        case 'tertiary':
            return '0';
    }
}};
  cursor: ${({ disabled })=>disabled ? 'not-allowed' : 'pointer'};
  display: flex;
  flex-direction: row;
  font-family: ${({ theme })=>theme.font.family};
  font-weight: 500;
  font-size: ${({ theme })=>theme.font.size.md};
  gap: ${({ theme })=>theme.spacing(1)};
  height: ${({ size })=>size === 'small' ? '24px' : '32px'};
  justify-content: ${({ justify })=>justify};
  padding: ${({ theme })=>{
    return `0 ${theme.spacing(2)} 0 ${theme.spacing(2)}`;
}};

  transition: background 0.1s ease;

  white-space: nowrap;

  width: ${({ fullWidth })=>fullWidth ? '100%' : 'auto'};

  &:focus {
    outline: none;
  }
`;
_c = StyledButton;
const StyledButtonWrapper = styled.div`
  ${({ theme, variant, accent, inverted, disabled })=>css`
    --tw-button-color: ${(()=>{
        switch(variant){
            case 'primary':
                switch(accent){
                    case 'default':
                        return !inverted ? !disabled ? theme.font.color.secondary : theme.font.color.extraLight : theme.font.color.secondary;
                    case 'blue':
                        return !inverted ? theme.grayScale.gray0 : theme.color.blue;
                    case 'danger':
                        return !inverted ? theme.background.primary : theme.color.red;
                }
                break;
            case 'secondary':
            case 'tertiary':
                switch(accent){
                    case 'default':
                        return !inverted ? !disabled ? theme.font.color.secondary : theme.font.color.extraLight : theme.font.color.inverted;
                    case 'blue':
                        return !inverted ? !disabled ? theme.color.blue : theme.accent.accent4060 : theme.font.color.inverted;
                    case 'danger':
                        return !inverted ? theme.font.color.danger : theme.font.color.inverted;
                }
                break;
        }
        return theme.font.color.secondary; // Valeur par défaut
    })()};
  `}

  max-width: ${({ isLoading, theme })=>isLoading ? `calc(100% - ${theme.spacing(8)})` : 'none'};

  position: relative;
  width: ${({ fullWidth })=>fullWidth ? '100%' : 'auto'};
`;
_c1 = StyledButtonWrapper;
export const Button = ({ className, Icon, title, fullWidth = false, variant = 'primary', inverted = false, size = 'medium', accent = 'default', position = 'standalone', soon = false, disabled = false, justify = 'flex-start', focus: propFocus = false, onClick, to, target, dataTestId, hotkeys, ariaLabel, type, isLoading = false })=>{
    _s();
    const isMobile = useIsMobile();
    const [isFocused, setIsFocused] = useState(propFocus);
    return /*#__PURE__*/ _jsxDEV(StyledButtonWrapper, {
        isLoading: !!isLoading,
        variant: variant,
        accent: accent,
        inverted: inverted,
        disabled: soon || disabled,
        fullWidth: fullWidth,
        children: /*#__PURE__*/ _jsxDEV(StyledButton, {
            fullWidth: fullWidth,
            variant: variant,
            inverted: inverted,
            position: position,
            disabled: soon || disabled,
            hasIcon: !!Icon,
            focus: isFocused,
            justify: justify,
            accent: accent,
            className: className,
            onClick: onClick,
            to: to,
            as: to ? Link : 'button',
            target: target,
            "data-testid": dataTestId,
            "aria-label": ariaLabel,
            type: type,
            isLoading: isLoading,
            onFocus: ()=>setIsFocused(true),
            onBlur: ()=>setIsFocused(false),
            size: size,
            children: [
                (isLoading || Icon) && /*#__PURE__*/ _jsxDEV(ButtonIcon, {
                    Icon: Icon,
                    isLoading: !!isLoading
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-ui/src/input/button/components/Button/Button.tsx",
                    lineNumber: 475,
                    columnNumber: 11
                }, this),
                isDefined(title) && /*#__PURE__*/ _jsxDEV(ButtonText, {
                    hasIcon: !!Icon,
                    title: title,
                    isLoading: isLoading
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-ui/src/input/button/components/Button/Button.tsx",
                    lineNumber: 478,
                    columnNumber: 11
                }, this),
                hotkeys && !isMobile && /*#__PURE__*/ _jsxDEV(ButtonHotkeys, {
                    hotkeys: hotkeys,
                    variant: variant,
                    accent: accent,
                    size: size
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-ui/src/input/button/components/Button/Button.tsx",
                    lineNumber: 481,
                    columnNumber: 11
                }, this),
                soon && /*#__PURE__*/ _jsxDEV(ButtonSoon, {}, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-ui/src/input/button/components/Button/Button.tsx",
                    lineNumber: 488,
                    columnNumber: 18
                }, this)
            ]
        }, void 0, true, {
            fileName: "D:/twenty-table-o/packages/twenty-ui/src/input/button/components/Button/Button.tsx",
            lineNumber: 451,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "D:/twenty-table-o/packages/twenty-ui/src/input/button/components/Button/Button.tsx",
        lineNumber: 443,
        columnNumber: 5
    }, this);
};
_s(Button, "ZiIYcImxFToMqat9fm0XxsUyO9U=", false, function() {
    return [
        useIsMobile
    ];
});
_c2 = Button;
var _c, _c1, _c2;
$RefreshReg$(_c, "StyledButton");
$RefreshReg$(_c1, "StyledButtonWrapper");
$RefreshReg$(_c2, "Button");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-ui/src/input/button/components/Button/Button.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-ui/src/input/button/components/Button/Button.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,