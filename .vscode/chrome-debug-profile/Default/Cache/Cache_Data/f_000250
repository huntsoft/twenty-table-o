import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownFilterSelectCompositeFieldSubMenu.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownFilterSelectCompositeFieldSubMenu.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { getFilterTypeFromFieldType } from "/src/modules/object-metadata/utils/formatFieldMetadataItemsAsFilterDefinitions.ts";
import { fieldMetadataItemIdUsedInDropdownComponentState } from "/src/modules/object-record/object-filter-dropdown/states/fieldMetadataItemIdUsedInDropdownComponentState.ts";
import { fieldMetadataItemUsedInDropdownComponentSelector } from "/src/modules/object-record/object-filter-dropdown/states/fieldMetadataItemUsedInDropdownComponentSelector.ts";
import { objectFilterDropdownFilterIsSelectedComponentState } from "/src/modules/object-record/object-filter-dropdown/states/objectFilterDropdownFilterIsSelectedComponentState.ts";
import { objectFilterDropdownIsSelectingCompositeFieldComponentState } from "/src/modules/object-record/object-filter-dropdown/states/objectFilterDropdownIsSelectingCompositeFieldComponentState.ts";
import { objectFilterDropdownSearchInputComponentState } from "/src/modules/object-record/object-filter-dropdown/states/objectFilterDropdownSearchInputComponentState.ts";
import { objectFilterDropdownSubMenuFieldTypeComponentState } from "/src/modules/object-record/object-filter-dropdown/states/objectFilterDropdownSubMenuFieldTypeComponentState.ts";
import { selectedFilterComponentState } from "/src/modules/object-record/object-filter-dropdown/states/selectedFilterComponentState.ts";
import { selectedOperandInDropdownComponentState } from "/src/modules/object-record/object-filter-dropdown/states/selectedOperandInDropdownComponentState.ts";
import { subFieldNameUsedInDropdownComponentState } from "/src/modules/object-record/object-filter-dropdown/states/subFieldNameUsedInDropdownComponentState.ts";
import { getCompositeSubFieldLabel } from "/src/modules/object-record/object-filter-dropdown/utils/getCompositeSubFieldLabel.ts";
import { getFilterableFieldTypeLabel } from "/src/modules/object-record/object-filter-dropdown/utils/getFilterableFieldTypeLabel.ts";
import { currentRecordFiltersComponentState } from "/src/modules/object-record/record-filter/states/currentRecordFiltersComponentState.ts";
import { findDuplicateRecordFilterInNonAdvancedRecordFilters } from "/src/modules/object-record/record-filter/utils/findDuplicateRecordFilterInNonAdvancedRecordFilters.ts";
import { getRecordFilterOperands } from "/src/modules/object-record/record-filter/utils/getRecordFilterOperands.ts";
import { SETTINGS_COMPOSITE_FIELD_TYPE_CONFIGS } from "/src/modules/settings/data-model/constants/SettingsCompositeFieldTypeConfigs.ts";
import { DropdownMenuHeader } from "/src/modules/ui/layout/dropdown/components/DropdownMenuHeader/DropdownMenuHeader.tsx";
import { DropdownMenuHeaderLeftComponent } from "/src/modules/ui/layout/dropdown/components/DropdownMenuHeader/internal/DropdownMenuHeaderLeftComponent.tsx";
import { DropdownMenuItemsContainer } from "/src/modules/ui/layout/dropdown/components/DropdownMenuItemsContainer.tsx";
import { useRecoilComponentStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentStateV2.ts";
import { useRecoilComponentValueV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentValueV2.ts";
import { useSetRecoilComponentStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useSetRecoilComponentStateV2.ts";
import __vite__cjsImport24_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useState = __vite__cjsImport24_react["useState"];
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
import { IconApps, IconChevronLeft, MenuItem, useIcons } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
export const ObjectFilterDropdownFilterSelectCompositeFieldSubMenu = ()=>{
    _s();
    const [searchText] = useState('');
    const { getIcon } = useIcons();
    const fieldMetadataItemUsedInDropdown = useRecoilComponentValueV2(fieldMetadataItemUsedInDropdownComponentSelector);
    const setSubFieldNameUsedInDropdown = useSetRecoilComponentStateV2(subFieldNameUsedInDropdownComponentState);
    const [, setObjectFilterDropdownFilterIsSelected] = useRecoilComponentStateV2(objectFilterDropdownFilterIsSelectedComponentState);
    const [, setObjectFilterDropdownIsSelectingCompositeField] = useRecoilComponentStateV2(objectFilterDropdownIsSelectingCompositeFieldComponentState);
    const [objectFilterDropdownSubMenuFieldType, setObjectFilterDropdownSubMenuFieldType] = useRecoilComponentStateV2(objectFilterDropdownSubMenuFieldTypeComponentState);
    const setFieldMetadataItemIdUsedInDropdown = useSetRecoilComponentStateV2(fieldMetadataItemIdUsedInDropdownComponentState);
    const setSelectedOperandInDropdown = useSetRecoilComponentStateV2(selectedOperandInDropdownComponentState);
    const setObjectFilterDropdownSearchInput = useSetRecoilComponentStateV2(objectFilterDropdownSearchInputComponentState);
    const currentRecordFilters = useRecoilComponentValueV2(currentRecordFiltersComponentState);
    const setSelectedFilter = useSetRecoilComponentStateV2(selectedFilterComponentState);
    const handleSelectFilter = (fieldMetadataItem, subFieldName)=>{
        if (!isDefined(fieldMetadataItem)) {
            return;
        }
        const type = getFilterTypeFromFieldType(fieldMetadataItem.type);
        const defaultOperand = getRecordFilterOperands({
            filterType: type,
            subFieldName: subFieldName
        })[0];
        setFieldMetadataItemIdUsedInDropdown(fieldMetadataItem.id);
        setSubFieldNameUsedInDropdown(subFieldName);
        setObjectFilterDropdownSearchInput('');
        setObjectFilterDropdownFilterIsSelected(true);
        const duplicateFilterInCurrentRecordFilters = findDuplicateRecordFilterInNonAdvancedRecordFilters({
            recordFilters: currentRecordFilters,
            fieldMetadataItemId: fieldMetadataItem.id,
            subFieldName
        });
        const filterIsAlreadyInCurrentRecordFilters = isDefined(duplicateFilterInCurrentRecordFilters);
        if (filterIsAlreadyInCurrentRecordFilters) {
            setSelectedFilter({
                ...duplicateFilterInCurrentRecordFilters
            });
            setSelectedOperandInDropdown(duplicateFilterInCurrentRecordFilters.operand);
        } else {
            setSelectedOperandInDropdown(defaultOperand);
        }
    };
    const handleSubMenuBack = ()=>{
        setFieldMetadataItemIdUsedInDropdown(null);
        setObjectFilterDropdownSubMenuFieldType(null);
        setObjectFilterDropdownIsSelectingCompositeField(false);
        setObjectFilterDropdownFilterIsSelected(false);
        setSubFieldNameUsedInDropdown(null);
    };
    if (!isDefined(objectFilterDropdownSubMenuFieldType)) {
        return null;
    }
    const options = SETTINGS_COMPOSITE_FIELD_TYPE_CONFIGS[objectFilterDropdownSubMenuFieldType].filterableSubFields.sort((a, b)=>a.localeCompare(b)).filter((item)=>item.toLocaleLowerCase().includes(searchText.toLocaleLowerCase()));
    return /*#__PURE__*/ _jsxDEV(_Fragment, {
        children: [
            /*#__PURE__*/ _jsxDEV(DropdownMenuHeader, {
                StartComponent: /*#__PURE__*/ _jsxDEV(DropdownMenuHeaderLeftComponent, {
                    onClick: handleSubMenuBack,
                    Icon: IconChevronLeft
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownFilterSelectCompositeFieldSubMenu.tsx",
                    lineNumber: 148,
                    columnNumber: 11
                }, void 0),
                children: getFilterableFieldTypeLabel(objectFilterDropdownSubMenuFieldType)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownFilterSelectCompositeFieldSubMenu.tsx",
                lineNumber: 146,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuItemsContainer, {
                children: [
                    /*#__PURE__*/ _jsxDEV(MenuItem, {
                        testId: `select-filter-${-1}`,
                        onClick: ()=>{
                            handleSelectFilter(fieldMetadataItemUsedInDropdown);
                        },
                        LeftIcon: IconApps,
                        text: `Any ${getFilterableFieldTypeLabel(objectFilterDropdownSubMenuFieldType)} field`
                    }, `select-filter-${-1}`, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownFilterSelectCompositeFieldSubMenu.tsx",
                        lineNumber: 165,
                        columnNumber: 9
                    }, this),
                    fieldMetadataItemUsedInDropdown?.type === 'ACTOR' && options.map((subFieldName, index)=>/*#__PURE__*/ _jsxDEV(MenuItem, {
                            testId: `select-filter-${index}`,
                            onClick: ()=>{
                                if (isDefined(fieldMetadataItemUsedInDropdown)) {
                                    handleSelectFilter(fieldMetadataItemUsedInDropdown, subFieldName);
                                }
                            },
                            text: getCompositeSubFieldLabel(objectFilterDropdownSubMenuFieldType, subFieldName),
                            LeftIcon: getIcon(fieldMetadataItemUsedInDropdown?.icon)
                        }, `select-filter-${index}`, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownFilterSelectCompositeFieldSubMenu.tsx",
                            lineNumber: 177,
                            columnNumber: 13
                        }, this))
                ]
            }, void 0, true, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownFilterSelectCompositeFieldSubMenu.tsx",
                lineNumber: 164,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true);
};
_s(ObjectFilterDropdownFilterSelectCompositeFieldSubMenu, "3c8nuDn0f5SUgTOFEISGkQSymmM=", false, function() {
    return [
        useIcons,
        useRecoilComponentValueV2,
        useSetRecoilComponentStateV2,
        useRecoilComponentStateV2,
        useRecoilComponentStateV2,
        useRecoilComponentStateV2,
        useSetRecoilComponentStateV2,
        useSetRecoilComponentStateV2,
        useSetRecoilComponentStateV2,
        useRecoilComponentValueV2,
        useSetRecoilComponentStateV2
    ];
});
_c = ObjectFilterDropdownFilterSelectCompositeFieldSubMenu;
var _c;
$RefreshReg$(_c, "ObjectFilterDropdownFilterSelectCompositeFieldSubMenu");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownFilterSelectCompositeFieldSubMenu.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownFilterSelectCompositeFieldSubMenu.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,