import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/object-record/record-inline-cell/components/RecordInlineCellContainer.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-inline-cell/components/RecordInlineCellContainer.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { useTheme } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react.js?v=226f7286";
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import __vite__cjsImport4_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useContext = __vite__cjsImport4_react["useContext"];
import { AppTooltip, OverflowingTextWithTooltip, TooltipDelay } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { FieldContext } from "/src/modules/object-record/record-field/contexts/FieldContext.ts";
import { useFieldFocus } from "/src/modules/object-record/record-field/hooks/useFieldFocus.ts";
import { RecordInlineCellValue } from "/src/modules/object-record/record-inline-cell/components/RecordInlineCellValue.tsx";
import { getRecordFieldInputId } from "/src/modules/object-record/utils/getRecordFieldInputId.ts";
import { assertFieldMetadata } from "/src/modules/object-record/record-field/types/guards/assertFieldMetadata.ts";
import { isFieldText } from "/src/modules/object-record/record-field/types/guards/isFieldText.ts";
import { FieldMetadataType } from "/src/generated-metadata/graphql.ts";
import { useRecordInlineCellContext } from "/src/modules/object-record/record-inline-cell/components/RecordInlineCellContext.tsx";
const StyledIconContainer = styled.div`
  align-items: center;
  color: ${({ theme })=>theme.font.color.tertiary};
  display: flex;
  width: 16px;

  svg {
    align-items: center;
    display: flex;
    height: 16px;
    justify-content: center;
    width: 16px;
  }
`;
_c = StyledIconContainer;
const StyledLabelAndIconContainer = styled.div`
  align-items: center;
  color: ${({ theme })=>theme.font.color.tertiary};
  display: flex;
  gap: ${({ theme })=>theme.spacing(1)};
  height: 18px;
  padding-top: 3px;
`;
_c1 = StyledLabelAndIconContainer;
const StyledValueContainer = styled.div`
  display: flex;
  flex-grow: 1;
  min-width: 0;
  position: relative;
`;
_c2 = StyledValueContainer;
const StyledLabelContainer = styled.div`
  color: ${({ theme })=>theme.font.color.tertiary};
  font-size: ${({ theme })=>theme.font.size.sm};
  width: ${({ width })=>width}px;
`;
_c3 = StyledLabelContainer;
const StyledInlineCellBaseContainer = styled.div`
  box-sizing: border-box;
  width: 100%;
  display: flex;
  height: fit-content;
  gap: ${({ theme })=>theme.spacing(1)};
  user-select: none;
  align-items: center;
  justify-content: center;
`;
_c4 = StyledInlineCellBaseContainer;
export const StyledSkeletonDiv = styled.div`
  height: 24px;
`;
export const RecordInlineCellContainer = ()=>{
    _s();
    const { readonly, IconLabel, label, labelWidth, showLabel } = useRecordInlineCellContext();
    const { recordId, fieldDefinition } = useContext(FieldContext);
    if (isFieldText(fieldDefinition)) {
        assertFieldMetadata(FieldMetadataType.TEXT, isFieldText, fieldDefinition);
    }
    const { setIsFocused } = useFieldFocus();
    const handleContainerMouseEnter = ()=>{
        if (!readonly) {
            setIsFocused(true);
        }
    };
    const handleContainerMouseLeave = ()=>{
        if (!readonly) {
            setIsFocused(false);
        }
    };
    const theme = useTheme();
    const labelId = `label-${getRecordFieldInputId(recordId, fieldDefinition?.metadata?.fieldName)}`;
    return /*#__PURE__*/ _jsxDEV(StyledInlineCellBaseContainer, {
        onMouseEnter: handleContainerMouseEnter,
        onMouseLeave: handleContainerMouseLeave,
        children: [
            (IconLabel || label) && /*#__PURE__*/ _jsxDEV(StyledLabelAndIconContainer, {
                id: labelId,
                children: [
                    IconLabel && /*#__PURE__*/ _jsxDEV(StyledIconContainer, {
                        children: /*#__PURE__*/ _jsxDEV(IconLabel, {
                            stroke: theme.icon.stroke.sm
                        }, void 0, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-inline-cell/components/RecordInlineCellContainer.tsx",
                            lineNumber: 111,
                            columnNumber: 15
                        }, this)
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-inline-cell/components/RecordInlineCellContainer.tsx",
                        lineNumber: 110,
                        columnNumber: 13
                    }, this),
                    showLabel && label && /*#__PURE__*/ _jsxDEV(StyledLabelContainer, {
                        width: labelWidth,
                        children: /*#__PURE__*/ _jsxDEV(OverflowingTextWithTooltip, {
                            text: label,
                            displayedMaxRows: 1
                        }, void 0, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-inline-cell/components/RecordInlineCellContainer.tsx",
                            lineNumber: 116,
                            columnNumber: 15
                        }, this)
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-inline-cell/components/RecordInlineCellContainer.tsx",
                        lineNumber: 115,
                        columnNumber: 13
                    }, this),
                    !showLabel && !fieldDefinition?.disableTooltip && /*#__PURE__*/ _jsxDEV(AppTooltip, {
                        anchorSelect: `#${labelId}`,
                        content: label,
                        clickable: true,
                        noArrow: true,
                        place: "bottom",
                        positionStrategy: "fixed",
                        delay: TooltipDelay.shortDelay
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-inline-cell/components/RecordInlineCellContainer.tsx",
                        lineNumber: 121,
                        columnNumber: 13
                    }, this)
                ]
            }, void 0, true, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-inline-cell/components/RecordInlineCellContainer.tsx",
                lineNumber: 108,
                columnNumber: 9
            }, this),
            /*#__PURE__*/ _jsxDEV(StyledValueContainer, {
                children: /*#__PURE__*/ _jsxDEV(RecordInlineCellValue, {}, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-inline-cell/components/RecordInlineCellContainer.tsx",
                    lineNumber: 134,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-inline-cell/components/RecordInlineCellContainer.tsx",
                lineNumber: 133,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-inline-cell/components/RecordInlineCellContainer.tsx",
        lineNumber: 103,
        columnNumber: 5
    }, this);
};
_s(RecordInlineCellContainer, "IVTKzATjrIYbXpcvNw34SAcUUEk=", false, function() {
    return [
        useRecordInlineCellContext,
        useFieldFocus,
        useTheme
    ];
});
_c5 = RecordInlineCellContainer;
var _c, _c1, _c2, _c3, _c4, _c5;
$RefreshReg$(_c, "StyledIconContainer");
$RefreshReg$(_c1, "StyledLabelAndIconContainer");
$RefreshReg$(_c2, "StyledValueContainer");
$RefreshReg$(_c3, "StyledLabelContainer");
$RefreshReg$(_c4, "StyledInlineCellBaseContainer");
$RefreshReg$(_c5, "RecordInlineCellContainer");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-inline-cell/components/RecordInlineCellContainer.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-inline-cell/components/RecordInlineCellContainer.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,