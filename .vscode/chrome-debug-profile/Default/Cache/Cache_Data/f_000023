import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/@fs/D:/twenty-table-o/packages/twenty-ui/src/display/tooltip/OverflowingTextWithTooltip.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-ui/src/display/tooltip/OverflowingTextWithTooltip.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
import * as RefreshRuntime from "/@react-refresh";
import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { styled } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@linaria_react.js?v=226f7286";
import __vite__cjsImport3_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useRef = __vite__cjsImport3_react["useRef"]; const useState = __vite__cjsImport3_react["useState"];
import __vite__cjsImport4_reactDom from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react-dom.js?v=226f7286"; const createPortal = __vite__cjsImport4_reactDom["createPortal"];
import { THEME_COMMON } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/theme/index.ts";
import { AppTooltip, TooltipDelay } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/display/tooltip/AppTooltip.tsx";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
const spacing4 = THEME_COMMON.spacing(4);
const _exp = /*#__PURE__*/() => ({
  cursorPointer
}) => cursorPointer ? 'pointer' : 'inherit';
const _exp2 = /*#__PURE__*/() => ({
  size
}) => size === 'large' ? spacing4 : 'auto';
const _exp3 = /*#__PURE__*/() => ({
  displayedMaxRows
}) => displayedMaxRows ? displayedMaxRows.toString() : '1';
const _exp4 = /*#__PURE__*/() => ({
  cursorPointer
}) => cursorPointer ? 'clip' : 'ellipsis';
const _exp5 = /*#__PURE__*/() => ({
  cursorPointer
}) => cursorPointer ? 'normal' : 'nowrap';
const StyledOverflowingMultilineText = /*#__PURE__*/styled('div')({
  name: "StyledOverflowingMultilineText",
  class: "sc23kcg",
  propsAsIs: false,
  vars: {
    "sc23kcg-0": [_exp()],
    "sc23kcg-1": [_exp2()],
    "sc23kcg-2": [_exp3()],
    "sc23kcg-3": [_exp4()],
    "sc23kcg-4": [_exp5()]
  }
});
_c = StyledOverflowingMultilineText;
const _exp6 = /*#__PURE__*/() => ({
  cursorPointer
}) => cursorPointer ? 'pointer' : 'inherit';
const _exp7 = /*#__PURE__*/() => ({
  size
}) => size === 'large' ? spacing4 : 'auto';
const _exp8 = /*#__PURE__*/() => ({
  cursorPointer
}) => cursorPointer ? 'clip' : 'ellipsis';
const _exp9 = /*#__PURE__*/() => ({
  cursorPointer
}) => cursorPointer ? 'normal' : 'nowrap';
const StyledOverflowingText = /*#__PURE__*/styled('div')({
  name: "StyledOverflowingText",
  class: "s1ddvtyy",
  propsAsIs: false,
  vars: {
    "s1ddvtyy-0": [_exp6()],
    "s1ddvtyy-1": [_exp7()],
    "s1ddvtyy-2": [_exp8()],
    "s1ddvtyy-3": [_exp9()]
  }
});
_c1 = StyledOverflowingText;
const Styledpre = /*#__PURE__*/styled('pre')({
  name: "Styledpre",
  class: "s2jhmrv",
  propsAsIs: false
});
_c2 = Styledpre;
export const OverflowingTextWithTooltip = ({
  size = 'small',
  text,
  isTooltipMultiline,
  displayedMaxRows,
  hideTooltip
}) => {
  _s();
  const textElementId = `title-id-${+new Date()}`;
  const textRef = useRef(null);
  const [isTitleOverflowing, setIsTitleOverflowing] = useState(false);
  const [shouldRenderTooltip, setShouldRenderTooltip] = useState(false);
  const handleMouseEnter = () => {
    const isOverflowing = (text?.length ?? 0) > 0 && textRef.current ? textRef.current?.scrollHeight > textRef.current?.clientHeight || textRef.current.scrollWidth > textRef.current.clientWidth : false;
    setIsTitleOverflowing(isOverflowing);
    setShouldRenderTooltip(true);
  };
  const handleMouseLeave = () => {
    setIsTitleOverflowing(false);
    setShouldRenderTooltip(false);
  };
  const handleTooltipClick = event => {
    event.stopPropagation();
    event.preventDefault();
  };
  return /*#__PURE__*/_jsxDEV(_Fragment, {
    children: [isDefined(displayedMaxRows) && /*#__PURE__*/_jsxDEV(StyledOverflowingMultilineText, {
      "data-testid": "tooltip",
      cursorPointer: isTitleOverflowing,
      size: size,
      displayedMaxRows: displayedMaxRows,
      ref: textRef,
      id: textElementId,
      onMouseEnter: handleMouseEnter,
      onMouseLeave: handleMouseLeave,
      children: text
    }, void 0, false, {
      fileName: "D:/twenty-table-o/packages/twenty-ui/src/display/tooltip/OverflowingTextWithTooltip.tsx",
      lineNumber: 116,
      columnNumber: 9
    }, this), !isDefined(displayedMaxRows) && /*#__PURE__*/_jsxDEV(StyledOverflowingText, {
      "data-testid": "tooltip",
      cursorPointer: isTitleOverflowing,
      size: size,
      ref: textRef,
      id: textElementId,
      onMouseEnter: handleMouseEnter,
      onMouseLeave: handleMouseLeave,
      children: text
    }, void 0, false, {
      fileName: "D:/twenty-table-o/packages/twenty-ui/src/display/tooltip/OverflowingTextWithTooltip.tsx",
      lineNumber: 130,
      columnNumber: 9
    }, this), shouldRenderTooltip && isTitleOverflowing && /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV("div", {
      onClick: handleTooltipClick,
      children: /*#__PURE__*/_jsxDEV(AppTooltip, {
        anchorSelect: `#${textElementId}`,
        offset: 5,
        hidden: !isTitleOverflowing || hideTooltip,
        noArrow: true,
        place: "bottom",
        positionStrategy: "absolute",
        delay: TooltipDelay.mediumDelay,
        isOpen: true,
        children: isTooltipMultiline ? /*#__PURE__*/_jsxDEV(Styledpre, {
          children: text
        }, void 0, false, {
          fileName: "D:/twenty-table-o/packages/twenty-ui/src/display/tooltip/OverflowingTextWithTooltip.tsx",
          lineNumber: 157,
          columnNumber: 17
        }, this) : `${text || ''}`
      }, void 0, false, {
        fileName: "D:/twenty-table-o/packages/twenty-ui/src/display/tooltip/OverflowingTextWithTooltip.tsx",
        lineNumber: 146,
        columnNumber: 13
      }, this)
    }, void 0, false, {
      fileName: "D:/twenty-table-o/packages/twenty-ui/src/display/tooltip/OverflowingTextWithTooltip.tsx",
      lineNumber: 145,
      columnNumber: 11
    }, this), document.body)]
  }, void 0, true);
};
_s(OverflowingTextWithTooltip, "7SNeUDowbvDcOp27abSQG51prGc=");
_c3 = OverflowingTextWithTooltip;
var _c, _c1, _c2, _c3;
$RefreshReg$(_c, "StyledOverflowingMultilineText");
$RefreshReg$(_c1, "StyledOverflowingText");
$RefreshReg$(_c2, "Styledpre");
$RefreshReg$(_c3, "OverflowingTextWithTooltip");
window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;
RefreshRuntime.__hmr_import(import.meta.url).then(currentExports => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-ui/src/display/tooltip/OverflowingTextWithTooltip.tsx", currentExports);
  import.meta.hot.accept(nextExports => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-ui/src/display/tooltip/OverflowingTextWithTooltip.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});
import "/@id/D:/twenty-table-o/packages/twenty-ui/src/display/tooltip/OverflowingTextWithTooltip.wyw-in-js.css";

//# sourceMappingURL=data:application/json;base64,