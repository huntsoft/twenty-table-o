import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/object-record/record-picker/single-record-picker/components/SingleRecordPickerMenuItems.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-picker/single-record-picker/components/SingleRecordPickerMenuItems.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import __vite__cjsImport2__sniptt_guards from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@sniptt_guards.js?v=226f7286"; const isNonEmptyString = __vite__cjsImport2__sniptt_guards["isNonEmptyString"]; const isUndefined = __vite__cjsImport2__sniptt_guards["isUndefined"];
import __vite__cjsImport3_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useRef = __vite__cjsImport3_react["useRef"];
import { useRecoilValue } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/recoil.js?v=226f7286";
import __vite__cjsImport5_tsKeyEnum from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/ts-key-enum.js?v=226f7286"; const Key = __vite__cjsImport5_tsKeyEnum["Key"];
import { MenuItemSelect } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { DropdownMenuSkeletonItem } from "/src/modules/ui/input/relation-picker/components/skeletons/DropdownMenuSkeletonItem.tsx";
import { DropdownMenuItemsContainer } from "/src/modules/ui/layout/dropdown/components/DropdownMenuItemsContainer.tsx";
import { SelectableList } from "/src/modules/ui/layout/selectable-list/components/SelectableList.tsx";
import { useSelectableList } from "/src/modules/ui/layout/selectable-list/hooks/useSelectableList.ts";
import { useScopedHotkeys } from "/src/modules/ui/utilities/hotkey/hooks/useScopedHotkeys.ts";
import { SingleRecordPickerMenuItem } from "/src/modules/object-record/record-picker/single-record-picker/components/SingleRecordPickerMenuItem.tsx";
import { SingleRecordPickerComponentInstanceContext } from "/src/modules/object-record/record-picker/single-record-picker/states/contexts/SingleRecordPickerComponentInstanceContext.ts";
import { singleRecordPickerSelectedIdComponentState } from "/src/modules/object-record/record-picker/single-record-picker/states/singleRecordPickerSelectedIdComponentState.ts";
import { SingleRecordPickerHotkeyScope } from "/src/modules/object-record/record-picker/single-record-picker/types/SingleRecordPickerHotkeyScope.ts";
import { getSingleRecordPickerSelectableListId } from "/src/modules/object-record/record-picker/single-record-picker/utils/getSingleRecordPickerSelectableListId.ts";
import { useAvailableComponentInstanceIdOrThrow } from "/src/modules/ui/utilities/state/component-state/hooks/useAvailableComponentInstanceIdOrThrow.ts";
import { useRecoilComponentStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentStateV2.ts";
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
const StyledContainer = styled.div`
  display: flex;
`;
_c = StyledContainer;
export const SingleRecordPickerMenuItems = ({ EmptyIcon, emptyLabel, recordsToSelect, loading, onCancel, onRecordSelected, selectedRecord, hotkeyScope = SingleRecordPickerHotkeyScope.SingleRecordPicker, isFiltered })=>{
    _s();
    const containerRef = useRef(null);
    const selectNone = emptyLabel ? {
        __typename: '',
        id: 'select-none',
        name: emptyLabel
    } : null;
    const recordsInDropdown = [
        selectNone,
        selectedRecord,
        ...recordsToSelect
    ].filter((entity)=>isDefined(entity) && isNonEmptyString(entity.name));
    const recordPickerComponentInstanceId = useAvailableComponentInstanceIdOrThrow(SingleRecordPickerComponentInstanceContext);
    const selectableListComponentInstanceId = getSingleRecordPickerSelectableListId(recordPickerComponentInstanceId);
    const { isSelectedItemIdSelector, resetSelectedItem } = useSelectableList(selectableListComponentInstanceId);
    const isSelectedSelectNoneButton = useRecoilValue(isSelectedItemIdSelector('select-none'));
    useScopedHotkeys([
        Key.Escape
    ], ()=>{
        resetSelectedItem();
        onCancel?.();
    }, hotkeyScope, [
        onCancel,
        resetSelectedItem
    ]);
    const selectableItemIds = recordsInDropdown.map((entity)=>entity.id);
    const [selectedRecordId, setSelectedRecordId] = useRecoilComponentStateV2(singleRecordPickerSelectedIdComponentState);
    return /*#__PURE__*/ _jsxDEV(StyledContainer, {
        ref: containerRef,
        children: /*#__PURE__*/ _jsxDEV(SelectableList, {
            selectableListId: selectableListComponentInstanceId,
            selectableItemIdArray: selectableItemIds,
            hotkeyScope: hotkeyScope,
            onEnter: (itemId)=>{
                const recordIndex = recordsInDropdown.findIndex((record)=>record.id === itemId);
                setSelectedRecordId(itemId);
                onRecordSelected(recordsInDropdown[recordIndex]);
                resetSelectedItem();
            },
            children: /*#__PURE__*/ _jsxDEV(DropdownMenuItemsContainer, {
                hasMaxHeight: true,
                children: loading && !isFiltered ? /*#__PURE__*/ _jsxDEV(DropdownMenuSkeletonItem, {}, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-picker/single-record-picker/components/SingleRecordPickerMenuItems.tsx",
                    lineNumber: 118,
                    columnNumber: 13
                }, this) : recordsInDropdown.length === 0 && !loading ? /*#__PURE__*/ _jsxDEV(_Fragment, {}, void 0, false) : recordsInDropdown?.map((record)=>{
                    switch(record.id){
                        case 'select-none':
                            {
                                return emptyLabel && /*#__PURE__*/ _jsxDEV(MenuItemSelect, {
                                    onClick: ()=>{
                                        setSelectedRecordId(undefined);
                                        onRecordSelected();
                                    },
                                    LeftIcon: EmptyIcon,
                                    text: emptyLabel,
                                    selected: isUndefined(selectedRecordId),
                                    hovered: isSelectedSelectNoneButton
                                }, record.id, false, {
                                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-picker/single-record-picker/components/SingleRecordPickerMenuItems.tsx",
                                    lineNumber: 127,
                                    columnNumber: 23
                                }, this);
                            }
                        default:
                            {
                                return /*#__PURE__*/ _jsxDEV(SingleRecordPickerMenuItem, {
                                    record: record,
                                    onRecordSelected: onRecordSelected,
                                    selectedRecord: selectedRecord
                                }, record.id, false, {
                                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-picker/single-record-picker/components/SingleRecordPickerMenuItems.tsx",
                                    lineNumber: 143,
                                    columnNumber: 21
                                }, this);
                            }
                    }
                })
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-picker/single-record-picker/components/SingleRecordPickerMenuItems.tsx",
                lineNumber: 116,
                columnNumber: 9
            }, this)
        }, void 0, false, {
            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-picker/single-record-picker/components/SingleRecordPickerMenuItems.tsx",
            lineNumber: 103,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-picker/single-record-picker/components/SingleRecordPickerMenuItems.tsx",
        lineNumber: 102,
        columnNumber: 5
    }, this);
};
_s(SingleRecordPickerMenuItems, "RVkCiTSE3ipdEx5bbJR5CHTLWTk=", false, function() {
    return [
        useAvailableComponentInstanceIdOrThrow,
        useSelectableList,
        useRecoilValue,
        useScopedHotkeys,
        useRecoilComponentStateV2
    ];
});
_c1 = SingleRecordPickerMenuItems;
var _c, _c1;
$RefreshReg$(_c, "StyledContainer");
$RefreshReg$(_c1, "SingleRecordPickerMenuItems");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-picker/single-record-picker/components/SingleRecordPickerMenuItems.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-picker/single-record-picker/components/SingleRecordPickerMenuItems.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,