import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/object-record/record-board/components/RecordBoard.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$(), _s1 = $RefreshSig$();
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import { DragDropContext } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@hello-pangea_dnd.js?v=226f7286"; // Atlassian dnd does not support StrictMode from RN 18, so we use a fork @hello-pangea/dnd https://github.com/atlassian/react-beautiful-dnd/issues/2350
import __vite__cjsImport4_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useContext = __vite__cjsImport4_react["useContext"]; const useRef = __vite__cjsImport4_react["useRef"];
import { useRecoilCallback, useSetRecoilState } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/recoil.js?v=226f7286";
import __vite__cjsImport6_tsKeyEnum from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/ts-key-enum.js?v=226f7286"; const Key = __vite__cjsImport6_tsKeyEnum["Key"];
import { ActionBarHotkeyScope } from "/src/modules/action-menu/types/ActionBarHotKeyScope.ts";
import { getActionMenuIdFromRecordIndexId } from "/src/modules/action-menu/utils/getActionMenuIdFromRecordIndexId.ts";
import { RecordBoardHeader } from "/src/modules/object-record/record-board/components/RecordBoardHeader.tsx";
import { RecordBoardStickyHeaderEffect } from "/src/modules/object-record/record-board/components/RecordBoardStickyHeaderEffect.tsx";
import { RECORD_BOARD_CLICK_OUTSIDE_LISTENER_ID } from "/src/modules/object-record/record-board/constants/RecordBoardClickOutsideListenerId.ts";
import { RecordBoardContext } from "/src/modules/object-record/record-board/contexts/RecordBoardContext.ts";
import { useRecordBoardSelection } from "/src/modules/object-record/record-board/hooks/useRecordBoardSelection.ts";
import { RecordBoardColumn } from "/src/modules/object-record/record-board/record-board-column/components/RecordBoardColumn.tsx";
import { RecordBoardScope } from "/src/modules/object-record/record-board/scopes/RecordBoardScope.tsx";
import { RecordBoardComponentInstanceContext } from "/src/modules/object-record/record-board/states/contexts/RecordBoardComponentInstanceContext.ts";
import { getDraggedRecordPosition } from "/src/modules/object-record/record-board/utils/getDraggedRecordPosition.ts";
import { recordGroupDefinitionFamilyState } from "/src/modules/object-record/record-group/states/recordGroupDefinitionFamilyState.ts";
import { visibleRecordGroupIdsComponentFamilySelector } from "/src/modules/object-record/record-group/states/selectors/visibleRecordGroupIdsComponentFamilySelector.ts";
import { recordIndexRecordIdsByGroupComponentFamilyState } from "/src/modules/object-record/record-index/states/recordIndexRecordIdsByGroupComponentFamilyState.ts";
import { recordIndexAllRecordIdsComponentSelector } from "/src/modules/object-record/record-index/states/selectors/recordIndexAllRecordIdsComponentSelector.ts";
import { currentRecordSortsComponentState } from "/src/modules/object-record/record-sort/states/currentRecordSortsComponentState.ts";
import { recordStoreFamilyState } from "/src/modules/object-record/record-store/states/recordStoreFamilyState.ts";
import { isRemoveSortingModalOpenState } from "/src/modules/object-record/record-table/states/isRemoveSortingModalOpenState.ts";
import { TableHotkeyScope } from "/src/modules/object-record/record-table/types/TableHotkeyScope.ts";
import { useDropdownV2 } from "/src/modules/ui/layout/dropdown/hooks/useDropdownV2.ts";
import { DragSelect } from "/src/modules/ui/utilities/drag-select/components/DragSelect.tsx";
import { useScopedHotkeys } from "/src/modules/ui/utilities/hotkey/hooks/useScopedHotkeys.ts";
import { useClickOutsideListener } from "/src/modules/ui/utilities/pointer-event/hooks/useClickOutsideListener.ts";
import { useListenClickOutside } from "/src/modules/ui/utilities/pointer-event/hooks/useListenClickOutside.ts";
import { getScopeIdFromComponentId } from "/src/modules/ui/utilities/recoil-scope/utils/getScopeIdFromComponentId.ts";
import { ScrollWrapper } from "/src/modules/ui/utilities/scroll/components/ScrollWrapper.tsx";
import { useRecoilComponentCallbackStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentCallbackStateV2.ts";
import { useRecoilComponentFamilyValueV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentFamilyValueV2.ts";
import { useRecoilComponentValueV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentValueV2.ts";
import { getSnapshotValue } from "/src/modules/ui/utilities/state/utils/getSnapshotValue.ts";
import { ViewType } from "/src/modules/views/types/ViewType.ts";
import { useScrollRestoration } from "/src/hooks/useScrollRestoration.ts";
const StyledContainer = styled.div`
  display: flex;
  flex: 1;
  flex-direction: row;
`;
_c = StyledContainer;
const StyledColumnContainer = styled.div`
  display: flex;
  & > *:not(:first-of-type) {
    border-left: 1px solid ${({ theme })=>theme.border.color.light};
  }
`;
_c1 = StyledColumnContainer;
const StyledContainerContainer = styled.div`
  display: flex;
  flex-direction: column;
`;
_c2 = StyledContainerContainer;
const StyledBoardContentContainer = styled.div`
  display: flex;
  flex-direction: column;
  height: calc(100% - 48px);
`;
_c3 = StyledBoardContentContainer;
const RecordBoardScrollRestoreEffect = ()=>{
    _s();
    useScrollRestoration();
    return null;
};
_s(RecordBoardScrollRestoreEffect, "i2Pmz86I+GEMTyh0cl3DeIWLJmI=", false, function() {
    return [
        useScrollRestoration
    ];
});
_c4 = RecordBoardScrollRestoreEffect;
export const RecordBoard = ()=>{
    _s1();
    const { updateOneRecord, selectFieldMetadataItem, recordBoardId } = useContext(RecordBoardContext);
    const boardRef = useRef(null);
    const { toggleClickOutsideListener } = useClickOutsideListener(RECORD_BOARD_CLICK_OUTSIDE_LISTENER_ID);
    const actionMenuId = getActionMenuIdFromRecordIndexId(recordBoardId);
    const { closeDropdown } = useDropdownV2();
    const handleDragSelectionStart = ()=>{
        closeDropdown(actionMenuId);
        toggleClickOutsideListener(false);
    };
    const handleDragSelectionEnd = ()=>{
        toggleClickOutsideListener(true);
    };
    const visibleRecordGroupIds = useRecoilComponentFamilyValueV2(visibleRecordGroupIdsComponentFamilySelector, ViewType.Kanban);
    const recordIndexRecordIdsByGroupFamilyState = useRecoilComponentCallbackStateV2(recordIndexRecordIdsByGroupComponentFamilyState);
    const recordIndexAllRecordIdsState = useRecoilComponentCallbackStateV2(recordIndexAllRecordIdsComponentSelector);
    const { resetRecordSelection, setRecordAsSelected } = useRecordBoardSelection(recordBoardId);
    const currentRecordSorts = useRecoilComponentValueV2(currentRecordSortsComponentState);
    useListenClickOutside({
        excludeClassNames: [
            'bottom-bar',
            'action-menu-dropdown',
            'command-menu',
            'modal-backdrop',
            'page-action-container',
            'record-board-card'
        ],
        listenerId: RECORD_BOARD_CLICK_OUTSIDE_LISTENER_ID,
        refs: [],
        callback: ()=>{
            resetRecordSelection();
        }
    });
    const selectAll = useRecoilCallback(({ snapshot })=>()=>{
            const allRecordIds = getSnapshotValue(snapshot, recordIndexAllRecordIdsState);
            for (const recordId of allRecordIds){
                setRecordAsSelected(recordId, true);
            }
        }, [
        recordIndexAllRecordIdsState,
        setRecordAsSelected
    ]);
    useScopedHotkeys('ctrl+a,meta+a', selectAll, TableHotkeyScope.Table);
    useScopedHotkeys('ctrl+a,meta+a', selectAll, ActionBarHotkeyScope.ActionBar);
    useScopedHotkeys(Key.Escape, resetRecordSelection, ActionBarHotkeyScope.ActionBar);
    const setIsRemoveSortingModalOpen = useSetRecoilState(isRemoveSortingModalOpenState);
    const handleDragEnd = useRecoilCallback(({ snapshot })=>(result)=>{
            if (!result.destination) return;
            if (currentRecordSorts.length > 0) {
                setIsRemoveSortingModalOpen(true);
                return;
            }
            const draggedRecordId = result.draggableId;
            const sourceRecordGroupId = result.source.droppableId;
            const destinationRecordGroupId = result.destination.droppableId;
            const destinationIndexInColumn = result.destination.index;
            if (!destinationRecordGroupId || !selectFieldMetadataItem) return;
            const recordGroup = getSnapshotValue(snapshot, recordGroupDefinitionFamilyState(destinationRecordGroupId));
            if (!recordGroup) return;
            const destinationRecordByGroupIds = getSnapshotValue(snapshot, recordIndexRecordIdsByGroupFamilyState(destinationRecordGroupId));
            const otherRecordIdsInDestinationColumn = sourceRecordGroupId === destinationRecordGroupId ? destinationRecordByGroupIds.filter((recordId)=>recordId !== draggedRecordId) : destinationRecordByGroupIds;
            const recordBeforeId = otherRecordIdsInDestinationColumn[destinationIndexInColumn - 1];
            const recordBefore = recordBeforeId ? getSnapshotValue(snapshot, recordStoreFamilyState(recordBeforeId)) : null;
            const recordAfterId = otherRecordIdsInDestinationColumn[destinationIndexInColumn];
            const recordAfter = recordAfterId ? getSnapshotValue(snapshot, recordStoreFamilyState(recordAfterId)) : null;
            const draggedRecordPosition = getDraggedRecordPosition(recordBefore?.position, recordAfter?.position);
            updateOneRecord({
                idToUpdate: draggedRecordId,
                updateOneRecordInput: {
                    [selectFieldMetadataItem.name]: recordGroup.value,
                    position: draggedRecordPosition
                }
            });
        }, [
        recordIndexRecordIdsByGroupFamilyState,
        selectFieldMetadataItem,
        updateOneRecord,
        setIsRemoveSortingModalOpen,
        currentRecordSorts
    ]);
    // FixMe: Check if we really need this as it depends on the times it takes to update the view groups
    // if (isPersistingViewGroups) {
    //   // TODO: Add skeleton state
    //   return null;
    // }
    return /*#__PURE__*/ _jsxDEV(RecordBoardScope, {
        recordBoardScopeId: getScopeIdFromComponentId(recordBoardId),
        onColumnsChange: ()=>{},
        onFieldsChange: ()=>{},
        children: /*#__PURE__*/ _jsxDEV(RecordBoardComponentInstanceContext.Provider, {
            value: {
                instanceId: recordBoardId
            },
            children: /*#__PURE__*/ _jsxDEV(ScrollWrapper, {
                contextProviderName: "recordBoard",
                componentInstanceId: `scroll-wrapper-record-board-${recordBoardId}`,
                children: [
                    /*#__PURE__*/ _jsxDEV(RecordBoardStickyHeaderEffect, {}, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx",
                        lineNumber: 245,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ _jsxDEV(StyledContainerContainer, {
                        children: [
                            /*#__PURE__*/ _jsxDEV(RecordBoardHeader, {}, void 0, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx",
                                lineNumber: 247,
                                columnNumber: 13
                            }, this),
                            /*#__PURE__*/ _jsxDEV(StyledBoardContentContainer, {
                                children: [
                                    /*#__PURE__*/ _jsxDEV(StyledContainer, {
                                        ref: boardRef,
                                        children: /*#__PURE__*/ _jsxDEV(DragDropContext, {
                                            onDragEnd: handleDragEnd,
                                            children: /*#__PURE__*/ _jsxDEV(StyledColumnContainer, {
                                                children: visibleRecordGroupIds.map((recordGroupId)=>/*#__PURE__*/ _jsxDEV(RecordBoardColumn, {
                                                        recordBoardColumnId: recordGroupId
                                                    }, recordGroupId, false, {
                                                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx",
                                                        lineNumber: 253,
                                                        columnNumber: 23
                                                    }, this))
                                            }, void 0, false, {
                                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx",
                                                lineNumber: 251,
                                                columnNumber: 19
                                            }, this)
                                        }, void 0, false, {
                                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx",
                                            lineNumber: 250,
                                            columnNumber: 17
                                        }, this)
                                    }, void 0, false, {
                                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx",
                                        lineNumber: 249,
                                        columnNumber: 15
                                    }, this),
                                    /*#__PURE__*/ _jsxDEV(RecordBoardScrollRestoreEffect, {}, void 0, false, {
                                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx",
                                        lineNumber: 261,
                                        columnNumber: 15
                                    }, this),
                                    /*#__PURE__*/ _jsxDEV(DragSelect, {
                                        dragSelectable: boardRef,
                                        onDragSelectionEnd: handleDragSelectionEnd,
                                        onDragSelectionChange: setRecordAsSelected,
                                        onDragSelectionStart: handleDragSelectionStart
                                    }, void 0, false, {
                                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx",
                                        lineNumber: 262,
                                        columnNumber: 15
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx",
                                lineNumber: 248,
                                columnNumber: 13
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx",
                        lineNumber: 246,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx",
                lineNumber: 241,
                columnNumber: 9
            }, this)
        }, void 0, false, {
            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx",
            lineNumber: 238,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx",
        lineNumber: 233,
        columnNumber: 5
    }, this);
};
_s1(RecordBoard, "OXR5KnB3vzmGvAtx+pL0v4zz/So=", false, function() {
    return [
        useClickOutsideListener,
        useDropdownV2,
        useRecoilComponentFamilyValueV2,
        useRecoilComponentCallbackStateV2,
        useRecoilComponentCallbackStateV2,
        useRecordBoardSelection,
        useRecoilComponentValueV2,
        useListenClickOutside,
        useRecoilCallback,
        useScopedHotkeys,
        useScopedHotkeys,
        useScopedHotkeys,
        useSetRecoilState,
        useRecoilCallback
    ];
});
_c5 = RecordBoard;
var _c, _c1, _c2, _c3, _c4, _c5;
$RefreshReg$(_c, "StyledContainer");
$RefreshReg$(_c1, "StyledColumnContainer");
$RefreshReg$(_c2, "StyledContainerContainer");
$RefreshReg$(_c3, "StyledBoardContentContainer");
$RefreshReg$(_c4, "RecordBoardScrollRestoreEffect");
$RefreshReg$(_c5, "RecordBoard");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/components/RecordBoard.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,