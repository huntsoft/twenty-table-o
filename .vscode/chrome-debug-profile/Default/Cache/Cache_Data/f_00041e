import { CurrencyCode } from "/src/modules/object-record/record-field/types/CurrencyCode.ts";
import { IllustrationIconCurrency, IllustrationIconLink, IllustrationIconMail, IllustrationIconMap, IllustrationIconPhone, IllustrationIconSetting, IllustrationIconText, IllustrationIconUser } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { FieldMetadataType } from "/src/generated-metadata/graphql.ts";
import { ConnectedAccountProvider } from "/@fs/D:/twenty-table-o/packages/twenty-shared/types/dist/twenty-shared-types.esm.js";
export const SETTINGS_COMPOSITE_FIELD_TYPE_CONFIGS = {
    [FieldMetadataType.CURRENCY]: {
        label: 'Currency',
        Icon: IllustrationIconCurrency,
        subFields: [
            'amountMicros'
        ],
        filterableSubFields: [
            'amountMicros'
        ],
        labelBySubField: {
            amountMicros: 'Amount',
            currencyCode: 'Currency'
        },
        exampleValue: {
            amountMicros: 2000000000,
            currencyCode: CurrencyCode.USD
        },
        category: 'Basic'
    },
    [FieldMetadataType.EMAILS]: {
        label: 'Emails',
        Icon: IllustrationIconMail,
        subFields: [
            'primaryEmail',
            'additionalEmails'
        ],
        filterableSubFields: [
            'primaryEmail'
        ],
        labelBySubField: {
            primaryEmail: 'Primary Email',
            additionalEmails: 'Additional Emails'
        },
        exampleValue: {
            primaryEmail: 'john@twenty.com',
            additionalEmails: [
                'tim@twenty.com',
                'timapple@twenty.com',
                'johnappletim@twenty.com'
            ]
        },
        category: 'Basic'
    },
    [FieldMetadataType.LINKS]: {
        label: 'Links',
        Icon: IllustrationIconLink,
        exampleValue: {
            primaryLinkUrl: 'twenty.com',
            primaryLinkLabel: '',
            secondaryLinks: [
                {
                    url: 'twenty.com',
                    label: 'Twenty'
                }
            ]
        },
        category: 'Basic',
        subFields: [
            'primaryLinkUrl',
            'primaryLinkLabel',
            'secondaryLinks'
        ],
        filterableSubFields: [
            'primaryLinkUrl',
            'primaryLinkLabel'
        ],
        labelBySubField: {
            primaryLinkUrl: 'Link URL',
            primaryLinkLabel: 'Link Label',
            secondaryLinks: 'Secondary Links'
        }
    },
    [FieldMetadataType.PHONES]: {
        label: 'Phones',
        Icon: IllustrationIconPhone,
        exampleValue: {
            primaryPhoneCallingCode: '+33',
            primaryPhoneCountryCode: 'FR',
            primaryPhoneNumber: '789012345',
            additionalPhones: [
                {
                    number: '617272323',
                    callingCode: '+33',
                    countryCode: 'FR'
                }
            ]
        },
        subFields: [
            'primaryPhoneNumber',
            'primaryPhoneCountryCode',
            'additionalPhones'
        ],
        filterableSubFields: [
            'primaryPhoneNumber',
            'primaryPhoneCountryCode'
        ],
        labelBySubField: {
            primaryPhoneNumber: 'Primary Phone Number',
            primaryPhoneCountryCode: 'Primary Phone Country Code',
            primaryPhoneCallingCode: 'Primary Phone Calling Code',
            additionalPhones: 'Additional Phones'
        },
        category: 'Basic'
    },
    [FieldMetadataType.FULL_NAME]: {
        label: 'Full Name',
        Icon: IllustrationIconUser,
        exampleValue: {
            firstName: 'John',
            lastName: 'Doe'
        },
        category: 'Basic',
        subFields: [
            'firstName',
            'lastName'
        ],
        filterableSubFields: [
            'firstName',
            'lastName'
        ],
        labelBySubField: {
            firstName: 'First Name',
            lastName: 'Last Name'
        }
    },
    [FieldMetadataType.ADDRESS]: {
        label: 'Address',
        Icon: IllustrationIconMap,
        subFields: [
            'addressStreet1',
            'addressStreet2',
            'addressCity',
            'addressState',
            'addressCountry',
            'addressPostcode',
            'addressLat',
            'addressLng'
        ],
        filterableSubFields: [
            'addressStreet1',
            'addressStreet2',
            'addressCity',
            'addressState',
            'addressCountry',
            'addressPostcode'
        ],
        labelBySubField: {
            addressStreet1: 'Address 1',
            addressStreet2: 'Address 2',
            addressCity: 'City',
            addressState: 'State',
            addressCountry: 'Country',
            addressPostcode: 'Post Code',
            addressLat: 'Latitude',
            addressLng: 'Longitude'
        },
        exampleValue: {
            addressStreet1: '456 Oak Street',
            addressStreet2: '',
            addressCity: 'Springfield',
            addressState: 'California',
            addressCountry: 'United States',
            addressPostcode: '90210',
            addressLat: 34.0522,
            addressLng: -118.2437
        },
        category: 'Basic'
    },
    [FieldMetadataType.ACTOR]: {
        label: 'Actor',
        Icon: IllustrationIconSetting,
        category: 'Basic',
        subFields: [
            'source'
        ],
        filterableSubFields: [
            'source'
        ],
        labelBySubField: {
            source: 'Source',
            name: 'Name',
            workspaceMemberId: 'Workspace Member ID',
            context: 'Context'
        },
        exampleValue: {
            source: 'IMPORT',
            name: 'name',
            workspaceMemberId: 'id',
            context: {
                provider: ConnectedAccountProvider.GOOGLE
            }
        }
    },
    [FieldMetadataType.RICH_TEXT_V2]: {
        label: 'Rich Text',
        Icon: IllustrationIconText,
        subFields: [
            'blocknote',
            'markdown'
        ],
        filterableSubFields: [],
        labelBySubField: {
            blocknote: 'BlockNote',
            markdown: 'Markdown'
        },
        exampleValue: {
            blocknote: '[{"type":"heading","content":"Hello"}]',
            markdown: '# Hello'
        },
        category: 'Basic'
    }
};

//# sourceMappingURL=data:application/json;base64,