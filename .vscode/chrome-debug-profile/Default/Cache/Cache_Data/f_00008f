import { useDeleteMultipleRecordsAction } from "/src/modules/action-menu/actions/record-actions/multiple-records/hooks/useDeleteMultipleRecordsAction.tsx";
import { useDestroyMultipleRecordsAction } from "/src/modules/action-menu/actions/record-actions/multiple-records/hooks/useDestroyMultipleRecordsAction.tsx";
import { useExportMultipleRecordsAction } from "/src/modules/action-menu/actions/record-actions/multiple-records/hooks/useExportMultipleRecordsAction.tsx";
import { MultipleRecordsActionKeys } from "/src/modules/action-menu/actions/record-actions/multiple-records/types/MultipleRecordsActionKeys.ts";
import { useCreateNewTableRecordNoSelectionRecordAction } from "/src/modules/action-menu/actions/record-actions/no-selection/hooks/useCreateNewTableRecordNoSelectionRecordAction.ts";
import { useHideDeletedRecordsNoSelectionRecordAction } from "/src/modules/action-menu/actions/record-actions/no-selection/hooks/useHideDeletedRecordsNoSelectionRecordAction.ts";
import { useImportRecordsNoSelectionRecordAction } from "/src/modules/action-menu/actions/record-actions/no-selection/hooks/useImportRecordsNoSelectionRecordAction.ts";
import { useSeeDeletedRecordsNoSelectionRecordAction } from "/src/modules/action-menu/actions/record-actions/no-selection/hooks/useSeeDeletedRecordsNoSelectionRecordAction.ts";
import { useSeeRunsNoSelectionRecordAction } from "/src/modules/action-menu/actions/record-actions/no-selection/hooks/useSeeRunsNoSelectionRecordAction.ts";
import { NoSelectionRecordActionKeys } from "/src/modules/action-menu/actions/record-actions/no-selection/types/NoSelectionRecordActionsKey.ts";
import { useAddToFavoritesSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/hooks/useAddToFavoritesSingleRecordAction.ts";
import { useDeleteSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/hooks/useDeleteSingleRecordAction.tsx";
import { useDestroySingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/hooks/useDestroySingleRecordAction.tsx";
import { useNavigateToNextRecordSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/hooks/useNavigateToNextRecordSingleRecordAction.ts";
import { useNavigateToPreviousRecordSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/hooks/useNavigateToPreviousRecordSingleRecordAction.ts";
import { useRemoveFromFavoritesSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/hooks/useRemoveFromFavoritesSingleRecordAction.ts";
import { SingleRecordActionKeys } from "/src/modules/action-menu/actions/record-actions/single-record/types/SingleRecordActionsKey.ts";
import { useActivateWorkflowSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-actions/hooks/useActivateWorkflowSingleRecordAction.ts";
import { useDeactivateWorkflowSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-actions/hooks/useDeactivateWorkflowSingleRecordAction.ts";
import { useDiscardDraftWorkflowSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-actions/hooks/useDiscardDraftWorkflowSingleRecordAction.ts";
import { useSeeActiveVersionWorkflowSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-actions/hooks/useSeeActiveVersionWorkflowSingleRecordAction.ts";
import { useSeeRunsWorkflowSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-actions/hooks/useSeeRunsWorkflowSingleRecordAction.ts";
import { useSeeVersionsWorkflowSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-actions/hooks/useSeeVersionsWorkflowSingleRecordAction.ts";
import { useTestWorkflowSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-actions/hooks/useTestWorkflowSingleRecordAction.ts";
import { WorkflowSingleRecordActionKeys } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-actions/types/WorkflowSingleRecordActionsKeys.ts";
import { ActionViewType } from "/src/modules/action-menu/actions/types/ActionViewType.ts";
import { ActionMenuEntryScope, ActionMenuEntryType } from "/src/modules/action-menu/types/ActionMenuEntry.ts";
import { IconChevronDown, IconChevronUp, IconDatabaseExport, IconEyeOff, IconFileImport, IconHeart, IconHeartOff, IconHistoryToggle, IconNoteOff, IconPlayerPause, IconPlayerPlay, IconPlus, IconPower, IconRotate2, IconTrash, IconTrashX, IconVersions } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
export const WORKFLOW_ACTIONS_CONFIG = {
    createNewRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.Object,
        key: NoSelectionRecordActionKeys.CREATE_NEW_RECORD,
        label: {
            id: "d0DCww",
            message: "Create new record"
        },
        shortLabel: {
            id: "BcCzLv",
            message: "New record"
        },
        position: 0,
        isPinned: true,
        Icon: IconPlus,
        availableOn: [
            ActionViewType.INDEX_PAGE_NO_SELECTION
        ],
        useAction: useCreateNewTableRecordNoSelectionRecordAction
    },
    activateWorkflowSingleRecord: {
        key: WorkflowSingleRecordActionKeys.ACTIVATE,
        label: {
            id: "tu8A/k",
            message: "Activate Workflow"
        },
        shortLabel: {
            id: "FQBaXG",
            message: "Activate"
        },
        isPinned: true,
        position: 1,
        Icon: IconPower,
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useActivateWorkflowSingleRecordAction
    },
    deactivateWorkflowSingleRecord: {
        key: WorkflowSingleRecordActionKeys.DEACTIVATE,
        label: {
            id: "4tpC8V",
            message: "Deactivate Workflow"
        },
        shortLabel: {
            id: "5y3O+A",
            message: "Deactivate"
        },
        isPinned: true,
        position: 2,
        Icon: IconPlayerPause,
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useDeactivateWorkflowSingleRecordAction
    },
    discardWorkflowDraftSingleRecord: {
        key: WorkflowSingleRecordActionKeys.DISCARD_DRAFT,
        label: {
            id: "zAg2B9",
            message: "Discard Draft"
        },
        shortLabel: {
            id: "zAg2B9",
            message: "Discard Draft"
        },
        isPinned: true,
        position: 3,
        Icon: IconNoteOff,
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useDiscardDraftWorkflowSingleRecordAction
    },
    seeWorkflowActiveVersionSingleRecord: {
        key: WorkflowSingleRecordActionKeys.SEE_ACTIVE_VERSION,
        label: {
            id: "QREcJS",
            message: "See active version"
        },
        shortLabel: {
            id: "QREcJS",
            message: "See active version"
        },
        isPinned: false,
        position: 4,
        Icon: IconVersions,
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useSeeActiveVersionWorkflowSingleRecordAction
    },
    seeWorkflowRunsSingleRecord: {
        key: WorkflowSingleRecordActionKeys.SEE_RUNS,
        label: {
            id: "OpPn5Z",
            message: "See runs"
        },
        shortLabel: {
            id: "OpPn5Z",
            message: "See runs"
        },
        isPinned: true,
        position: 5,
        Icon: IconHistoryToggle,
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useSeeRunsWorkflowSingleRecordAction
    },
    seeWorkflowVersionsHistorySingleRecord: {
        key: WorkflowSingleRecordActionKeys.SEE_VERSIONS,
        label: {
            id: "lYhPN0",
            message: "See versions history"
        },
        shortLabel: {
            id: "EtyY4+",
            message: "See versions"
        },
        isPinned: false,
        position: 6,
        Icon: IconVersions,
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useSeeVersionsWorkflowSingleRecordAction
    },
    testWorkflowSingleRecord: {
        key: WorkflowSingleRecordActionKeys.TEST,
        label: {
            id: "bU9B27",
            message: "Test Workflow"
        },
        shortLabel: {
            id: "NnH3pK",
            message: "Test"
        },
        isPinned: true,
        position: 7,
        Icon: IconPlayerPlay,
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useTestWorkflowSingleRecordAction
    },
    navigateToPreviousRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.NAVIGATE_TO_PREVIOUS_RECORD,
        label: {
            id: "QVUN3K",
            message: "Navigate to previous workflow"
        },
        position: 8,
        Icon: IconChevronUp,
        availableOn: [
            ActionViewType.SHOW_PAGE
        ],
        useAction: useNavigateToPreviousRecordSingleRecordAction
    },
    navigateToNextRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.NAVIGATE_TO_NEXT_RECORD,
        label: {
            id: "ZTEho+",
            message: "Navigate to next workflow"
        },
        position: 9,
        Icon: IconChevronDown,
        availableOn: [
            ActionViewType.SHOW_PAGE
        ],
        useAction: useNavigateToNextRecordSingleRecordAction
    },
    addToFavoritesSingleRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.ADD_TO_FAVORITES,
        label: {
            id: "pBsoKL",
            message: "Add to favorites"
        },
        shortLabel: {
            id: "pBsoKL",
            message: "Add to favorites"
        },
        position: 10,
        isPinned: false,
        Icon: IconHeart,
        availableOn: [
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION,
            ActionViewType.SHOW_PAGE
        ],
        useAction: useAddToFavoritesSingleRecordAction
    },
    removeFromFavoritesSingleRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.REMOVE_FROM_FAVORITES,
        label: {
            id: "T/pF0Z",
            message: "Remove from favorites"
        },
        shortLabel: {
            id: "T/pF0Z",
            message: "Remove from favorites"
        },
        isPinned: false,
        position: 11,
        Icon: IconHeartOff,
        availableOn: [
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION,
            ActionViewType.SHOW_PAGE
        ],
        useAction: useRemoveFromFavoritesSingleRecordAction
    },
    deleteSingleRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.DELETE,
        label: {
            id: "UA2IpC",
            message: "Delete workflow"
        },
        shortLabel: {
            id: "cnGeoo",
            message: "Delete"
        },
        position: 12,
        Icon: IconTrash,
        accent: 'danger',
        isPinned: true,
        availableOn: [
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION,
            ActionViewType.SHOW_PAGE
        ],
        useAction: useDeleteSingleRecordAction
    },
    deleteMultipleRecords: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: MultipleRecordsActionKeys.DELETE,
        label: {
            id: "ABwG9x",
            message: "Delete workflows"
        },
        shortLabel: {
            id: "cnGeoo",
            message: "Delete"
        },
        position: 13,
        Icon: IconTrash,
        accent: 'danger',
        isPinned: true,
        availableOn: [
            ActionViewType.INDEX_PAGE_BULK_SELECTION
        ],
        useAction: useDeleteMultipleRecordsAction
    },
    destroySingleRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.DESTROY,
        label: {
            id: "Bv3y5w",
            message: "Permanently destroy record"
        },
        shortLabel: {
            id: "2xxBws",
            message: "Destroy"
        },
        position: 14,
        Icon: IconTrashX,
        accent: 'danger',
        isPinned: true,
        availableOn: [
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION,
            ActionViewType.SHOW_PAGE
        ],
        useAction: useDestroySingleRecordAction
    },
    exportSingleRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.EXPORT,
        label: {
            id: "+FMXdE",
            message: "Export workflow"
        },
        shortLabel: {
            id: "GS+Mus",
            message: "Export"
        },
        position: 15,
        Icon: IconDatabaseExport,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useExportMultipleRecordsAction
    },
    exportMultipleRecords: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: MultipleRecordsActionKeys.EXPORT,
        label: {
            id: "XcAij/",
            message: "Export workflows"
        },
        shortLabel: {
            id: "GS+Mus",
            message: "Export"
        },
        position: 16,
        Icon: IconDatabaseExport,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.INDEX_PAGE_BULK_SELECTION
        ],
        useAction: useExportMultipleRecordsAction
    },
    exportView: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.Object,
        key: NoSelectionRecordActionKeys.EXPORT_VIEW,
        label: {
            id: "DaGxE0",
            message: "Export view"
        },
        shortLabel: {
            id: "GS+Mus",
            message: "Export"
        },
        position: 17,
        Icon: IconDatabaseExport,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.INDEX_PAGE_NO_SELECTION
        ],
        useAction: useExportMultipleRecordsAction
    },
    destroyMultipleRecords: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: MultipleRecordsActionKeys.DESTROY,
        label: {
            id: "uKWXhB",
            message: "Permanently destroy workflows"
        },
        shortLabel: {
            id: "2xxBws",
            message: "Destroy"
        },
        position: 18,
        Icon: IconTrashX,
        accent: 'danger',
        isPinned: true,
        availableOn: [
            ActionViewType.INDEX_PAGE_BULK_SELECTION
        ],
        useAction: useDestroyMultipleRecordsAction
    },
    seeDeletedRecords: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.Object,
        key: NoSelectionRecordActionKeys.SEE_DELETED_RECORDS,
        label: {
            id: "5jZIe5",
            message: "See deleted workflows"
        },
        shortLabel: {
            id: "gw3Tlm",
            message: "Deleted workflows"
        },
        position: 19,
        Icon: IconRotate2,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.INDEX_PAGE_NO_SELECTION
        ],
        useAction: useSeeDeletedRecordsNoSelectionRecordAction
    },
    hideDeletedRecords: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.Object,
        key: NoSelectionRecordActionKeys.HIDE_DELETED_RECORDS,
        label: {
            id: "aOZAIB",
            message: "Hide deleted workflows"
        },
        shortLabel: {
            id: "OlbYor",
            message: "Hide deleted"
        },
        position: 20,
        Icon: IconEyeOff,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.INDEX_PAGE_NO_SELECTION
        ],
        useAction: useHideDeletedRecordsNoSelectionRecordAction
    },
    importRecords: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.Object,
        key: NoSelectionRecordActionKeys.IMPORT_RECORDS,
        label: {
            id: "ZsIcZZ",
            message: "Import workflows"
        },
        shortLabel: {
            id: "l3s5ri",
            message: "Import"
        },
        position: 21,
        Icon: IconFileImport,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.INDEX_PAGE_NO_SELECTION
        ],
        useAction: useImportRecordsNoSelectionRecordAction
    },
    seeAllRuns: {
        type: ActionMenuEntryType.Navigation,
        scope: ActionMenuEntryScope.Global,
        key: NoSelectionRecordActionKeys.SEE_RUNS,
        label: {
            id: "iS69s6",
            message: "Go to runs"
        },
        shortLabel: {
            id: "OpPn5Z",
            message: "See runs"
        },
        position: 22,
        Icon: IconHistoryToggle,
        accent: 'default',
        isPinned: true,
        availableOn: [
            ActionViewType.INDEX_PAGE_NO_SELECTION
        ],
        useAction: useSeeRunsNoSelectionRecordAction
    }
};

//# sourceMappingURL=data:application/json;base64,