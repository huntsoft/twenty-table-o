import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/spreadsheet-import/steps/components/SpreadsheetImportStepper.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/SpreadsheetImportStepper.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { useTheme } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react.js?v=226f7286";
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import __vite__cjsImport4_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useCallback = __vite__cjsImport4_react["useCallback"]; const useState = __vite__cjsImport4_react["useState"];
import { useSpreadsheetImportInternal } from "/src/modules/spreadsheet-import/hooks/useSpreadsheetImportInternal.ts";
import { SnackBarVariant } from "/src/modules/ui/feedback/snack-bar-manager/components/SnackBar.tsx";
import { useSnackBar } from "/src/modules/ui/feedback/snack-bar-manager/hooks/useSnackBar.ts";
import { Modal } from "/src/modules/ui/layout/modal/components/Modal.tsx";
import { CircularProgressBar } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { SpreadsheetImportStepType } from "/src/modules/spreadsheet-import/steps/types/SpreadsheetImportStepType.ts";
import { MatchColumnsStep } from "/src/modules/spreadsheet-import/steps/components/MatchColumnsStep/MatchColumnsStep.tsx";
import { SelectHeaderStep } from "/src/modules/spreadsheet-import/steps/components/SelectHeaderStep/SelectHeaderStep.tsx";
import { SelectSheetStep } from "/src/modules/spreadsheet-import/steps/components/SelectSheetStep/SelectSheetStep.tsx";
import { UploadStep } from "/src/modules/spreadsheet-import/steps/components/UploadStep/UploadStep.tsx";
import { ValidationStep } from "/src/modules/spreadsheet-import/steps/components/ValidationStep/ValidationStep.tsx";
const StyledProgressBarContainer = styled(Modal.Content)`
  align-items: center;
  display: flex;
  justify-content: center;
`;
_c = StyledProgressBarContainer;
export const SpreadsheetImportStepper = ({ nextStep, prevStep })=>{
    _s();
    const theme = useTheme();
    const { initialStepState } = useSpreadsheetImportInternal();
    const [currentStepState, setCurrentStepState] = useState(initialStepState || {
        type: SpreadsheetImportStepType.upload
    });
    const [previousStepState, setPreviousStepState] = useState(initialStepState || {
        type: SpreadsheetImportStepType.upload
    });
    const [uploadedFile, setUploadedFile] = useState(null);
    const { enqueueSnackBar } = useSnackBar();
    const handleError = useCallback((description)=>{
        enqueueSnackBar(description, {
            variant: SnackBarVariant.Error
        });
    }, [
        enqueueSnackBar
    ]);
    const handleBack = useCallback(()=>{
        setCurrentStepState(previousStepState);
        prevStep();
    }, [
        prevStep,
        previousStepState
    ]);
    switch(currentStepState.type){
        case SpreadsheetImportStepType.upload:
            return /*#__PURE__*/ _jsxDEV(UploadStep, {
                setUploadedFile: setUploadedFile,
                currentStepState: currentStepState,
                setPreviousStepState: setPreviousStepState,
                setCurrentStepState: setCurrentStepState,
                onError: handleError,
                nextStep: nextStep
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/SpreadsheetImportStepper.tsx",
                lineNumber: 68,
                columnNumber: 9
            }, this);
        case SpreadsheetImportStepType.selectSheet:
            return /*#__PURE__*/ _jsxDEV(SelectSheetStep, {
                sheetNames: currentStepState.workbook.SheetNames,
                setCurrentStepState: setCurrentStepState,
                currentStepState: currentStepState,
                onError: handleError,
                setPreviousStepState: setPreviousStepState,
                onBack: handleBack
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/SpreadsheetImportStepper.tsx",
                lineNumber: 79,
                columnNumber: 9
            }, this);
        case SpreadsheetImportStepType.selectHeader:
            return /*#__PURE__*/ _jsxDEV(SelectHeaderStep, {
                importedRows: currentStepState.data,
                setCurrentStepState: setCurrentStepState,
                nextStep: nextStep,
                setPreviousStepState: setPreviousStepState,
                onError: handleError,
                onBack: handleBack,
                currentStepState: currentStepState
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/SpreadsheetImportStepper.tsx",
                lineNumber: 90,
                columnNumber: 9
            }, this);
        case SpreadsheetImportStepType.matchColumns:
            return /*#__PURE__*/ _jsxDEV(MatchColumnsStep, {
                data: currentStepState.data,
                headerValues: currentStepState.headerValues,
                setCurrentStepState: setCurrentStepState,
                setPreviousStepState: setPreviousStepState,
                currentStepState: currentStepState,
                nextStep: nextStep,
                onBack: handleBack,
                onError: handleError
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/SpreadsheetImportStepper.tsx",
                lineNumber: 102,
                columnNumber: 9
            }, this);
        case SpreadsheetImportStepType.validateData:
            if (!uploadedFile) {
                throw new Error('File not found');
            }
            return /*#__PURE__*/ _jsxDEV(ValidationStep, {
                initialData: currentStepState.data,
                importedColumns: currentStepState.importedColumns,
                file: uploadedFile,
                setCurrentStepState: setCurrentStepState,
                onBack: ()=>{
                    handleBack();
                    setPreviousStepState(initialStepState || {
                        type: SpreadsheetImportStepType.upload
                    });
                }
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/SpreadsheetImportStepper.tsx",
                lineNumber: 118,
                columnNumber: 9
            }, this);
        case SpreadsheetImportStepType.loading:
        default:
            return /*#__PURE__*/ _jsxDEV(StyledProgressBarContainer, {
                children: /*#__PURE__*/ _jsxDEV(CircularProgressBar, {
                    size: 80,
                    barWidth: 8,
                    barColor: theme.font.color.primary
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/SpreadsheetImportStepper.tsx",
                    lineNumber: 135,
                    columnNumber: 11
                }, this)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/SpreadsheetImportStepper.tsx",
                lineNumber: 134,
                columnNumber: 9
            }, this);
    }
};
_s(SpreadsheetImportStepper, "fbuJMQqKNFHvZ9k2GG9Vr1VfOXc=", false, function() {
    return [
        useTheme,
        useSpreadsheetImportInternal,
        useSnackBar
    ];
});
_c1 = SpreadsheetImportStepper;
var _c, _c1;
$RefreshReg$(_c, "StyledProgressBarContainer");
$RefreshReg$(_c1, "SpreadsheetImportStepper");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/SpreadsheetImportStepper.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/SpreadsheetImportStepper.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,