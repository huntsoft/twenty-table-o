import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
// @ts-expect-error // Todo: remove usage of react-data-grid
import { useRowSelection } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react-data-grid.js?v=226f7286";
import __vite__cjsImport4_reactDom from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react-dom.js?v=226f7286"; const createPortal = __vite__cjsImport4_reactDom["createPortal"];
import { AppTooltip, Checkbox, CheckboxVariant, Toggle } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { MatchColumnSelect } from "/src/modules/spreadsheet-import/components/MatchColumnSelect.tsx";
import { TextInput } from "/src/modules/ui/input/components/TextInput.tsx";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
const StyledHeaderContainer = styled.div`
  align-items: center;
  display: flex;
  gap: ${({ theme })=>theme.spacing(1)};
  position: relative;
`;
_c = StyledHeaderContainer;
const StyledHeaderLabel = styled.span`
  display: flex;
  flex: 1;
  overflow: hidden;
  text-overflow: ellipsis;
`;
_c1 = StyledHeaderLabel;
const StyledCheckboxContainer = styled.div`
  align-items: center;
  box-sizing: content-box;
  display: flex;
  flex: 1;
  height: 100%;
  justify-content: center;
  line-height: 0;
  width: 100%;
`;
_c2 = StyledCheckboxContainer;
const StyledToggleContainer = styled.div`
  align-items: center;
  display: flex;
  height: 100%;
`;
_c3 = StyledToggleContainer;
const StyledInputContainer = styled.div`
  align-items: center;
  display: flex;
  min-height: 100%;
  min-width: 100%;
  padding-right: ${({ theme })=>theme.spacing(2)};
`;
_c4 = StyledInputContainer;
const StyledDefaultContainer = styled.div`
  min-height: 100%;
  min-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
`;
_c5 = StyledDefaultContainer;
const SELECT_COLUMN_KEY = 'select-row';
export const generateColumns = (fields)=>[
        {
            key: SELECT_COLUMN_KEY,
            name: '',
            width: 35,
            minWidth: 35,
            maxWidth: 35,
            resizable: false,
            sortable: false,
            frozen: true,
            formatter: _s((props)=>{
                _s();
                // eslint-disable-next-line  react-hooks/rules-of-hooks
                const [isRowSelected, onRowSelectionChange] = useRowSelection();
                return /*#__PURE__*/ _jsxDEV(StyledCheckboxContainer, {
                    children: /*#__PURE__*/ _jsxDEV(Checkbox, {
                        "aria-label": "Select",
                        checked: isRowSelected,
                        variant: CheckboxVariant.Tertiary,
                        onChange: (event)=>{
                            onRowSelectionChange({
                                row: props.row,
                                checked: event.target.checked,
                                isShiftClick: event.nativeEvent.shiftKey
                            });
                        }
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx",
                        lineNumber: 83,
                        columnNumber: 11
                    }, this)
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx",
                    lineNumber: 82,
                    columnNumber: 9
                }, this);
            }, "k9uFIpP/J3RmXb41UqoaNV0F7SQ=", false, function() {
                return [
                    useRowSelection
                ];
            })
        },
        ...fields.map((column)=>({
                key: column.key,
                name: column.label,
                minWidth: 150,
                resizable: true,
                headerRenderer: ()=>/*#__PURE__*/ _jsxDEV(StyledHeaderContainer, {
                        children: [
                            /*#__PURE__*/ _jsxDEV(StyledHeaderLabel, {
                                id: `${column.key}`,
                                children: column.label
                            }, void 0, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx",
                                lineNumber: 109,
                                columnNumber: 11
                            }, this),
                            column.description && /*#__PURE__*/ createPortal(/*#__PURE__*/ _jsxDEV(AppTooltip, {
                                anchorSelect: `#${column.key}`,
                                place: "top",
                                content: column.description
                            }, void 0, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx",
                                lineNumber: 114,
                                columnNumber: 15
                            }, this), document.body)
                        ]
                    }, void 0, true, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx",
                        lineNumber: 108,
                        columnNumber: 9
                    }, this),
                editable: column.fieldType.type !== 'checkbox',
                // Todo: remove usage of react-data-grid
                editor: ({ row, onRowChange, onClose })=>{
                    const columnKey = column.key;
                    let component;
                    switch(column.fieldType.type){
                        case 'select':
                            {
                                const value = column.fieldType.options.find((option)=>option.value === row[columnKey]);
                                component = /*#__PURE__*/ _jsxDEV(MatchColumnSelect, {
                                    value: value ? {
                                        Icon: undefined,
                                        ...value
                                    } : value,
                                    onChange: (value)=>{
                                        onRowChange({
                                            ...row,
                                            [columnKey]: value?.value
                                        }, true);
                                    },
                                    options: column.fieldType.options
                                }, void 0, false, {
                                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx",
                                    lineNumber: 137,
                                    columnNumber: 15
                                }, this);
                                break;
                            }
                        default:
                            component = /*#__PURE__*/ _jsxDEV(TextInput, {
                                value: row[columnKey],
                                onChange: (value)=>{
                                    onRowChange({
                                        ...row,
                                        [columnKey]: value
                                    });
                                },
                                autoFocus: true,
                                onBlur: ()=>onClose(true)
                            }, void 0, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx",
                                lineNumber: 156,
                                columnNumber: 15
                            }, this);
                    }
                    return /*#__PURE__*/ _jsxDEV(StyledInputContainer, {
                        children: component
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx",
                        lineNumber: 167,
                        columnNumber: 16
                    }, this);
                },
                editorOptions: {
                    editOnClick: true
                },
                // Todo: remove usage of react-data-grid
                formatter: ({ row, onRowChange })=>{
                    const columnKey = column.key;
                    let component;
                    switch(column.fieldType.type){
                        case 'checkbox':
                            component = /*#__PURE__*/ _jsxDEV(StyledToggleContainer, {
                                id: `${columnKey}-${row.__index}`,
                                onClick: (event)=>{
                                    event.stopPropagation();
                                },
                                children: /*#__PURE__*/ _jsxDEV(Toggle, {
                                    value: row[columnKey],
                                    onChange: ()=>{
                                        onRowChange({
                                            ...row,
                                            [columnKey]: !row[columnKey]
                                        });
                                    }
                                }, void 0, false, {
                                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx",
                                    lineNumber: 187,
                                    columnNumber: 17
                                }, this)
                            }, void 0, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx",
                                lineNumber: 181,
                                columnNumber: 15
                            }, this);
                            break;
                        case 'select':
                            component = /*#__PURE__*/ _jsxDEV(StyledDefaultContainer, {
                                id: `${columnKey}-${row.__index}`,
                                children: column.fieldType.options.find((option)=>option.value === row[columnKey])?.label || null
                            }, void 0, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx",
                                lineNumber: 201,
                                columnNumber: 15
                            }, this);
                            break;
                        default:
                            component = /*#__PURE__*/ _jsxDEV(StyledDefaultContainer, {
                                id: `${columnKey}-${row.__index}`,
                                children: row[columnKey]
                            }, void 0, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx",
                                lineNumber: 210,
                                columnNumber: 15
                            }, this);
                    }
                    if (isDefined(row.__errors?.[columnKey])) {
                        return /*#__PURE__*/ _jsxDEV(_Fragment, {
                            children: [
                                component,
                                /*#__PURE__*/ createPortal(/*#__PURE__*/ _jsxDEV(AppTooltip, {
                                    anchorSelect: `#${columnKey}-${row.__index}`,
                                    place: "top",
                                    content: row.__errors?.[columnKey]?.message
                                }, void 0, false, {
                                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx",
                                    lineNumber: 221,
                                    columnNumber: 17
                                }, this), document.body)
                            ]
                        }, void 0, true);
                    }
                    return component;
                },
                cellClass: (row)=>{
                    switch(row.__errors?.[column.key]?.level){
                        case 'error':
                            return 'rdg-cell-error';
                        case 'warning':
                            return 'rdg-cell-warning';
                        case 'info':
                            return 'rdg-cell-info';
                        default:
                            return '';
                    }
                }
            }))
    ];
var _c, _c1, _c2, _c3, _c4, _c5;
$RefreshReg$(_c, "StyledHeaderContainer");
$RefreshReg$(_c1, "StyledHeaderLabel");
$RefreshReg$(_c2, "StyledCheckboxContainer");
$RefreshReg$(_c3, "StyledToggleContainer");
$RefreshReg$(_c4, "StyledInputContainer");
$RefreshReg$(_c5, "StyledDefaultContainer");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/spreadsheet-import/steps/components/ValidationStep/components/columns.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,