import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/object-record/advanced-filter/components/AdvancedFilterFieldSelectMenu.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterFieldSelectMenu.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { DropdownMenuItemsContainer } from "/src/modules/ui/layout/dropdown/components/DropdownMenuItemsContainer.tsx";
import { OBJECT_FILTER_DROPDOWN_ID } from "/src/modules/object-record/object-filter-dropdown/constants/ObjectFilterDropdownId.ts";
import { objectFilterDropdownSearchInputComponentState } from "/src/modules/object-record/object-filter-dropdown/states/objectFilterDropdownSearchInputComponentState.ts";
import { useRecordIndexContextOrThrow } from "/src/modules/object-record/record-index/contexts/RecordIndexContext.ts";
import { visibleTableColumnsComponentSelector } from "/src/modules/object-record/record-table/states/selectors/visibleTableColumnsComponentSelector.ts";
import { DropdownMenuSeparator } from "/src/modules/ui/layout/dropdown/components/DropdownMenuSeparator.tsx";
import { SelectableItem } from "/src/modules/ui/layout/selectable-list/components/SelectableItem.tsx";
import { SelectableList } from "/src/modules/ui/layout/selectable-list/components/SelectableList.tsx";
import { useSelectableList } from "/src/modules/ui/layout/selectable-list/hooks/useSelectableList.ts";
import { useRecoilComponentValueV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentValueV2.ts";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
import { getFilterTypeFromFieldType } from "/src/modules/object-metadata/utils/formatFieldMetadataItemsAsFilterDefinitions.ts";
import { AdvancedFilterFieldSelectSearchInput } from "/src/modules/object-record/advanced-filter/components/AdvancedFilterFieldSelectSearchInput.tsx";
import { useAdvancedFilterFieldSelectDropdown } from "/src/modules/object-record/advanced-filter/hooks/useAdvancedFilterFieldSelectDropdown.ts";
import { useSelectFieldUsedInAdvancedFilterDropdown } from "/src/modules/object-record/advanced-filter/hooks/useSelectFieldUsedInAdvancedFilterDropdown.ts";
import { ObjectFilterDropdownFilterSelectMenuItemV2 } from "/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownFilterSelectMenuItemV2.tsx";
import { fieldMetadataItemIdUsedInDropdownComponentState } from "/src/modules/object-record/object-filter-dropdown/states/fieldMetadataItemIdUsedInDropdownComponentState.ts";
import { objectFilterDropdownIsSelectingCompositeFieldComponentState } from "/src/modules/object-record/object-filter-dropdown/states/objectFilterDropdownIsSelectingCompositeFieldComponentState.ts";
import { objectFilterDropdownSubMenuFieldTypeComponentState } from "/src/modules/object-record/object-filter-dropdown/states/objectFilterDropdownSubMenuFieldTypeComponentState.ts";
import { FiltersHotkeyScope } from "/src/modules/object-record/object-filter-dropdown/types/FiltersHotkeyScope.ts";
import { isCompositeField } from "/src/modules/object-record/object-filter-dropdown/utils/isCompositeField.ts";
import { useFilterableFieldMetadataItemsInRecordIndexContext } from "/src/modules/object-record/record-filter/hooks/useFilterableFieldMetadataItemsInRecordIndexContext.ts";
import { useRecoilComponentStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentStateV2.ts";
import { useSetRecoilComponentStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useSetRecoilComponentStateV2.ts";
export const AdvancedFilterFieldSelectMenu = ({ recordFilterId })=>{
    _s();
    const { recordIndexId } = useRecordIndexContextOrThrow();
    const { closeAdvancedFilterFieldSelectDropdown } = useAdvancedFilterFieldSelectDropdown(recordFilterId);
    const [objectFilterDropdownSearchInput] = useRecoilComponentStateV2(objectFilterDropdownSearchInputComponentState);
    const { filterableFieldMetadataItems } = useFilterableFieldMetadataItemsInRecordIndexContext();
    const visibleTableColumns = useRecoilComponentValueV2(visibleTableColumnsComponentSelector, recordIndexId);
    const visibleColumnsIds = visibleTableColumns.map((column)=>column.fieldMetadataId);
    const filteredSearchInputFieldMetadataItems = filterableFieldMetadataItems.filter((fieldMetadataItem)=>fieldMetadataItem.label.toLocaleLowerCase().includes(objectFilterDropdownSearchInput.toLocaleLowerCase()));
    const visibleColumnsFieldMetadataItems = filteredSearchInputFieldMetadataItems.sort((a, b)=>{
        return visibleColumnsIds.indexOf(a.id) - visibleColumnsIds.indexOf(b.id);
    }).filter((fieldMetadataItem)=>visibleColumnsIds.includes(fieldMetadataItem.id));
    const hiddenColumnsFieldMetadataItems = filteredSearchInputFieldMetadataItems.sort((a, b)=>a.label.localeCompare(b.label)).filter((fieldMetadataItem)=>!visibleColumnsIds.includes(fieldMetadataItem.id));
    const selectableFieldMetadataItemIds = filterableFieldMetadataItems.map((fieldMetadataItem)=>fieldMetadataItem.id);
    const { resetSelectedItem } = useSelectableList(OBJECT_FILTER_DROPDOWN_ID);
    const { selectFieldUsedInAdvancedFilterDropdown } = useSelectFieldUsedInAdvancedFilterDropdown();
    const [, setObjectFilterDropdownSubMenuFieldType] = useRecoilComponentStateV2(objectFilterDropdownSubMenuFieldTypeComponentState);
    const [, setObjectFilterDropdownIsSelectingCompositeField] = useRecoilComponentStateV2(objectFilterDropdownIsSelectingCompositeFieldComponentState);
    const setFieldMetadataItemIdUsedInDropdown = useSetRecoilComponentStateV2(fieldMetadataItemIdUsedInDropdownComponentState);
    const handleEnter = (fieldMetadataItemId)=>{
        const selectedFieldMetadataItem = filterableFieldMetadataItems.find((fieldMetadataItem)=>fieldMetadataItem.id === fieldMetadataItemId);
        if (!isDefined(selectedFieldMetadataItem)) {
            return;
        }
        handleFieldMetadataItemSelect(selectedFieldMetadataItem);
    };
    const handleFieldMetadataItemSelect = (selectedFieldMetadataItem)=>{
        resetSelectedItem();
        const filterType = getFilterTypeFromFieldType(selectedFieldMetadataItem.type);
        if (isCompositeField(filterType)) {
            setObjectFilterDropdownSubMenuFieldType(filterType);
            setFieldMetadataItemIdUsedInDropdown(selectedFieldMetadataItem.id);
            setObjectFilterDropdownIsSelectingCompositeField(true);
        } else {
            selectFieldUsedInAdvancedFilterDropdown({
                fieldMetadataItemId: selectedFieldMetadataItem.id,
                recordFilterId
            });
            closeAdvancedFilterFieldSelectDropdown();
        }
    };
    const shouldShowSeparator = visibleColumnsFieldMetadataItems.length > 0 && hiddenColumnsFieldMetadataItems.length > 0;
    return /*#__PURE__*/ _jsxDEV(_Fragment, {
        children: [
            /*#__PURE__*/ _jsxDEV(AdvancedFilterFieldSelectSearchInput, {}, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterFieldSelectMenu.tsx",
                lineNumber: 143,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(SelectableList, {
                hotkeyScope: FiltersHotkeyScope.ObjectFilterDropdownButton,
                selectableItemIdArray: selectableFieldMetadataItemIds,
                selectableListId: OBJECT_FILTER_DROPDOWN_ID,
                onEnter: handleEnter,
                children: /*#__PURE__*/ _jsxDEV(DropdownMenuItemsContainer, {
                    children: [
                        visibleColumnsFieldMetadataItems.map((visibleFieldMetadataItem, index)=>/*#__PURE__*/ _jsxDEV(SelectableItem, {
                                itemId: visibleFieldMetadataItem.id,
                                children: /*#__PURE__*/ _jsxDEV(ObjectFilterDropdownFilterSelectMenuItemV2, {
                                    fieldMetadataItemToSelect: visibleFieldMetadataItem,
                                    onClick: handleFieldMetadataItemSelect
                                }, void 0, false, {
                                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterFieldSelectMenu.tsx",
                                    lineNumber: 157,
                                    columnNumber: 17
                                }, this)
                            }, `visible-select-filter-${index}`, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterFieldSelectMenu.tsx",
                                lineNumber: 153,
                                columnNumber: 15
                            }, this)),
                        shouldShowSeparator && /*#__PURE__*/ _jsxDEV(DropdownMenuSeparator, {}, void 0, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterFieldSelectMenu.tsx",
                            lineNumber: 164,
                            columnNumber: 35
                        }, this),
                        hiddenColumnsFieldMetadataItems.map((hiddenFieldMetadataItem, index)=>/*#__PURE__*/ _jsxDEV(SelectableItem, {
                                itemId: hiddenFieldMetadataItem.id,
                                children: /*#__PURE__*/ _jsxDEV(ObjectFilterDropdownFilterSelectMenuItemV2, {
                                    fieldMetadataItemToSelect: hiddenFieldMetadataItem,
                                    onClick: handleFieldMetadataItemSelect
                                }, void 0, false, {
                                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterFieldSelectMenu.tsx",
                                    lineNumber: 171,
                                    columnNumber: 17
                                }, this)
                            }, `hidden-select-filter-${index}`, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterFieldSelectMenu.tsx",
                                lineNumber: 167,
                                columnNumber: 15
                            }, this))
                    ]
                }, void 0, true, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterFieldSelectMenu.tsx",
                    lineNumber: 150,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterFieldSelectMenu.tsx",
                lineNumber: 144,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true);
};
_s(AdvancedFilterFieldSelectMenu, "2eWZDd/WuUVGIbTqOgbl//orqnE=", false, function() {
    return [
        useRecordIndexContextOrThrow,
        useAdvancedFilterFieldSelectDropdown,
        useRecoilComponentStateV2,
        useFilterableFieldMetadataItemsInRecordIndexContext,
        useRecoilComponentValueV2,
        useSelectableList,
        useSelectFieldUsedInAdvancedFilterDropdown,
        useRecoilComponentStateV2,
        useRecoilComponentStateV2,
        useSetRecoilComponentStateV2
    ];
});
_c = AdvancedFilterFieldSelectMenu;
var _c;
$RefreshReg$(_c, "AdvancedFilterFieldSelectMenu");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterFieldSelectMenu.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterFieldSelectMenu.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,