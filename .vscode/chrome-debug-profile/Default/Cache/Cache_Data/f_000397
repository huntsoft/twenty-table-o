import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionCreateRecord.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionCreateRecord.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { useFilteredObjectMetadataItems } from "/src/modules/object-metadata/hooks/useFilteredObjectMetadataItems.ts";
import { useObjectMetadataItem } from "/src/modules/object-metadata/hooks/useObjectMetadataItem.ts";
import { formatFieldMetadataItemAsFieldDefinition } from "/src/modules/object-metadata/utils/formatFieldMetadataItemAsFieldDefinition.ts";
import { FormFieldInput } from "/src/modules/object-record/record-field/components/FormFieldInput.tsx";
import { Select } from "/src/modules/ui/input/components/Select.tsx";
import { useViewOrDefaultViewFromPrefetchedViews } from "/src/modules/views/hooks/useViewOrDefaultViewFromPrefetchedViews.ts";
import { WorkflowStepBody } from "/src/modules/workflow/workflow-steps/components/WorkflowStepBody.tsx";
import { WorkflowStepHeader } from "/src/modules/workflow/workflow-steps/components/WorkflowStepHeader.tsx";
import { useActionHeaderTypeOrThrow } from "/src/modules/workflow/workflow-steps/workflow-actions/hooks/useActionHeaderTypeOrThrow.ts";
import { useActionIconColorOrThrow } from "/src/modules/workflow/workflow-steps/workflow-actions/hooks/useActionIconColorOrThrow.ts";
import { getActionIcon } from "/src/modules/workflow/workflow-steps/workflow-actions/utils/getActionIcon.ts";
import { WorkflowVariablePicker } from "/src/modules/workflow/workflow-variables/components/WorkflowVariablePicker.tsx";
import __vite__cjsImport14_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useEffect = __vite__cjsImport14_react["useEffect"]; const useState = __vite__cjsImport14_react["useState"];
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
import { HorizontalSeparator, useIcons } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { useDebouncedCallback } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/use-debounce.js?v=226f7286";
import { FieldMetadataType } from "/src/generated/graphql.tsx";
const sortByViewFieldPosition = (a, b)=>{
    if (isDefined(a.viewFieldPosition) && isDefined(b.viewFieldPosition)) {
        return a.viewFieldPosition - b.viewFieldPosition;
    }
    if (isDefined(a.viewFieldPosition)) {
        return -1;
    }
    if (isDefined(b.viewFieldPosition)) {
        return 1;
    }
    return 0;
};
export const WorkflowEditActionCreateRecord = ({ action, actionOptions })=>{
    _s();
    const { getIcon } = useIcons();
    const { activeObjectMetadataItems } = useFilteredObjectMetadataItems();
    const availableMetadata = activeObjectMetadataItems.map((item)=>({
            Icon: getIcon(item.icon),
            label: item.labelPlural,
            value: item.nameSingular
        }));
    const [formData, setFormData] = useState({
        objectName: action.settings.input.objectName,
        ...action.settings.input.objectRecord
    });
    const isFormDisabled = actionOptions.readonly;
    const objectNameSingular = formData.objectName;
    const { objectMetadataItem } = useObjectMetadataItem({
        objectNameSingular
    });
    const { view: indexView } = useViewOrDefaultViewFromPrefetchedViews({
        objectMetadataItemId: objectMetadataItem.id ?? ''
    });
    const viewFields = indexView?.viewFields ?? [];
    const inlineFieldMetadataItems = objectMetadataItem.fields.filter((fieldMetadataItem)=>fieldMetadataItem.type !== FieldMetadataType.RELATION && !fieldMetadataItem.isSystem && fieldMetadataItem.isActive).map((fieldMetadataItem)=>{
        const viewField = viewFields.find((viewField)=>viewField.fieldMetadataId === fieldMetadataItem.id);
        return {
            ...fieldMetadataItem,
            viewFieldPosition: viewField?.position
        };
    }).sort(sortByViewFieldPosition);
    const inlineFieldDefinitions = inlineFieldMetadataItems.map((fieldMetadataItem)=>formatFieldMetadataItemAsFieldDefinition({
            field: fieldMetadataItem,
            objectMetadataItem,
            showLabel: true,
            labelWidth: 90
        }));
    const handleFieldChange = (fieldName, updatedValue)=>{
        const newFormData = {
            ...formData,
            [fieldName]: updatedValue
        };
        setFormData(newFormData);
        saveAction(newFormData);
    };
    const saveAction = useDebouncedCallback(async (formData)=>{
        if (actionOptions.readonly === true) {
            return;
        }
        const { objectName: updatedObjectName, ...updatedOtherFields } = formData;
        actionOptions.onActionUpdate({
            ...action,
            settings: {
                ...action.settings,
                input: {
                    objectName: updatedObjectName,
                    objectRecord: updatedOtherFields
                }
            }
        });
    }, 1000);
    useEffect(()=>{
        return ()=>{
            saveAction.flush();
        };
    }, [
        saveAction
    ]);
    const headerTitle = isDefined(action.name) ? action.name : `Create Record`;
    const headerIcon = getActionIcon(action.type);
    const headerIconColor = useActionIconColorOrThrow(action.type);
    const headerType = useActionHeaderTypeOrThrow(action.type);
    return /*#__PURE__*/ _jsxDEV(_Fragment, {
        children: [
            /*#__PURE__*/ _jsxDEV(WorkflowStepHeader, {
                onTitleChange: (newName)=>{
                    if (actionOptions.readonly === true) {
                        return;
                    }
                    actionOptions.onActionUpdate({
                        ...action,
                        name: newName
                    });
                },
                Icon: getIcon(headerIcon),
                iconColor: headerIconColor,
                initialTitle: headerTitle,
                headerType: headerType,
                disabled: isFormDisabled
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionCreateRecord.tsx",
                lineNumber: 167,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(WorkflowStepBody, {
                children: [
                    /*#__PURE__*/ _jsxDEV(Select, {
                        dropdownId: "workflow-edit-action-record-create-object-name",
                        label: "Object",
                        fullWidth: true,
                        disabled: isFormDisabled,
                        value: formData.objectName,
                        emptyOption: {
                            label: 'Select an option',
                            value: ''
                        },
                        options: availableMetadata,
                        onChange: (updatedObjectName)=>{
                            const newFormData = {
                                objectName: updatedObjectName
                            };
                            setFormData(newFormData);
                            saveAction(newFormData);
                        },
                        withSearchInput: true
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionCreateRecord.tsx",
                        lineNumber: 185,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ _jsxDEV(HorizontalSeparator, {
                        noMargin: true
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionCreateRecord.tsx",
                        lineNumber: 205,
                        columnNumber: 9
                    }, this),
                    inlineFieldDefinitions.map((field)=>{
                        const currentValue = formData[field.metadata.fieldName];
                        return /*#__PURE__*/ _jsxDEV(FormFieldInput, {
                            defaultValue: currentValue,
                            field: field,
                            onChange: (value)=>{
                                handleFieldChange(field.metadata.fieldName, value);
                            },
                            VariablePicker: WorkflowVariablePicker,
                            readonly: isFormDisabled
                        }, field.metadata.fieldName, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionCreateRecord.tsx",
                            lineNumber: 211,
                            columnNumber: 13
                        }, this);
                    })
                ]
            }, void 0, true, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionCreateRecord.tsx",
                lineNumber: 184,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true);
};
_s(WorkflowEditActionCreateRecord, "JoP73pZFhsLDlT1qLmzjH2Ncmeg=", false, function() {
    return [
        useIcons,
        useFilteredObjectMetadataItems,
        useObjectMetadataItem,
        useViewOrDefaultViewFromPrefetchedViews,
        useDebouncedCallback,
        useActionIconColorOrThrow,
        useActionHeaderTypeOrThrow
    ];
});
_c = WorkflowEditActionCreateRecord;
var _c;
$RefreshReg$(_c, "WorkflowEditActionCreateRecord");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionCreateRecord.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionCreateRecord.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,