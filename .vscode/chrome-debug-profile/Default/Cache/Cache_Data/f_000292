import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/object-record/record-board/record-board-card/components/RecordBoardCard.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-card/components/RecordBoardCard.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { recordIndexActionMenuDropdownPositionComponentState } from "/src/modules/action-menu/states/recordIndexActionMenuDropdownPositionComponentState.ts";
import { getActionMenuDropdownIdFromActionMenuId } from "/src/modules/action-menu/utils/getActionMenuDropdownIdFromActionMenuId.ts";
import { getActionMenuIdFromRecordIndexId } from "/src/modules/action-menu/utils/getActionMenuIdFromRecordIndexId.ts";
import { RecordBoardCardContext } from "/src/modules/object-record/record-board/record-board-card/contexts/RecordBoardCardContext.ts";
import { RecordBoardScopeInternalContext } from "/src/modules/object-record/record-board/scopes/scope-internal-context/RecordBoardScopeInternalContext.ts";
import { isRecordBoardCardSelectedComponentFamilyState } from "/src/modules/object-record/record-board/states/isRecordBoardCardSelectedComponentFamilyState.ts";
import { isRecordBoardCompactModeActiveComponentState } from "/src/modules/object-record/record-board/states/isRecordBoardCompactModeActiveComponentState.ts";
import { recordBoardVisibleFieldDefinitionsComponentSelector } from "/src/modules/object-record/record-board/states/selectors/recordBoardVisibleFieldDefinitionsComponentSelector.ts";
import { useOpenRecordInCommandMenu } from "/src/modules/command-menu/hooks/useOpenRecordInCommandMenu.ts";
import { RecordBoardCardBody } from "/src/modules/object-record/record-board/record-board-card/components/RecordBoardCardBody.tsx";
import { RecordBoardCardHeader } from "/src/modules/object-record/record-board/record-board-card/components/RecordBoardCardHeader.tsx";
import { useRecordIndexContextOrThrow } from "/src/modules/object-record/record-index/contexts/RecordIndexContext.ts";
import { recordIndexOpenRecordInState } from "/src/modules/object-record/record-index/states/recordIndexOpenRecordInState.ts";
import { RecordValueSetterEffect } from "/src/modules/object-record/record-store/components/RecordValueSetterEffect.tsx";
import { AppPath } from "/src/modules/types/AppPath.ts";
import { useDropdownV2 } from "/src/modules/ui/layout/dropdown/hooks/useDropdownV2.ts";
import { useAvailableScopeIdOrThrow } from "/src/modules/ui/utilities/recoil-scope/scopes-internal/hooks/useAvailableScopeId.ts";
import { RecordBoardScrollWrapperContext } from "/src/modules/ui/utilities/scroll/contexts/ScrollWrapperContexts.tsx";
import { useRecoilComponentFamilyStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentFamilyStateV2.ts";
import { useRecoilComponentValueV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentValueV2.ts";
import { extractComponentState } from "/src/modules/ui/utilities/state/component-state/utils/extractComponentState.ts";
import { ViewOpenRecordInType } from "/src/modules/views/types/ViewOpenRecordInType.ts";
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import __vite__cjsImport25_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useContext = __vite__cjsImport25_react["useContext"]; const useState = __vite__cjsImport25_react["useState"];
import { InView, useInView } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react-intersection-observer.js?v=226f7286";
import { useRecoilValue, useSetRecoilState } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/recoil.js?v=226f7286";
import { AnimatedEaseInOut } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { useDebouncedCallback } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/use-debounce.js?v=226f7286";
import { useNavigateApp } from "/src/hooks/useNavigateApp.ts";
const StyledBoardCard = styled.div`
  background-color: ${({ theme, selected })=>selected ? theme.accent.quaternary : theme.background.secondary};
  border: 1px solid
    ${({ theme, selected })=>selected ? theme.accent.secondary : theme.border.color.medium};
  border-radius: ${({ theme })=>theme.border.radius.sm};
  box-shadow: ${({ theme })=>theme.boxShadow.light};
  color: ${({ theme })=>theme.font.color.primary};
  &:hover {
    background-color: ${({ theme, selected })=>selected && theme.accent.tertiary};
    border: 1px solid
      ${({ theme, selected })=>selected ? theme.accent.primary : theme.border.color.medium};
  }
  cursor: pointer;

  .checkbox-container {
    transition: all ease-in-out 160ms;
    opacity: ${({ selected })=>selected ? 1 : 0};
  }

  &:hover .checkbox-container {
    opacity: 1;
  }

  .compact-icon-container {
    transition: all ease-in-out 160ms;
    opacity: 0;
  }
  &:hover .compact-icon-container {
    opacity: 1;
  }
`;
_c = StyledBoardCard;
const StyledBoardCardWrapper = styled.div`
  padding-bottom: ${({ theme })=>theme.spacing(2)};
  width: 100%;
`;
_c1 = StyledBoardCardWrapper;
export const RecordBoardCard = ()=>{
    _s();
    const navigate = useNavigateApp();
    const { openRecordInCommandMenu } = useOpenRecordInCommandMenu();
    const { recordId } = useContext(RecordBoardCardContext);
    const visibleFieldDefinitions = useRecoilComponentValueV2(recordBoardVisibleFieldDefinitionsComponentSelector);
    const isCompactModeActive = useRecoilComponentValueV2(isRecordBoardCompactModeActiveComponentState);
    const [isCardExpanded, setIsCardExpanded] = useState(false);
    const [isCurrentCardSelected, setIsCurrentCardSelected] = useRecoilComponentFamilyStateV2(isRecordBoardCardSelectedComponentFamilyState, recordId);
    const { objectNameSingular } = useRecordIndexContextOrThrow();
    const recordBoardId = useAvailableScopeIdOrThrow(RecordBoardScopeInternalContext);
    const actionMenuId = getActionMenuIdFromRecordIndexId(recordBoardId);
    const actionMenuDropdownId = getActionMenuDropdownIdFromActionMenuId(actionMenuId);
    const setActionMenuDropdownPosition = useSetRecoilState(extractComponentState(recordIndexActionMenuDropdownPositionComponentState, actionMenuDropdownId));
    const { openDropdown } = useDropdownV2();
    const recordIndexOpenRecordIn = useRecoilValue(recordIndexOpenRecordInState);
    const handleActionMenuDropdown = (event)=>{
        event.preventDefault();
        setIsCurrentCardSelected(true);
        setActionMenuDropdownPosition({
            x: event.clientX,
            y: event.clientY
        });
        openDropdown(actionMenuDropdownId);
    };
    const handleCardClick = ()=>{
        if (recordIndexOpenRecordIn === ViewOpenRecordInType.SIDE_PANEL) {
            openRecordInCommandMenu({
                recordId,
                objectNameSingular
            });
        } else {
            navigate(AppPath.RecordShowPage, {
                objectNameSingular,
                objectRecordId: recordId
            });
        }
    };
    const onMouseLeaveBoard = useDebouncedCallback(()=>{
        if (isCompactModeActive && isCardExpanded) {
            setIsCardExpanded(false);
        }
    }, 800);
    const scrollWrapperRef = useContext(RecordBoardScrollWrapperContext);
    const { ref: cardRef } = useInView({
        root: scrollWrapperRef?.ref.current,
        rootMargin: '1000px'
    });
    const visibleFieldDefinitionsFiltered = visibleFieldDefinitions.filter((boardField)=>!boardField.isLabelIdentifier);
    return /*#__PURE__*/ _jsxDEV(StyledBoardCardWrapper, {
        className: "record-board-card",
        onContextMenu: handleActionMenuDropdown,
        children: [
            /*#__PURE__*/ _jsxDEV(RecordValueSetterEffect, {
                recordId: recordId
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-card/components/RecordBoardCard.tsx",
                lineNumber: 163,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(InView, {
                children: /*#__PURE__*/ _jsxDEV(StyledBoardCard, {
                    ref: cardRef,
                    selected: isCurrentCardSelected,
                    onMouseLeave: onMouseLeaveBoard,
                    onClick: handleCardClick,
                    children: [
                        /*#__PURE__*/ _jsxDEV(RecordBoardCardHeader, {
                            isCardExpanded: isCardExpanded,
                            setIsCardExpanded: setIsCardExpanded
                        }, void 0, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-card/components/RecordBoardCard.tsx",
                            lineNumber: 171,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ _jsxDEV(AnimatedEaseInOut, {
                            isOpen: isCardExpanded || !isCompactModeActive,
                            initial: false,
                            children: /*#__PURE__*/ _jsxDEV(RecordBoardCardBody, {
                                fieldDefinitions: visibleFieldDefinitionsFiltered
                            }, void 0, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-card/components/RecordBoardCard.tsx",
                                lineNumber: 179,
                                columnNumber: 13
                            }, this)
                        }, void 0, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-card/components/RecordBoardCard.tsx",
                            lineNumber: 175,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-card/components/RecordBoardCard.tsx",
                    lineNumber: 165,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-card/components/RecordBoardCard.tsx",
                lineNumber: 164,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-card/components/RecordBoardCard.tsx",
        lineNumber: 159,
        columnNumber: 5
    }, this);
};
_s(RecordBoardCard, "fWsjYp006lSgjOXATtSXBq8jebI=", false, function() {
    return [
        useNavigateApp,
        useOpenRecordInCommandMenu,
        useRecoilComponentValueV2,
        useRecoilComponentValueV2,
        useRecoilComponentFamilyStateV2,
        useRecordIndexContextOrThrow,
        useAvailableScopeIdOrThrow,
        useSetRecoilState,
        useDropdownV2,
        useRecoilValue,
        useDebouncedCallback,
        useInView
    ];
});
_c2 = RecordBoardCard;
var _c, _c1, _c2;
$RefreshReg$(_c, "StyledBoardCard");
$RefreshReg$(_c1, "StyledBoardCardWrapper");
$RefreshReg$(_c2, "RecordBoardCard");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-card/components/RecordBoardCard.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-card/components/RecordBoardCard.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,