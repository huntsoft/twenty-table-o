import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import __vite__cjsImport3_tsKeyEnum from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/ts-key-enum.js?v=226f7286"; const Key = __vite__cjsImport3_tsKeyEnum["Key"];
import { IconLayoutKanban, IconTable, IconX } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { useObjectMetadataItemById } from "/src/modules/object-metadata/hooks/useObjectMetadataItemById.ts";
import { IconPicker } from "/src/modules/ui/input/components/IconPicker.tsx";
import { Select } from "/src/modules/ui/input/components/Select.tsx";
import { TextInputV2 } from "/src/modules/ui/input/components/TextInputV2.tsx";
import { DropdownMenuHeader } from "/src/modules/ui/layout/dropdown/components/DropdownMenuHeader/DropdownMenuHeader.tsx";
import { DropdownMenuItemsContainer } from "/src/modules/ui/layout/dropdown/components/DropdownMenuItemsContainer.tsx";
import { DropdownMenuSeparator } from "/src/modules/ui/layout/dropdown/components/DropdownMenuSeparator.tsx";
import { useScopedHotkeys } from "/src/modules/ui/utilities/hotkey/hooks/useScopedHotkeys.ts";
import { useSetHotkeyScope } from "/src/modules/ui/utilities/hotkey/hooks/useSetHotkeyScope.ts";
import { useRecoilComponentStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentStateV2.ts";
import { useRecoilComponentValueV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentValueV2.ts";
import { useSetRecoilComponentStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useSetRecoilComponentStateV2.ts";
import { viewObjectMetadataIdComponentState } from "/src/modules/views/states/viewObjectMetadataIdComponentState.ts";
import { ViewsHotkeyScope } from "/src/modules/views/types/ViewsHotkeyScope.ts";
import { ViewType } from "/src/modules/views/types/ViewType.ts";
import { ViewPickerCreateButton } from "/src/modules/views/view-picker/components/ViewPickerCreateButton.tsx";
import { ViewPickerIconAndNameContainer } from "/src/modules/views/view-picker/components/ViewPickerIconAndNameContainer.tsx";
import { ViewPickerSaveButtonContainer } from "/src/modules/views/view-picker/components/ViewPickerSaveButtonContainer.tsx";
import { ViewPickerSelectContainer } from "/src/modules/views/view-picker/components/ViewPickerSelectContainer.tsx";
import { VIEW_PICKER_KANBAN_FIELD_DROPDOWN_ID } from "/src/modules/views/view-picker/constants/ViewPickerKanbanFieldDropdownId.ts";
import { VIEW_PICKER_VIEW_TYPE_DROPDOWN_ID } from "/src/modules/views/view-picker/constants/ViewPickerViewTypeDropdownId.ts";
import { useCreateViewFromCurrentState } from "/src/modules/views/view-picker/hooks/useCreateViewFromCurrentState.ts";
import { useGetAvailableFieldsForKanban } from "/src/modules/views/view-picker/hooks/useGetAvailableFieldsForKanban.ts";
import { useViewPickerMode } from "/src/modules/views/view-picker/hooks/useViewPickerMode.ts";
import { viewPickerInputNameComponentState } from "/src/modules/views/view-picker/states/viewPickerInputNameComponentState.ts";
import { viewPickerIsDirtyComponentState } from "/src/modules/views/view-picker/states/viewPickerIsDirtyComponentState.ts";
import { viewPickerIsPersistingComponentState } from "/src/modules/views/view-picker/states/viewPickerIsPersistingComponentState.ts";
import { viewPickerKanbanFieldMetadataIdComponentState } from "/src/modules/views/view-picker/states/viewPickerKanbanFieldMetadataIdComponentState.ts";
import { viewPickerSelectedIconComponentState } from "/src/modules/views/view-picker/states/viewPickerSelectedIconComponentState.ts";
import { viewPickerTypeComponentState } from "/src/modules/views/view-picker/states/viewPickerTypeComponentState.ts";
import __vite__cjsImport35_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useMemo = __vite__cjsImport35_react["useMemo"]; const useState = __vite__cjsImport35_react["useState"];
import { useLingui as $_useLingui } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@lingui_react.js?v=226f7286";
import { DropdownMenuHeaderLeftComponent } from "/src/modules/ui/layout/dropdown/components/DropdownMenuHeader/internal/DropdownMenuHeaderLeftComponent.tsx";
const StyledNoKanbanFieldAvailableContainer = styled.div`
  color: ${({ theme })=>theme.font.color.light};
  display: flex;
  margin: ${({ theme })=>theme.spacing(1, 2)};
  user-select: none;
  width: calc(100% - ${({ theme })=>theme.spacing(4)});
`;
_c = StyledNoKanbanFieldAvailableContainer;
export const ViewPickerContentCreateMode = ()=>{
    _s();
    const { i18n: $__i18n, _: $__ } = $_useLingui();
    const { viewPickerMode, setViewPickerMode } = useViewPickerMode();
    const [hasManuallySelectedIcon, setHasManuallySelectedIcon] = useState(false);
    const viewObjectMetadataId = useRecoilComponentValueV2(viewObjectMetadataIdComponentState);
    const { objectMetadataItem } = useObjectMetadataItemById({
        objectId: viewObjectMetadataId ?? ''
    });
    const [viewPickerInputName, setViewPickerInputName] = useRecoilComponentStateV2(viewPickerInputNameComponentState);
    const [viewPickerSelectedIcon, setViewPickerSelectedIcon] = useRecoilComponentStateV2(viewPickerSelectedIconComponentState);
    const viewPickerIsPersisting = useRecoilComponentValueV2(viewPickerIsPersistingComponentState);
    const setViewPickerIsDirty = useSetRecoilComponentStateV2(viewPickerIsDirtyComponentState);
    const [viewPickerKanbanFieldMetadataId, setViewPickerKanbanFieldMetadataId] = useRecoilComponentStateV2(viewPickerKanbanFieldMetadataIdComponentState);
    const [viewPickerType, setViewPickerType] = useRecoilComponentStateV2(viewPickerTypeComponentState);
    const setHotkeyScope = useSetHotkeyScope();
    const { createViewFromCurrentState } = useCreateViewFromCurrentState();
    const { availableFieldsForKanban } = useGetAvailableFieldsForKanban();
    useScopedHotkeys(Key.Enter, async ()=>{
        if (viewPickerIsPersisting) {
            return;
        }
        if (viewPickerType === ViewType.Kanban && availableFieldsForKanban.length === 0) {
            return;
        }
        await createViewFromCurrentState();
    }, ViewsHotkeyScope.ListDropdown);
    const defaultIcon = viewPickerType === ViewType.Kanban ? 'IconLayoutKanban' : 'IconTable';
    const selectedIcon = useMemo(()=>{
        if (hasManuallySelectedIcon) {
            return viewPickerSelectedIcon;
        }
        if (viewPickerMode === 'create-from-current') {
            return viewPickerSelectedIcon || defaultIcon;
        }
        return defaultIcon;
    }, [
        hasManuallySelectedIcon,
        viewPickerSelectedIcon,
        viewPickerMode,
        defaultIcon
    ]);
    const onIconChange = ({ iconKey })=>{
        setViewPickerIsDirty(true);
        setViewPickerSelectedIcon(iconKey);
        setHasManuallySelectedIcon(true);
    };
    const handleClose = async ()=>{
        setViewPickerMode('list');
    };
    return /*#__PURE__*/ _jsxDEV(_Fragment, {
        children: [
            /*#__PURE__*/ _jsxDEV(DropdownMenuHeader, {
                StartComponent: /*#__PURE__*/ _jsxDEV(DropdownMenuHeaderLeftComponent, {
                    onClick: handleClose,
                    Icon: IconX
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                    lineNumber: 136,
                    columnNumber: 11
                }, void 0),
                children: $__i18n._({
                    id: "zt6Erc",
                    message: "Create view"
                })
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                lineNumber: 134,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuSeparator, {}, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                lineNumber: 141,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuItemsContainer, {
                children: [
                    /*#__PURE__*/ _jsxDEV(ViewPickerIconAndNameContainer, {
                        children: [
                            /*#__PURE__*/ _jsxDEV(IconPicker, {
                                onChange: onIconChange,
                                selectedIconKey: selectedIcon,
                                onClose: ()=>setHotkeyScope(ViewsHotkeyScope.ListDropdown)
                            }, void 0, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                                lineNumber: 144,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ _jsxDEV(TextInputV2, {
                                value: viewPickerInputName,
                                onChange: (value)=>{
                                    setViewPickerIsDirty(true);
                                    setViewPickerInputName(value);
                                },
                                autoFocus: true
                            }, void 0, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                                lineNumber: 149,
                                columnNumber: 11
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                        lineNumber: 143,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ _jsxDEV(ViewPickerSelectContainer, {
                        children: /*#__PURE__*/ _jsxDEV(Select, {
                            label: $__i18n._({
                                id: "bJAIqT",
                                message: "View type"
                            }),
                            fullWidth: true,
                            value: viewPickerType,
                            onChange: (value)=>{
                                setViewPickerIsDirty(true);
                                setViewPickerType(value);
                            },
                            options: [
                                {
                                    value: ViewType.Table,
                                    label: $__i18n._({
                                        id: "4hJhzz",
                                        message: "Table"
                                    }),
                                    Icon: IconTable
                                },
                                {
                                    value: ViewType.Kanban,
                                    label: $__i18n._({
                                        id: "OGXtL8",
                                        message: "Kanban"
                                    }),
                                    Icon: IconLayoutKanban
                                }
                            ],
                            dropdownId: VIEW_PICKER_VIEW_TYPE_DROPDOWN_ID
                        }, void 0, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                            lineNumber: 159,
                            columnNumber: 11
                        }, this)
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                        lineNumber: 158,
                        columnNumber: 9
                    }, this),
                    viewPickerType === ViewType.Kanban && /*#__PURE__*/ _jsxDEV(_Fragment, {
                        children: [
                            /*#__PURE__*/ _jsxDEV(ViewPickerSelectContainer, {
                                children: /*#__PURE__*/ _jsxDEV(Select, {
                                    label: $__i18n._({
                                        id: "ErU1td",
                                        message: "Stages"
                                    }),
                                    fullWidth: true,
                                    value: viewPickerKanbanFieldMetadataId,
                                    onChange: (value)=>{
                                        setViewPickerIsDirty(true);
                                        setViewPickerKanbanFieldMetadataId(value);
                                    },
                                    options: availableFieldsForKanban.length > 0 ? availableFieldsForKanban.map((field)=>({
                                            value: field.id,
                                            label: field.label
                                        })) : [
                                        {
                                            value: '',
                                            label: $__i18n._({
                                                id: "Hsl+kr",
                                                message: "No Select field"
                                            })
                                        }
                                    ],
                                    dropdownId: VIEW_PICKER_KANBAN_FIELD_DROPDOWN_ID
                                }, void 0, false, {
                                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                                    lineNumber: 181,
                                    columnNumber: 15
                                }, this)
                            }, void 0, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                                lineNumber: 180,
                                columnNumber: 13
                            }, this),
                            availableFieldsForKanban.length === 0 && /*#__PURE__*/ _jsxDEV(StyledNoKanbanFieldAvailableContainer, {
                                children: [
                                    "Set up a Select field on ",
                                    objectMetadataItem.labelPlural,
                                    " to create a Kanban"
                                ]
                            }, void 0, true, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                                lineNumber: 201,
                                columnNumber: 15
                            }, this)
                        ]
                    }, void 0, true)
                ]
            }, void 0, true, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                lineNumber: 142,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuSeparator, {}, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                lineNumber: 209,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuItemsContainer, {
                scrollable: false,
                children: /*#__PURE__*/ _jsxDEV(ViewPickerSaveButtonContainer, {
                    children: /*#__PURE__*/ _jsxDEV(ViewPickerCreateButton, {}, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                        lineNumber: 212,
                        columnNumber: 11
                    }, this)
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                    lineNumber: 211,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx",
                lineNumber: 210,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true);
};
_s(ViewPickerContentCreateMode, "DCV5ZtdHf7nuRFQuaY86twP+p1E=", false, function() {
    return [
        useViewPickerMode,
        useRecoilComponentValueV2,
        useObjectMetadataItemById,
        useRecoilComponentStateV2,
        useRecoilComponentStateV2,
        useRecoilComponentValueV2,
        useSetRecoilComponentStateV2,
        useRecoilComponentStateV2,
        useRecoilComponentStateV2,
        useSetHotkeyScope,
        useCreateViewFromCurrentState,
        useGetAvailableFieldsForKanban,
        useScopedHotkeys
    ];
});
_c1 = ViewPickerContentCreateMode;
var _c, _c1;
$RefreshReg$(_c, "StyledNoKanbanFieldAvailableContainer");
$RefreshReg$(_c1, "ViewPickerContentCreateMode");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentCreateMode.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,