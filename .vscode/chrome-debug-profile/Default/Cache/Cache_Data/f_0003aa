import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/views/view-picker/components/ViewPickerListContent.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerListContent.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import __vite__cjsImport3_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useCallback = __vite__cjsImport3_react["useCallback"];
import { IconPlus, MenuItem } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { useContextStoreObjectMetadataItemOrThrow } from "/src/modules/context-store/hooks/useContextStoreObjectMetadataItemOrThrow.ts";
import { prefetchViewsFromObjectMetadataItemFamilySelector } from "/src/modules/prefetch/states/selector/prefetchViewsFromObjectMetadataItemFamilySelector.ts";
import { DraggableItem } from "/src/modules/ui/layout/draggable-list/components/DraggableItem.tsx";
import { DraggableList } from "/src/modules/ui/layout/draggable-list/components/DraggableList.tsx";
import { DropdownMenuItemsContainer } from "/src/modules/ui/layout/dropdown/components/DropdownMenuItemsContainer.tsx";
import { DropdownMenuSeparator } from "/src/modules/ui/layout/dropdown/components/DropdownMenuSeparator.tsx";
import { useDropdown } from "/src/modules/ui/layout/dropdown/hooks/useDropdown.ts";
import { useSetRecoilComponentStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useSetRecoilComponentStateV2.ts";
import { useChangeView } from "/src/modules/views/hooks/useChangeView.ts";
import { useGetCurrentViewOnly } from "/src/modules/views/hooks/useGetCurrentViewOnly.ts";
import { useUpdateView } from "/src/modules/views/hooks/useUpdateView.ts";
import { ViewPickerOptionDropdown } from "/src/modules/views/view-picker/components/ViewPickerOptionDropdown.tsx";
import { VIEW_PICKER_DROPDOWN_ID } from "/src/modules/views/view-picker/constants/ViewPickerDropdownId.ts";
import { useViewPickerMode } from "/src/modules/views/view-picker/hooks/useViewPickerMode.ts";
import { viewPickerReferenceViewIdComponentState } from "/src/modules/views/view-picker/states/viewPickerReferenceViewIdComponentState.ts";
import { useLingui as $_useLingui } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@lingui_react.js?v=226f7286";
import { useRecoilValue } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/recoil.js?v=226f7286";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
import { moveArrayItem } from "/src/utils/array/moveArrayItem.ts";
const StyledBoldDropdownMenuItemsContainer = styled(DropdownMenuItemsContainer)`
  font-weight: ${({ theme })=>theme.font.weight.regular};
`;
_c = StyledBoldDropdownMenuItemsContainer;
export const ViewPickerListContent = ()=>{
    _s();
    const { i18n: $__i18n, _: $__ } = $_useLingui();
    const { objectMetadataItem } = useContextStoreObjectMetadataItemOrThrow();
    const viewsOnCurrentObject = useRecoilValue(prefetchViewsFromObjectMetadataItemFamilySelector({
        objectMetadataItemId: objectMetadataItem.id
    }));
    const { currentView } = useGetCurrentViewOnly();
    const setViewPickerReferenceViewId = useSetRecoilComponentStateV2(viewPickerReferenceViewIdComponentState);
    const { setViewPickerMode } = useViewPickerMode();
    const { updateView } = useUpdateView();
    const { changeView } = useChangeView();
    const { closeDropdown } = useDropdown(VIEW_PICKER_DROPDOWN_ID);
    const handleViewSelect = (viewId)=>{
        changeView(viewId);
        closeDropdown();
    };
    const handleAddViewButtonClick = ()=>{
        if (isDefined(currentView?.id)) {
            setViewPickerReferenceViewId(currentView.id);
            setViewPickerMode('create-empty');
        }
    };
    const handleEditViewButtonClick = (event, viewId)=>{
        event.stopPropagation();
        setViewPickerReferenceViewId(viewId);
        setViewPickerMode('edit');
    };
    const handleDragEnd = useCallback((result)=>{
        if (!result.destination) return;
        moveArrayItem(viewsOnCurrentObject, {
            fromIndex: result.source.index,
            toIndex: result.destination.index
        }).forEach((view, index)=>{
            if (view.position !== index) {
                updateView({
                    ...view,
                    position: index
                });
            }
        });
    }, [
        updateView,
        viewsOnCurrentObject
    ]);
    return /*#__PURE__*/ _jsxDEV(_Fragment, {
        children: [
            /*#__PURE__*/ _jsxDEV(DropdownMenuItemsContainer, {
                children: /*#__PURE__*/ _jsxDEV(DraggableList, {
                    onDragEnd: handleDragEnd,
                    draggableItems: viewsOnCurrentObject.map((view, index)=>{
                        const isIndexView = view.key === 'INDEX';
                        return /*#__PURE__*/ _jsxDEV(DraggableItem, {
                            draggableId: view.id,
                            index: index,
                            isDragDisabled: viewsOnCurrentObject.length === 1,
                            itemComponent: /*#__PURE__*/ _jsxDEV(ViewPickerOptionDropdown, {
                                view: {
                                    ...view,
                                    __typename: 'View'
                                },
                                handleViewSelect: handleViewSelect,
                                isIndexView: isIndexView,
                                onEdit: handleEditViewButtonClick
                            }, void 0, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerListContent.tsx",
                                lineNumber: 105,
                                columnNumber: 19
                            }, void 0)
                        }, view.id, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerListContent.tsx",
                            lineNumber: 99,
                            columnNumber: 15
                        }, void 0);
                    })
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerListContent.tsx",
                    lineNumber: 94,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerListContent.tsx",
                lineNumber: 93,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuSeparator, {}, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerListContent.tsx",
                lineNumber: 117,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(StyledBoldDropdownMenuItemsContainer, {
                scrollable: false,
                children: /*#__PURE__*/ _jsxDEV(MenuItem, {
                    onClick: handleAddViewButtonClick,
                    LeftIcon: IconPlus,
                    text: $__i18n._({
                        id: "q9e2Bs",
                        message: "Add view"
                    })
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerListContent.tsx",
                    lineNumber: 119,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerListContent.tsx",
                lineNumber: 118,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true);
};
_s(ViewPickerListContent, "6Geax8qMldzKAkvtOsR2J387npk=", false, function() {
    return [
        useContextStoreObjectMetadataItemOrThrow,
        useRecoilValue,
        useGetCurrentViewOnly,
        useSetRecoilComponentStateV2,
        useViewPickerMode,
        useUpdateView,
        useChangeView,
        useDropdown
    ];
});
_c1 = ViewPickerListContent;
var _c, _c1;
$RefreshReg$(_c, "StyledBoldDropdownMenuItemsContainer");
$RefreshReg$(_c1, "ViewPickerListContent");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerListContent.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerListContent.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,