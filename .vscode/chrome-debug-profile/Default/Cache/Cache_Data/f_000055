import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/auth/sign-in-up/components/SignInUpWithCredentials.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/auth/sign-in-up/components/SignInUpWithCredentials.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { useSignInUp } from "/src/modules/auth/sign-in-up/hooks/useSignInUp.ts";
import { SignInUpStep, signInUpStepState } from "/src/modules/auth/states/signInUpStepState.ts";
import { SignInUpEmailField } from "/src/modules/auth/sign-in-up/components/SignInUpEmailField.tsx";
import { SignInUpPasswordField } from "/src/modules/auth/sign-in-up/components/SignInUpPasswordField.tsx";
import { SignInUpMode } from "/src/modules/auth/types/signInUpMode.ts";
import { isRequestingCaptchaTokenState } from "/src/modules/captcha/states/isRequestingCaptchaTokenState.ts";
import { captchaState } from "/src/modules/client-config/states/captchaState.ts";
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import { useLingui as $_useLingui } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@lingui_react.js?v=226f7286";
import __vite__cjsImport11_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useMemo = __vite__cjsImport11_react["useMemo"]; const useState = __vite__cjsImport11_react["useState"];
import { useFormContext } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react-hook-form.js?v=226f7286";
import { useRecoilState, useRecoilValue } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/recoil.js?v=226f7286";
import { Loader, MainButton } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
const StyledForm = styled.form`
  align-items: center;
  display: flex;
  flex-direction: column;
  width: 100%;
`;
_c = StyledForm;
export const SignInUpWithCredentials = ()=>{
    _s();
    const { i18n: $__i18n, _: $__ } = $_useLingui();
    const form = useFormContext();
    const [signInUpStep, setSignInUpStep] = useRecoilState(signInUpStepState);
    const [showErrors, setShowErrors] = useState(false);
    const captcha = useRecoilValue(captchaState);
    const isRequestingCaptchaToken = useRecoilValue(isRequestingCaptchaTokenState);
    const { signInUpMode, continueWithEmail, continueWithCredentials, submitCredentials } = useSignInUp(form);
    const handleSubmit = async (event)=>{
        event.preventDefault();
        if (isSubmitButtonDisabled) return;
        if (signInUpStep === SignInUpStep.Init) {
            continueWithEmail();
        } else if (signInUpStep === SignInUpStep.Email) {
            if (isDefined(form?.formState?.errors?.email)) {
                setShowErrors(true);
                return;
            }
            continueWithCredentials();
        } else if (signInUpStep === SignInUpStep.Password) {
            if (!form.formState.isSubmitting) {
                setShowErrors(true);
                form.handleSubmit(submitCredentials)();
            }
        }
    };
    const onEmailChange = (email)=>{
        if (email !== form.getValues('email')) {
            setSignInUpStep(SignInUpStep.Email);
        }
    };
    const buttonTitle = useMemo(()=>{
        if (signInUpStep === SignInUpStep.Init) {
            return $__i18n._({
                id: "RvVi9c",
                message: "Continue with Email"
            });
        }
        if (signInUpMode === SignInUpMode.SignIn && signInUpStep === SignInUpStep.Password) {
            return $__i18n._({
                id: "5lWFkC",
                message: "Sign in"
            });
        }
        if (signInUpMode === SignInUpMode.SignUp && signInUpStep === SignInUpStep.Password) {
            return $__i18n._({
                id: "e+RpCP",
                message: "Sign up"
            });
        }
        return $__i18n._({
            id: "xGVfLh",
            message: "Continue"
        });
    }, [
        signInUpMode,
        signInUpStep,
        $__
    ]);
    const shouldWaitForCaptchaToken = signInUpStep !== SignInUpStep.Init && isDefined(captcha?.provider) && isRequestingCaptchaToken;
    const isEmailStepSubmitButtonDisabledCondition = signInUpStep === SignInUpStep.Email && (isDefined(form.formState.errors['email']) || shouldWaitForCaptchaToken);
    // TODO: isValid is actually a proxy function. If it is not rendered the first time, react might not trigger re-renders
    // We make the isValid check synchronous and update a reactState to make sure this does not happen
    const isPasswordStepSubmitButtonDisabledCondition = signInUpStep === SignInUpStep.Password && (!form.formState.isValid || form.formState.isSubmitting || shouldWaitForCaptchaToken);
    const isSubmitButtonDisabled = isEmailStepSubmitButtonDisabledCondition || isPasswordStepSubmitButtonDisabledCondition;
    return /*#__PURE__*/ _jsxDEV(_Fragment, {
        children: (signInUpStep === SignInUpStep.Password || signInUpStep === SignInUpStep.Email || signInUpStep === SignInUpStep.Init) && /*#__PURE__*/ _jsxDEV(StyledForm, {
            onSubmit: handleSubmit,
            children: [
                signInUpStep !== SignInUpStep.Init && /*#__PURE__*/ _jsxDEV(SignInUpEmailField, {
                    showErrors: showErrors,
                    onInputChange: onEmailChange
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/auth/sign-in-up/components/SignInUpWithCredentials.tsx",
                    lineNumber: 123,
                    columnNumber: 13
                }, this),
                signInUpStep === SignInUpStep.Password && /*#__PURE__*/ _jsxDEV(SignInUpPasswordField, {
                    showErrors: showErrors,
                    signInUpMode: signInUpMode
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/auth/sign-in-up/components/SignInUpWithCredentials.tsx",
                    lineNumber: 129,
                    columnNumber: 13
                }, this),
                /*#__PURE__*/ _jsxDEV(MainButton, {
                    title: buttonTitle,
                    type: "submit",
                    variant: signInUpStep === SignInUpStep.Init ? 'secondary' : 'primary',
                    Icon: ()=>form.formState.isSubmitting ? /*#__PURE__*/ _jsxDEV(Loader, {}, void 0, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/auth/sign-in-up/components/SignInUpWithCredentials.tsx",
                            lineNumber: 140,
                            columnNumber: 56
                        }, void 0) : null,
                    disabled: isSubmitButtonDisabled,
                    fullWidth: true
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/auth/sign-in-up/components/SignInUpWithCredentials.tsx",
                    lineNumber: 134,
                    columnNumber: 11
                }, this)
            ]
        }, void 0, true, {
            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/auth/sign-in-up/components/SignInUpWithCredentials.tsx",
            lineNumber: 121,
            columnNumber: 9
        }, this)
    }, void 0, false);
};
_s(SignInUpWithCredentials, "H5hDJX3tjfdBcw4Vwc/YEa6fcO4=", false, function() {
    return [
        useFormContext,
        useRecoilState,
        useRecoilValue,
        useRecoilValue,
        useSignInUp
    ];
});
_c1 = SignInUpWithCredentials;
var _c, _c1;
$RefreshReg$(_c, "StyledForm");
$RefreshReg$(_c1, "SignInUpWithCredentials");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/auth/sign-in-up/components/SignInUpWithCredentials.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/auth/sign-in-up/components/SignInUpWithCredentials.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,