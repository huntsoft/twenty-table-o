import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/ui/input/components/internal/date/components/DateTimeInput.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/ui/input/components/internal/date/components/DateTimeInput.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { css } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react.js?v=226f7286";
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import __vite__cjsImport4_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useCallback = __vite__cjsImport4_react["useCallback"]; const useEffect = __vite__cjsImport4_react["useEffect"]; const useState = __vite__cjsImport4_react["useState"];
import { useIMask } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react-imask.js?v=226f7286";
import { DATE_BLOCKS } from "/src/modules/ui/input/components/internal/date/constants/DateBlocks.ts";
import { DATE_MASK } from "/src/modules/ui/input/components/internal/date/constants/DateMask.ts";
import { DATE_TIME_BLOCKS } from "/src/modules/ui/input/components/internal/date/constants/DateTimeBlocks.ts";
import { DATE_TIME_MASK } from "/src/modules/ui/input/components/internal/date/constants/DateTimeMask.ts";
import { MAX_DATE } from "/src/modules/ui/input/components/internal/date/constants/MaxDate.ts";
import { MIN_DATE } from "/src/modules/ui/input/components/internal/date/constants/MinDate.ts";
import { parseDateToString } from "/src/modules/ui/input/components/internal/date/utils/parseDateToString.ts";
import { parseStringToDate } from "/src/modules/ui/input/components/internal/date/utils/parseStringToDate.ts";
import __vite__cjsImport14__sniptt_guards from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@sniptt_guards.js?v=226f7286"; const isNull = __vite__cjsImport14__sniptt_guards["isNull"];
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
const StyledInputContainer = styled.div`
  align-items: center;
  border-bottom: 1px solid ${({ theme })=>theme.border.color.light};
  border-top-left-radius: ${({ theme })=>theme.border.radius.md};
  border-top-right-radius: ${({ theme })=>theme.border.radius.md};
  display: flex;
  height: ${({ theme })=>theme.spacing(8)};
  width: 100%;
`;
_c = StyledInputContainer;
const StyledInput = styled.input`
  background: transparent;
  border: none;
  color: ${({ theme })=>theme.font.color.primary};
  outline: none;
  padding: 4px 8px 4px 8px;
  font-weight: 500;
  font-size: ${({ theme })=>theme.font.size.md};
  width: 100%;
  ${({ hasError, theme })=>hasError && css`
      color: ${theme.color.red};
    `};
`;
_c1 = StyledInput;
export const DateTimeInput = ({ date, onChange, isDateTimeInput, userTimezone })=>{
    _s();
    const [hasError, setHasError] = useState(false);
    const handleParseDateToString = useCallback((date)=>{
        return parseDateToString({
            date,
            isDateTimeInput: isDateTimeInput === true,
            userTimezone
        });
    }, [
        isDateTimeInput,
        userTimezone
    ]);
    const handleParseStringToDate = (str)=>{
        const date = parseStringToDate({
            dateAsString: str,
            isDateTimeInput: isDateTimeInput === true,
            userTimezone
        });
        setHasError(isNull(date) === true);
        return date;
    };
    const pattern = isDateTimeInput ? DATE_TIME_MASK : DATE_MASK;
    const blocks = isDateTimeInput ? DATE_TIME_BLOCKS : DATE_BLOCKS;
    const { ref, setValue, value } = useIMask({
        mask: Date,
        pattern,
        blocks,
        min: MIN_DATE,
        max: MAX_DATE,
        format: handleParseDateToString,
        parse: handleParseStringToDate,
        lazy: false,
        autofix: true
    }, {
        onComplete: (value)=>{
            const parsedDate = parseStringToDate({
                dateAsString: value,
                isDateTimeInput: isDateTimeInput === true,
                userTimezone
            });
            onChange?.(parsedDate);
        },
        onAccept: ()=>{
            setHasError(false);
        }
    });
    useEffect(()=>{
        if (!isDefined(date)) {
            return;
        }
        setValue(parseDateToString({
            date: date,
            isDateTimeInput: isDateTimeInput === true,
            userTimezone
        }));
    }, [
        date,
        setValue,
        isDateTimeInput,
        userTimezone
    ]);
    return /*#__PURE__*/ _jsxDEV(StyledInputContainer, {
        children: /*#__PURE__*/ _jsxDEV(StyledInput, {
            type: "text",
            ref: ref,
            placeholder: `Type date${isDateTimeInput ? ' and time' : ' (mm/dd/yyyy)'}`,
            value: value,
            onChange: ()=>{},
            hasError: hasError
        }, void 0, false, {
            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/ui/input/components/internal/date/components/DateTimeInput.tsx",
            lineNumber: 129,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/ui/input/components/internal/date/components/DateTimeInput.tsx",
        lineNumber: 128,
        columnNumber: 5
    }, this);
};
_s(DateTimeInput, "llKwsVN9sR+9o/DpFsVRlbTK1r0=", false, function() {
    return [
        useIMask
    ];
});
_c2 = DateTimeInput;
var _c, _c1, _c2;
$RefreshReg$(_c, "StyledInputContainer");
$RefreshReg$(_c1, "StyledInput");
$RefreshReg$(_c2, "DateTimeInput");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/ui/input/components/internal/date/components/DateTimeInput.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/ui/input/components/internal/date/components/DateTimeInput.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,