import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/views/components/ViewFieldsVisibilityDropdownSection.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/views/components/ViewFieldsVisibilityDropdownSection.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import __vite__cjsImport2_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useState = __vite__cjsImport2_react["useState"];
import __vite__cjsImport3_reactDom from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react-dom.js?v=226f7286"; const createPortal = __vite__cjsImport3_reactDom["createPortal"];
import { AppTooltip, IconEye, IconEyeOff, IconInfoCircle, MenuItemDraggable, useIcons } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { DraggableItem } from "/src/modules/ui/layout/draggable-list/components/DraggableItem.tsx";
import { DraggableList } from "/src/modules/ui/layout/draggable-list/components/DraggableList.tsx";
import { DropdownMenuItemsContainer } from "/src/modules/ui/layout/dropdown/components/DropdownMenuItemsContainer.tsx";
import { StyledDropdownMenuSubheader } from "/src/modules/ui/layout/dropdown/components/StyledDropdownMenuSubheader.tsx";
import { groupArrayItemsBy } from "/src/utils/array/groupArrayItemsBy.ts";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
export const ViewFieldsVisibilityDropdownSection = ({ fields, isDraggable, onDragEnd, onVisibilityChange, title, showSubheader = true, showDragGrip })=>{
    _s();
    const handleOnDrag = (result, provided)=>{
        onDragEnd?.(result, provided);
    };
    const [openToolTipIndex, setOpenToolTipIndex] = useState();
    const handleInfoButtonClick = (index)=>{
        setOpenToolTipIndex(index === openToolTipIndex ? undefined : index);
    };
    const { getIcon } = useIcons();
    const getIconButtons = (index, field)=>{
        const iconButtons = [
            field.infoTooltipContent ? {
                Icon: IconInfoCircle,
                onClick: ()=>handleInfoButtonClick(index),
                isActive: openToolTipIndex === index
            } : null,
            field.isLabelIdentifier ? null : {
                Icon: field.isVisible ? IconEyeOff : IconEye,
                onClick: ()=>onVisibilityChange(field)
            }
        ].filter(isDefined);
        return iconButtons.length ? iconButtons : undefined;
    };
    const { nonDraggableItems = [], draggableItems = [] } = isDraggable ? groupArrayItemsBy(fields, ({ isLabelIdentifier })=>isLabelIdentifier ? 'nonDraggableItems' : 'draggableItems') : {
        nonDraggableItems: fields,
        draggableItems: []
    };
    return /*#__PURE__*/ _jsxDEV(_Fragment, {
        children: [
            showSubheader && /*#__PURE__*/ _jsxDEV(StyledDropdownMenuSubheader, {
                children: title
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/components/ViewFieldsVisibilityDropdownSection.tsx",
                lineNumber: 91,
                columnNumber: 9
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuItemsContainer, {
                children: [
                    nonDraggableItems.map((field, fieldIndex)=>/*#__PURE__*/ _jsxDEV(MenuItemDraggable, {
                            LeftIcon: getIcon(field.iconName),
                            iconButtons: getIconButtons(fieldIndex, field),
                            isTooltipOpen: openToolTipIndex === fieldIndex,
                            text: field.label,
                            className: `${title}-fixed-item-tooltip-anchor-${fieldIndex}`,
                            accent: showDragGrip ? 'placeholder' : 'default',
                            showGrip: showDragGrip,
                            isDragDisabled: true
                        }, field.fieldMetadataId, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/components/ViewFieldsVisibilityDropdownSection.tsx",
                            lineNumber: 95,
                            columnNumber: 11
                        }, this)),
                    !!draggableItems.length && /*#__PURE__*/ _jsxDEV(DraggableList, {
                        onDragEnd: handleOnDrag,
                        draggableItems: /*#__PURE__*/ _jsxDEV(_Fragment, {
                            children: draggableItems.map((field, index)=>{
                                const fieldIndex = index + nonDraggableItems.length;
                                return /*#__PURE__*/ _jsxDEV(DraggableItem, {
                                    draggableId: field.fieldMetadataId,
                                    index: fieldIndex + 1,
                                    itemComponent: /*#__PURE__*/ _jsxDEV(MenuItemDraggable, {
                                        LeftIcon: getIcon(field.iconName),
                                        iconButtons: getIconButtons(fieldIndex, field),
                                        isTooltipOpen: openToolTipIndex === fieldIndex,
                                        text: field.label,
                                        className: `${title}-draggable-item-tooltip-anchor-${fieldIndex}`,
                                        showGrip: true
                                    }, field.fieldMetadataId, false, {
                                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/components/ViewFieldsVisibilityDropdownSection.tsx",
                                        lineNumber: 121,
                                        columnNumber: 25
                                    }, void 0)
                                }, field.fieldMetadataId, false, {
                                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/components/ViewFieldsVisibilityDropdownSection.tsx",
                                    lineNumber: 116,
                                    columnNumber: 21
                                }, void 0);
                            })
                        }, void 0, false)
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/components/ViewFieldsVisibilityDropdownSection.tsx",
                        lineNumber: 108,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/components/ViewFieldsVisibilityDropdownSection.tsx",
                lineNumber: 93,
                columnNumber: 7
            }, this),
            isDefined(openToolTipIndex) && /*#__PURE__*/ createPortal(/*#__PURE__*/ _jsxDEV(AppTooltip, {
                anchorSelect: `.${title}-${isDraggable ? 'draggable' : 'fixed'}-item-tooltip-anchor-${openToolTipIndex}`,
                place: "left",
                content: fields[openToolTipIndex].infoTooltipContent,
                hidden: false
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/components/ViewFieldsVisibilityDropdownSection.tsx",
                lineNumber: 141,
                columnNumber: 11
            }, this), document.body)
        ]
    }, void 0, true);
};
_s(ViewFieldsVisibilityDropdownSection, "JoYGwQa6vn0AgreJTsCc93YDKR0=", false, function() {
    return [
        useIcons
    ];
});
_c = ViewFieldsVisibilityDropdownSection;
var _c;
$RefreshReg$(_c, "ViewFieldsVisibilityDropdownSection");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/views/components/ViewFieldsVisibilityDropdownSection.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/views/components/ViewFieldsVisibilityDropdownSection.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,