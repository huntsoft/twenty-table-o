import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/object-record/record-table/record-table-footer/components/RecordTableColumnAggregateFooterMenuContent.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-table/record-table-footer/components/RecordTableColumnAggregateFooterMenuContent.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { useRecordTableContextOrThrow } from "/src/modules/object-record/record-table/contexts/RecordTableContext.ts";
import { RecordTableColumnAggregateFooterDropdownContext } from "/src/modules/object-record/record-table/record-table-footer/components/RecordTableColumnAggregateFooterDropdownContext.tsx";
import { NON_STANDARD_AGGREGATE_OPERATION_OPTIONS } from "/src/modules/object-record/record-table/record-table-footer/constants/nonStandardAggregateOperationsOptions.tsx";
import { useViewFieldAggregateOperation } from "/src/modules/object-record/record-table/record-table-footer/hooks/useViewFieldAggregateOperation.tsx";
import { getAvailableAggregateOperationsForFieldMetadataType } from "/src/modules/object-record/record-table/record-table-footer/utils/getAvailableAggregateOperationsForFieldMetadataType.ts";
import { TableOptionsHotkeyScope } from "/src/modules/object-record/record-table/types/TableOptionsHotkeyScope.ts";
import { DropdownMenuItemsContainer } from "/src/modules/ui/layout/dropdown/components/DropdownMenuItemsContainer.tsx";
import { useDropdown } from "/src/modules/ui/layout/dropdown/hooks/useDropdown.ts";
import { useScopedHotkeys } from "/src/modules/ui/utilities/hotkey/hooks/useScopedHotkeys.ts";
import { i18n as $_i18n } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@lingui_core.js?v=226f7286";
import __vite__cjsImport12_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useContext = __vite__cjsImport12_react["useContext"]; const useMemo = __vite__cjsImport12_react["useMemo"];
import __vite__cjsImport13_tsKeyEnum from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/ts-key-enum.js?v=226f7286"; const Key = __vite__cjsImport13_tsKeyEnum["Key"];
import { IconCheck, MenuItem } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { FieldMetadataType } from "/src/generated-metadata/graphql.ts";
import { isDefined, isFieldMetadataDateKind } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
export const RecordTableColumnAggregateFooterMenuContent = ()=>{
    _s();
    const { fieldMetadataId, dropdownId, onContentChange, fieldMetadataType, resetContent } = useContext(RecordTableColumnAggregateFooterDropdownContext);
    const { closeDropdown } = useDropdown(dropdownId);
    const { objectMetadataItem } = useRecordTableContextOrThrow();
    useScopedHotkeys([
        Key.Escape
    ], ()=>{
        closeDropdown();
    }, TableOptionsHotkeyScope.Dropdown);
    const availableAggregateOperation = useMemo(()=>getAvailableAggregateOperationsForFieldMetadataType({
            fieldMetadataType: objectMetadataItem.fields.find((field)=>field.id === fieldMetadataId)?.type
        }), [
        fieldMetadataId,
        objectMetadataItem.fields
    ]);
    const fieldIsDateKind = isFieldMetadataDateKind(fieldMetadataType);
    const nonStandardAvailableAggregateOperation = availableAggregateOperation.filter((aggregateOperation)=>NON_STANDARD_AGGREGATE_OPERATION_OPTIONS.includes(aggregateOperation));
    const fieldIsRelation = objectMetadataItem.fields.find((field)=>field.id === fieldMetadataId)?.type === FieldMetadataType.RELATION;
    const { updateViewFieldAggregateOperation, currentViewFieldAggregateOperation } = useViewFieldAggregateOperation();
    return /*#__PURE__*/ _jsxDEV(_Fragment, {
        children: /*#__PURE__*/ _jsxDEV(DropdownMenuItemsContainer, {
            children: [
                /*#__PURE__*/ _jsxDEV(MenuItem, {
                    onClick: ()=>{
                        onContentChange('countAggregateOperationsOptions');
                    },
                    text: $_i18n._({
                        id: "wBMjJ2",
                        message: "Count"
                    }),
                    hasSubMenu: true
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-table/record-table-footer/components/RecordTableColumnAggregateFooterMenuContent.tsx",
                    lineNumber: 68,
                    columnNumber: 9
                }, this),
                !fieldIsRelation && /*#__PURE__*/ _jsxDEV(MenuItem, {
                    onClick: ()=>{
                        onContentChange('percentAggregateOperationsOptions');
                    },
                    text: $_i18n._({
                        id: "SrVzRe",
                        message: "Percent"
                    }),
                    hasSubMenu: true
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-table/record-table-footer/components/RecordTableColumnAggregateFooterMenuContent.tsx",
                    lineNumber: 76,
                    columnNumber: 11
                }, this),
                fieldIsDateKind && /*#__PURE__*/ _jsxDEV(MenuItem, {
                    onClick: ()=>{
                        onContentChange('datesAggregateOperationsOptions');
                    },
                    text: $_i18n._({
                        id: "mYGY3B",
                        message: "Date"
                    }),
                    hasSubMenu: true
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-table/record-table-footer/components/RecordTableColumnAggregateFooterMenuContent.tsx",
                    lineNumber: 85,
                    columnNumber: 11
                }, this),
                nonStandardAvailableAggregateOperation.length > 0 ? /*#__PURE__*/ _jsxDEV(MenuItem, {
                    onClick: ()=>{
                        onContentChange('moreAggregateOperationOptions');
                    },
                    text: $_i18n._({
                        id: "3Siwmw",
                        message: "More options"
                    }),
                    hasSubMenu: true
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-table/record-table-footer/components/RecordTableColumnAggregateFooterMenuContent.tsx",
                    lineNumber: 94,
                    columnNumber: 11
                }, this) : null,
                /*#__PURE__*/ _jsxDEV(MenuItem, {
                    onClick: ()=>{
                        updateViewFieldAggregateOperation(null);
                        resetContent();
                        closeDropdown();
                    },
                    text: $_i18n._({
                        id: "EdQY6l",
                        message: "None"
                    }),
                    RightIcon: !isDefined(currentViewFieldAggregateOperation) ? IconCheck : undefined,
                    "aria-selected": !isDefined(currentViewFieldAggregateOperation)
                }, 'none', false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-table/record-table-footer/components/RecordTableColumnAggregateFooterMenuContent.tsx",
                    lineNumber: 102,
                    columnNumber: 9
                }, this)
            ]
        }, void 0, true, {
            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-table/record-table-footer/components/RecordTableColumnAggregateFooterMenuContent.tsx",
            lineNumber: 67,
            columnNumber: 7
        }, this)
    }, void 0, false);
};
_s(RecordTableColumnAggregateFooterMenuContent, "jda56glTonwndxeOjWoAJ+cPtDQ=", false, function() {
    return [
        useDropdown,
        useRecordTableContextOrThrow,
        useScopedHotkeys,
        useViewFieldAggregateOperation
    ];
});
_c = RecordTableColumnAggregateFooterMenuContent;
var _c;
$RefreshReg$(_c, "RecordTableColumnAggregateFooterMenuContent");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-table/record-table-footer/components/RecordTableColumnAggregateFooterMenuContent.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-table/record-table-footer/components/RecordTableColumnAggregateFooterMenuContent.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,