import { useExportMultipleRecordsAction } from "/src/modules/action-menu/actions/record-actions/multiple-records/hooks/useExportMultipleRecordsAction.tsx";
import { MultipleRecordsActionKeys } from "/src/modules/action-menu/actions/record-actions/multiple-records/types/MultipleRecordsActionKeys.ts";
import { useHideDeletedRecordsNoSelectionRecordAction } from "/src/modules/action-menu/actions/record-actions/no-selection/hooks/useHideDeletedRecordsNoSelectionRecordAction.ts";
import { useSeeDeletedRecordsNoSelectionRecordAction } from "/src/modules/action-menu/actions/record-actions/no-selection/hooks/useSeeDeletedRecordsNoSelectionRecordAction.ts";
import { useSeeWorkflowsNoSelectionRecordAction } from "/src/modules/action-menu/actions/record-actions/no-selection/hooks/useSeeWorkflowsNoSelectionRecordAction.ts";
import { NoSelectionRecordActionKeys } from "/src/modules/action-menu/actions/record-actions/no-selection/types/NoSelectionRecordActionsKey.ts";
import { useAddToFavoritesSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/hooks/useAddToFavoritesSingleRecordAction.ts";
import { useNavigateToNextRecordSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/hooks/useNavigateToNextRecordSingleRecordAction.ts";
import { useNavigateToPreviousRecordSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/hooks/useNavigateToPreviousRecordSingleRecordAction.ts";
import { useRemoveFromFavoritesSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/hooks/useRemoveFromFavoritesSingleRecordAction.ts";
import { SingleRecordActionKeys } from "/src/modules/action-menu/actions/record-actions/single-record/types/SingleRecordActionsKey.ts";
import { useSeeVersionWorkflowRunSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-run-actions/hooks/useSeeVersionWorkflowRunSingleRecordAction.ts";
import { useSeeWorkflowWorkflowRunSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-run-actions/hooks/useSeeWorkflowWorkflowRunSingleRecordAction.ts";
import { WorkflowRunSingleRecordActionKeys } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-run-actions/types/WorkflowRunSingleRecordActionsKeys.ts";
import { ActionViewType } from "/src/modules/action-menu/actions/types/ActionViewType.ts";
import { ActionMenuEntryScope, ActionMenuEntryType } from "/src/modules/action-menu/types/ActionMenuEntry.ts";
import { IconChevronDown, IconChevronUp, IconDatabaseExport, IconEyeOff, IconHeart, IconHeartOff, IconRotate2, IconSettingsAutomation, IconVersions } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
export const WORKFLOW_RUNS_ACTIONS_CONFIG = {
    seeWorkflowSingleRecord: {
        key: WorkflowRunSingleRecordActionKeys.SEE_WORKFLOW,
        label: {
            id: "qEKLJV",
            message: "See workflow"
        },
        shortLabel: {
            id: "qEKLJV",
            message: "See workflow"
        },
        position: 0,
        isPinned: true,
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        Icon: IconSettingsAutomation,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useSeeWorkflowWorkflowRunSingleRecordAction
    },
    seeVersionSingleRecord: {
        key: WorkflowRunSingleRecordActionKeys.SEE_VERSION,
        label: {
            id: "gGEfj/",
            message: "See version"
        },
        shortLabel: {
            id: "gGEfj/",
            message: "See version"
        },
        position: 1,
        isPinned: true,
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        Icon: IconVersions,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useSeeVersionWorkflowRunSingleRecordAction
    },
    addToFavoritesSingleRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.ADD_TO_FAVORITES,
        label: {
            id: "pBsoKL",
            message: "Add to favorites"
        },
        shortLabel: {
            id: "pBsoKL",
            message: "Add to favorites"
        },
        position: 2,
        isPinned: false,
        Icon: IconHeart,
        availableOn: [
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION,
            ActionViewType.SHOW_PAGE
        ],
        useAction: useAddToFavoritesSingleRecordAction
    },
    removeFromFavoritesSingleRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.REMOVE_FROM_FAVORITES,
        label: {
            id: "T/pF0Z",
            message: "Remove from favorites"
        },
        shortLabel: {
            id: "T/pF0Z",
            message: "Remove from favorites"
        },
        isPinned: false,
        position: 3,
        Icon: IconHeartOff,
        availableOn: [
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION,
            ActionViewType.SHOW_PAGE
        ],
        useAction: useRemoveFromFavoritesSingleRecordAction
    },
    navigateToPreviousRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.NAVIGATE_TO_PREVIOUS_RECORD,
        label: {
            id: "HddE65",
            message: "Navigate to previous run"
        },
        position: 4,
        isPinned: true,
        Icon: IconChevronUp,
        availableOn: [
            ActionViewType.SHOW_PAGE
        ],
        useAction: useNavigateToPreviousRecordSingleRecordAction
    },
    navigateToNextRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.NAVIGATE_TO_NEXT_RECORD,
        label: {
            id: "UX6+vb",
            message: "Navigate to next run"
        },
        position: 5,
        isPinned: true,
        Icon: IconChevronDown,
        availableOn: [
            ActionViewType.SHOW_PAGE
        ],
        useAction: useNavigateToNextRecordSingleRecordAction
    },
    exportSingleRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.EXPORT,
        label: {
            id: "iHK6np",
            message: "Export run"
        },
        shortLabel: {
            id: "GS+Mus",
            message: "Export"
        },
        position: 6,
        Icon: IconDatabaseExport,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useExportMultipleRecordsAction
    },
    exportMultipleRecords: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: MultipleRecordsActionKeys.EXPORT,
        label: {
            id: "vwtAUW",
            message: "Export runs"
        },
        shortLabel: {
            id: "GS+Mus",
            message: "Export"
        },
        position: 7,
        Icon: IconDatabaseExport,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.INDEX_PAGE_BULK_SELECTION
        ],
        useAction: useExportMultipleRecordsAction
    },
    exportView: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.Object,
        key: NoSelectionRecordActionKeys.EXPORT_VIEW,
        label: {
            id: "DaGxE0",
            message: "Export view"
        },
        shortLabel: {
            id: "GS+Mus",
            message: "Export"
        },
        position: 8,
        Icon: IconDatabaseExport,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.INDEX_PAGE_NO_SELECTION
        ],
        useAction: useExportMultipleRecordsAction
    },
    seeDeletedRecords: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.Object,
        key: NoSelectionRecordActionKeys.SEE_DELETED_RECORDS,
        label: {
            id: "Z+SGGW",
            message: "See deleted runs"
        },
        shortLabel: {
            id: "/TC7qI",
            message: "Deleted runs"
        },
        position: 9,
        Icon: IconRotate2,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.INDEX_PAGE_NO_SELECTION
        ],
        useAction: useSeeDeletedRecordsNoSelectionRecordAction
    },
    hideDeletedRecords: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.Object,
        key: NoSelectionRecordActionKeys.HIDE_DELETED_RECORDS,
        label: {
            id: "0dZtKR",
            message: "Hide deleted runs"
        },
        shortLabel: {
            id: "OlbYor",
            message: "Hide deleted"
        },
        position: 10,
        Icon: IconEyeOff,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.INDEX_PAGE_NO_SELECTION
        ],
        useAction: useHideDeletedRecordsNoSelectionRecordAction
    },
    seeAllWorkflows: {
        type: ActionMenuEntryType.Navigation,
        scope: ActionMenuEntryScope.Global,
        key: NoSelectionRecordActionKeys.SEE_WORKFLOWS,
        label: {
            id: "A5WHZY",
            message: "Go to workflows"
        },
        shortLabel: {
            id: "XThiR2",
            message: "See workflows"
        },
        position: 11,
        Icon: IconSettingsAutomation,
        accent: 'default',
        isPinned: true,
        availableOn: [
            ActionViewType.INDEX_PAGE_NO_SELECTION
        ],
        useAction: useSeeWorkflowsNoSelectionRecordAction,
        hotKeys: [
            'G',
            'W'
        ]
    }
};

//# sourceMappingURL=data:application/json;base64,