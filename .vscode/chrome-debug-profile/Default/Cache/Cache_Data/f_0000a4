import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionFindRecords.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionFindRecords.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { useFilteredObjectMetadataItems } from "/src/modules/object-metadata/hooks/useFilteredObjectMetadataItems.ts";
import { Select } from "/src/modules/ui/input/components/Select.tsx";
import { WorkflowStepHeader } from "/src/modules/workflow/workflow-steps/components/WorkflowStepHeader.tsx";
import __vite__cjsImport5_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useEffect = __vite__cjsImport5_react["useEffect"]; const useState = __vite__cjsImport5_react["useState"];
import { FormNumberFieldInput } from "/src/modules/object-record/record-field/form-types/components/FormNumberFieldInput.tsx";
import { WorkflowStepBody } from "/src/modules/workflow/workflow-steps/components/WorkflowStepBody.tsx";
import { useActionHeaderTypeOrThrow } from "/src/modules/workflow/workflow-steps/workflow-actions/hooks/useActionHeaderTypeOrThrow.ts";
import { useActionIconColorOrThrow } from "/src/modules/workflow/workflow-steps/workflow-actions/hooks/useActionIconColorOrThrow.ts";
import { getActionIcon } from "/src/modules/workflow/workflow-steps/workflow-actions/utils/getActionIcon.ts";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
import { HorizontalSeparator, useIcons } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { useDebouncedCallback } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/use-debounce.js?v=226f7286";
export const WorkflowEditActionFindRecords = ({ action, actionOptions })=>{
    _s();
    const { getIcon } = useIcons();
    const { activeObjectMetadataItems } = useFilteredObjectMetadataItems();
    const availableMetadata = activeObjectMetadataItems.map((item)=>({
            Icon: getIcon(item.icon),
            label: item.labelPlural,
            value: item.nameSingular
        }));
    const [formData, setFormData] = useState({
        objectName: action.settings.input.objectName,
        limit: action.settings.input.limit
    });
    const isFormDisabled = actionOptions.readonly;
    const selectedObjectMetadataItemNameSingular = formData.objectName;
    const selectedObjectMetadataItem = activeObjectMetadataItems.find((item)=>item.nameSingular === selectedObjectMetadataItemNameSingular);
    if (!isDefined(selectedObjectMetadataItem)) {
        throw new Error('Should have found the metadata item');
    }
    const saveAction = useDebouncedCallback(async (formData)=>{
        if (actionOptions.readonly === true) {
            return;
        }
        const { objectName: updatedObjectName, limit: updatedLimit } = formData;
        actionOptions.onActionUpdate({
            ...action,
            settings: {
                ...action.settings,
                input: {
                    objectName: updatedObjectName,
                    limit: updatedLimit ?? 1
                }
            }
        });
    }, 1000);
    useEffect(()=>{
        return ()=>{
            saveAction.flush();
        };
    }, [
        saveAction
    ]);
    const headerTitle = isDefined(action.name) ? action.name : `Search Records`;
    const headerIcon = getActionIcon(action.type);
    const headerIconColor = useActionIconColorOrThrow(action.type);
    const headerType = useActionHeaderTypeOrThrow(action.type);
    return /*#__PURE__*/ _jsxDEV(_Fragment, {
        children: [
            /*#__PURE__*/ _jsxDEV(WorkflowStepHeader, {
                onTitleChange: (newName)=>{
                    if (actionOptions.readonly === true) {
                        return;
                    }
                    actionOptions.onActionUpdate({
                        ...action,
                        name: newName
                    });
                },
                Icon: getIcon(headerIcon),
                iconColor: headerIconColor,
                initialTitle: headerTitle,
                headerType: headerType,
                disabled: isFormDisabled
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionFindRecords.tsx",
                lineNumber: 98,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(WorkflowStepBody, {
                children: [
                    /*#__PURE__*/ _jsxDEV(Select, {
                        dropdownId: "workflow-edit-action-record-find-records-object-name",
                        label: "Object",
                        fullWidth: true,
                        disabled: isFormDisabled,
                        value: formData.objectName,
                        emptyOption: {
                            label: 'Select an option',
                            value: ''
                        },
                        options: availableMetadata,
                        onChange: (objectName)=>{
                            const newFormData = {
                                objectName,
                                limit: 1
                            };
                            setFormData(newFormData);
                            saveAction(newFormData);
                        },
                        withSearchInput: true
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionFindRecords.tsx",
                        lineNumber: 116,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ _jsxDEV(HorizontalSeparator, {
                        noMargin: true
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionFindRecords.tsx",
                        lineNumber: 137,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ _jsxDEV(FormNumberFieldInput, {
                        label: "Limit",
                        defaultValue: formData.limit,
                        placeholder: "Enter limit",
                        onChange: ()=>{},
                        readonly: true
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionFindRecords.tsx",
                        lineNumber: 139,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionFindRecords.tsx",
                lineNumber: 115,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true);
};
_s(WorkflowEditActionFindRecords, "/5rGyZSANaC56BlUX2+z/K3NI0Q=", false, function() {
    return [
        useIcons,
        useFilteredObjectMetadataItems,
        useDebouncedCallback,
        useActionIconColorOrThrow,
        useActionHeaderTypeOrThrow
    ];
});
_c = WorkflowEditActionFindRecords;
var _c;
$RefreshReg$(_c, "WorkflowEditActionFindRecords");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionFindRecords.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/components/WorkflowEditActionFindRecords.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,