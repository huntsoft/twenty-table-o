import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownOperandSelect.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownOperandSelect.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { v4 } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/uuid.js?v=226f7286";
import { getFilterTypeFromFieldType } from "/src/modules/object-metadata/utils/formatFieldMetadataItemsAsFilterDefinitions.ts";
import { fieldMetadataItemUsedInDropdownComponentSelector } from "/src/modules/object-record/object-filter-dropdown/states/fieldMetadataItemUsedInDropdownComponentSelector.ts";
import { selectedFilterComponentState } from "/src/modules/object-record/object-filter-dropdown/states/selectedFilterComponentState.ts";
import { selectedOperandInDropdownComponentState } from "/src/modules/object-record/object-filter-dropdown/states/selectedOperandInDropdownComponentState.ts";
import { subFieldNameUsedInDropdownComponentState } from "/src/modules/object-record/object-filter-dropdown/states/subFieldNameUsedInDropdownComponentState.ts";
import { getInitialFilterValue } from "/src/modules/object-record/object-filter-dropdown/utils/getInitialFilterValue.ts";
import { useApplyRecordFilter } from "/src/modules/object-record/record-filter/hooks/useApplyRecordFilter.ts";
import { getRecordFilterOperands } from "/src/modules/object-record/record-filter/utils/getRecordFilterOperands.ts";
import { DropdownMenuItemsContainer } from "/src/modules/ui/layout/dropdown/components/DropdownMenuItemsContainer.tsx";
import { useDropdown } from "/src/modules/ui/layout/dropdown/hooks/useDropdown.ts";
import { useRecoilComponentValueV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentValueV2.ts";
import { useSetRecoilComponentStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useSetRecoilComponentStateV2.ts";
import { ViewFilterOperand } from "/src/modules/views/types/ViewFilterOperand.ts";
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
import { MenuItem } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { getOperandLabel } from "/src/modules/object-record/object-filter-dropdown/utils/getOperandLabel.ts";
const StyledDropdownMenuItemsContainer = styled(DropdownMenuItemsContainer)`
  background-color: ${({ theme })=>theme.background.primary};
  border-radius: ${({ theme })=>theme.border.radius.md};
`;
_c = StyledDropdownMenuItemsContainer;
export const ObjectFilterDropdownOperandSelect = ()=>{
    _s();
    const fieldMetadataItemUsedInDropdown = useRecoilComponentValueV2(fieldMetadataItemUsedInDropdownComponentSelector);
    const setSelectedOperandInDropdown = useSetRecoilComponentStateV2(selectedOperandInDropdownComponentState);
    const selectedFilter = useRecoilComponentValueV2(selectedFilterComponentState);
    const subFieldNameUsedInDropdown = useRecoilComponentValueV2(subFieldNameUsedInDropdownComponentState);
    const { applyRecordFilter } = useApplyRecordFilter();
    const { closeDropdown } = useDropdown();
    const operandsForFilterType = isDefined(fieldMetadataItemUsedInDropdown) ? getRecordFilterOperands({
        filterType: getFilterTypeFromFieldType(fieldMetadataItemUsedInDropdown.type),
        subFieldName: subFieldNameUsedInDropdown
    }) : [];
    const handleOperandChange = (newOperand)=>{
        const isValuelessOperand = [
            ViewFilterOperand.IsEmpty,
            ViewFilterOperand.IsNotEmpty,
            ViewFilterOperand.IsInPast,
            ViewFilterOperand.IsInFuture,
            ViewFilterOperand.IsToday
        ].includes(newOperand);
        setSelectedOperandInDropdown(newOperand);
        if (isValuelessOperand && isDefined(fieldMetadataItemUsedInDropdown)) {
            applyRecordFilter({
                id: selectedFilter?.id ? selectedFilter.id : v4(),
                fieldMetadataId: fieldMetadataItemUsedInDropdown.id,
                displayValue: '',
                operand: newOperand,
                value: '',
                type: getFilterTypeFromFieldType(fieldMetadataItemUsedInDropdown.type),
                label: fieldMetadataItemUsedInDropdown.label
            });
            return;
        }
        if (isDefined(fieldMetadataItemUsedInDropdown) && isDefined(selectedFilter)) {
            const filterType = getFilterTypeFromFieldType(fieldMetadataItemUsedInDropdown.type);
            const { value, displayValue } = getInitialFilterValue(filterType, newOperand, selectedFilter.value, selectedFilter.displayValue);
            applyRecordFilter({
                id: selectedFilter.id ? selectedFilter.id : v4(),
                fieldMetadataId: selectedFilter.fieldMetadataId,
                displayValue,
                operand: newOperand,
                value,
                type: filterType,
                label: fieldMetadataItemUsedInDropdown.label
            });
        }
    };
    return /*#__PURE__*/ _jsxDEV(StyledDropdownMenuItemsContainer, {
        children: operandsForFilterType.map((filterOperand, index)=>/*#__PURE__*/ _jsxDEV(MenuItem, {
                onClick: ()=>{
                    handleOperandChange(filterOperand);
                    closeDropdown();
                },
                text: getOperandLabel(filterOperand)
            }, `select-filter-operand-${index}`, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownOperandSelect.tsx",
                lineNumber: 110,
                columnNumber: 9
            }, this))
    }, void 0, false, {
        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownOperandSelect.tsx",
        lineNumber: 108,
        columnNumber: 5
    }, this);
};
_s(ObjectFilterDropdownOperandSelect, "Q2A0sC6NofFAXLl1hWGw30pohLo=", false, function() {
    return [
        useRecoilComponentValueV2,
        useSetRecoilComponentStateV2,
        useRecoilComponentValueV2,
        useRecoilComponentValueV2,
        useApplyRecordFilter,
        useDropdown
    ];
});
_c1 = ObjectFilterDropdownOperandSelect;
var _c, _c1;
$RefreshReg$(_c, "StyledDropdownMenuItemsContainer");
$RefreshReg$(_c1, "ObjectFilterDropdownOperandSelect");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownOperandSelect.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/object-filter-dropdown/components/ObjectFilterDropdownOperandSelect.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,