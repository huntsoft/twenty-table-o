import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/object-record/record-board/record-board-column/components/RecordBoardColumnHeaderAggregateDropdownFieldsContent.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-column/components/RecordBoardColumnHeaderAggregateDropdownFieldsContent.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { useDropdown } from "/src/modules/dropdown/hooks/useDropdown.ts";
import { RecordBoardColumnHeaderAggregateDropdownContext } from "/src/modules/object-record/record-board/record-board-column/components/RecordBoardColumnHeaderAggregateDropdownContext.tsx";
import { aggregateOperationComponentState } from "/src/modules/object-record/record-board/record-board-column/states/aggregateOperationComponentState.ts";
import { availableFieldIdsForAggregateOperationComponentState } from "/src/modules/object-record/record-board/record-board-column/states/availableFieldIdsForAggregateOperationComponentState.ts";
import { getAggregateOperationLabel } from "/src/modules/object-record/record-board/record-board-column/utils/getAggregateOperationLabel.ts";
import { recordIndexKanbanAggregateOperationState } from "/src/modules/object-record/record-index/states/recordIndexKanbanAggregateOperationState.ts";
import { DropdownMenuHeader } from "/src/modules/ui/layout/dropdown/components/DropdownMenuHeader/DropdownMenuHeader.tsx";
import { DropdownMenuItemsContainer } from "/src/modules/ui/layout/dropdown/components/DropdownMenuItemsContainer.tsx";
import { useRecoilComponentValueV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentValueV2.ts";
import { useUpdateViewAggregate } from "/src/modules/views/hooks/useUpdateViewAggregate.ts";
import { useRecoilValue } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/recoil.js?v=226f7286";
import { Icon123, IconCheck, IconChevronLeft, MenuItem, useIcons } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { DropdownMenuHeaderLeftComponent } from "/src/modules/ui/layout/dropdown/components/DropdownMenuHeader/internal/DropdownMenuHeaderLeftComponent.tsx";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
export const RecordBoardColumnHeaderAggregateDropdownFieldsContent = ()=>{
    _s();
    const { closeDropdown, objectMetadataItem, onContentChange, resetContent, previousContentId } = useDropdown({
        context: RecordBoardColumnHeaderAggregateDropdownContext
    });
    const { updateViewAggregate } = useUpdateViewAggregate();
    const { getIcon } = useIcons();
    const aggregateOperation = useRecoilComponentValueV2(aggregateOperationComponentState);
    const availableFieldsIdsForAggregateOperation = useRecoilComponentValueV2(availableFieldIdsForAggregateOperationComponentState);
    const recordIndexKanbanAggregateOperation = useRecoilValue(recordIndexKanbanAggregateOperationState);
    if (!isDefined(aggregateOperation)) return /*#__PURE__*/ _jsxDEV(_Fragment, {}, void 0, false);
    return /*#__PURE__*/ _jsxDEV(_Fragment, {
        children: [
            /*#__PURE__*/ _jsxDEV(DropdownMenuHeader, {
                StartComponent: /*#__PURE__*/ _jsxDEV(DropdownMenuHeaderLeftComponent, {
                    onClick: ()=>previousContentId ? onContentChange(previousContentId) : resetContent(),
                    Icon: IconChevronLeft
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-column/components/RecordBoardColumnHeaderAggregateDropdownFieldsContent.tsx",
                    lineNumber: 54,
                    columnNumber: 11
                }, void 0),
                children: getAggregateOperationLabel(aggregateOperation)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-column/components/RecordBoardColumnHeaderAggregateDropdownFieldsContent.tsx",
                lineNumber: 52,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuItemsContainer, {
                children: availableFieldsIdsForAggregateOperation.map((fieldId)=>{
                    const fieldMetadata = objectMetadataItem.fields.find((field)=>field.id === fieldId);
                    if (!fieldMetadata) return null;
                    return /*#__PURE__*/ _jsxDEV(MenuItem, {
                        onClick: ()=>{
                            updateViewAggregate({
                                kanbanAggregateOperationFieldMetadataId: fieldId,
                                kanbanAggregateOperation: aggregateOperation
                            });
                            closeDropdown();
                        },
                        LeftIcon: getIcon(fieldMetadata.icon) ?? Icon123,
                        text: fieldMetadata.label,
                        RightIcon: recordIndexKanbanAggregateOperation?.fieldMetadataId === fieldId && recordIndexKanbanAggregateOperation?.operation === aggregateOperation ? IconCheck : undefined
                    }, fieldId, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-column/components/RecordBoardColumnHeaderAggregateDropdownFieldsContent.tsx",
                        lineNumber: 74,
                        columnNumber: 13
                    }, this);
                })
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-column/components/RecordBoardColumnHeaderAggregateDropdownFieldsContent.tsx",
                lineNumber: 66,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true);
};
_s(RecordBoardColumnHeaderAggregateDropdownFieldsContent, "/sILlRJeGthhUCqySJpfZTFb1T0=", false, function() {
    return [
        useDropdown,
        useUpdateViewAggregate,
        useIcons,
        useRecoilComponentValueV2,
        useRecoilComponentValueV2,
        useRecoilValue
    ];
});
_c = RecordBoardColumnHeaderAggregateDropdownFieldsContent;
var _c;
$RefreshReg$(_c, "RecordBoardColumnHeaderAggregateDropdownFieldsContent");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-column/components/RecordBoardColumnHeaderAggregateDropdownFieldsContent.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-board/record-board-column/components/RecordBoardColumnHeaderAggregateDropdownFieldsContent.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,