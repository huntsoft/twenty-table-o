import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/command-menu/hooks/useCommandMenuContextChips.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/command-menu/hooks/useCommandMenuContextChips.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { CommandMenuContextRecordChipAvatars } from "/src/modules/command-menu/components/CommandMenuContextRecordChipAvatars.tsx";
import { useCommandMenuHistory } from "/src/modules/command-menu/hooks/useCommandMenuHistory.ts";
import { commandMenuNavigationMorphItemByPageState } from "/src/modules/command-menu/states/commandMenuNavigationMorphItemsState.ts";
import { commandMenuNavigationRecordsState } from "/src/modules/command-menu/states/commandMenuNavigationRecordsState.ts";
import { commandMenuNavigationStackState } from "/src/modules/command-menu/states/commandMenuNavigationStackState.ts";
import { CommandMenuPages } from "/src/modules/command-menu/types/CommandMenuPages.ts";
import { getObjectRecordIdentifier } from "/src/modules/object-metadata/utils/getObjectRecordIdentifier.ts";
import { useTheme } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react.js?v=226f7286";
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import __vite__cjsImport11_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useMemo = __vite__cjsImport11_react["useMemo"];
import { useRecoilValue } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/recoil.js?v=226f7286";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
const StyledIconWrapper = styled.div`
  background: ${({ theme })=>theme.background.primary};
  border-radius: ${({ theme })=>theme.border.radius.sm};
  display: flex;
  align-items: center;
  justify-content: center;
`;
_c = StyledIconWrapper;
export const useCommandMenuContextChips = ()=>{
    _s();
    const commandMenuNavigationStack = useRecoilValue(commandMenuNavigationStackState);
    const { navigateCommandMenuHistory } = useCommandMenuHistory();
    const theme = useTheme();
    const commandMenuNavigationMorphItemByPage = useRecoilValue(commandMenuNavigationMorphItemByPageState);
    const commandMenuNavigationRecords = useRecoilValue(commandMenuNavigationRecordsState);
    const contextChips = useMemo(()=>{
        const filteredCommandMenuNavigationStack = commandMenuNavigationStack.filter((page)=>page.page !== CommandMenuPages.Root);
        return filteredCommandMenuNavigationStack.map((page, index)=>{
            const isLastChip = index === filteredCommandMenuNavigationStack.length - 1;
            const isRecordPage = page.page === CommandMenuPages.ViewRecord;
            if (isRecordPage && !isLastChip) {
                const commandMenuNavigationMorphItem = commandMenuNavigationMorphItemByPage.get(page.pageId);
                if (!isDefined(commandMenuNavigationMorphItem?.recordId)) {
                    return null;
                }
                const objectMetadataItem = commandMenuNavigationRecords.find(({ objectMetadataItem })=>objectMetadataItem.id === commandMenuNavigationMorphItem.objectMetadataId)?.objectMetadataItem;
                const record = commandMenuNavigationRecords.find(({ record })=>record.id === commandMenuNavigationMorphItem.recordId)?.record;
                if (!isDefined(objectMetadataItem) || !isDefined(record)) {
                    return null;
                }
                const name = getObjectRecordIdentifier({
                    objectMetadataItem,
                    record
                }).name;
                return {
                    page,
                    Icons: [
                        /*#__PURE__*/ _jsxDEV(CommandMenuContextRecordChipAvatars, {
                            objectMetadataItem: objectMetadataItem,
                            record: record
                        }, void 0, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/command-menu/hooks/useCommandMenuContextChips.tsx",
                            lineNumber: 83,
                            columnNumber: 15
                        }, this)
                    ],
                    text: name,
                    onClick: ()=>{
                        navigateCommandMenuHistory(index);
                    }
                };
            }
            return {
                page,
                Icons: isLastChip ? [
                    /*#__PURE__*/ _jsxDEV(page.pageIcon, {
                        size: theme.icon.size.sm
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/command-menu/hooks/useCommandMenuContextChips.tsx",
                        lineNumber: 98,
                        columnNumber: 16
                    }, this)
                ] : [
                    /*#__PURE__*/ _jsxDEV(StyledIconWrapper, {
                        children: /*#__PURE__*/ _jsxDEV(page.pageIcon, {
                            size: theme.icon.size.sm,
                            color: isDefined(page.pageIconColor) && page.pageIconColor !== 'currentColor' ? page.pageIconColor : theme.font.color.tertiary
                        }, void 0, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/command-menu/hooks/useCommandMenuContextChips.tsx",
                            lineNumber: 101,
                            columnNumber: 19
                        }, this)
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/command-menu/hooks/useCommandMenuContextChips.tsx",
                        lineNumber: 100,
                        columnNumber: 17
                    }, this)
                ],
                text: page.pageTitle,
                onClick: isLastChip ? undefined : ()=>{
                    navigateCommandMenuHistory(index);
                }
            };
        }).filter(isDefined);
    }, [
        commandMenuNavigationMorphItemByPage,
        commandMenuNavigationRecords,
        commandMenuNavigationStack,
        navigateCommandMenuHistory,
        theme.font.color.tertiary,
        theme.icon.size.sm
    ]);
    return {
        contextChips
    };
};
_s(useCommandMenuContextChips, "V9egA3PRW8aGJXJuMorwbikM6vg=", false, function() {
    return [
        useRecoilValue,
        useCommandMenuHistory,
        useTheme,
        useRecoilValue,
        useRecoilValue
    ];
});
var _c;
$RefreshReg$(_c, "StyledIconWrapper");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/command-menu/hooks/useCommandMenuContextChips.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/command-menu/hooks/useCommandMenuContextChips.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,