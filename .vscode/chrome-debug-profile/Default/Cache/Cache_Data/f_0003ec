import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/object-record/record-field/form-types/components/FormDateTimeFieldInput.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-field/form-types/components/FormDateTimeFieldInput.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { FormFieldInputContainer } from "/src/modules/object-record/record-field/form-types/components/FormFieldInputContainer.tsx";
import { FormFieldInputInputContainer } from "/src/modules/object-record/record-field/form-types/components/FormFieldInputInputContainer.tsx";
import { FormFieldInputRowContainer } from "/src/modules/object-record/record-field/form-types/components/FormFieldInputRowContainer.tsx";
import { VariableChipStandalone } from "/src/modules/object-record/record-field/form-types/components/VariableChipStandalone.tsx";
import { InputLabel } from "/src/modules/ui/input/components/InputLabel.tsx";
import { DateTimePicker, MONTH_AND_YEAR_DROPDOWN_ID, MONTH_AND_YEAR_DROPDOWN_MONTH_SELECT_ID, MONTH_AND_YEAR_DROPDOWN_YEAR_SELECT_ID } from "/src/modules/ui/input/components/internal/date/components/InternalDatePicker.tsx";
import { MAX_DATE } from "/src/modules/ui/input/components/internal/date/constants/MaxDate.ts";
import { MIN_DATE } from "/src/modules/ui/input/components/internal/date/constants/MinDate.ts";
import { parseDateToString } from "/src/modules/ui/input/components/internal/date/utils/parseDateToString.ts";
import { parseStringToDate } from "/src/modules/ui/input/components/internal/date/utils/parseStringToDate.ts";
import { useDropdown } from "/src/modules/ui/layout/dropdown/hooks/useDropdown.ts";
import { OverlayContainer } from "/src/modules/ui/layout/overlay/components/OverlayContainer.tsx";
import { useListenClickOutside } from "/src/modules/ui/utilities/pointer-event/hooks/useListenClickOutside.ts";
import { UserContext } from "/src/modules/users/contexts/UserContext.ts";
import { isStandaloneVariableString } from "/src/modules/workflow/utils/isStandaloneVariableString.ts";
import { css } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react.js?v=226f7286";
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import __vite__cjsImport19_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useContext = __vite__cjsImport19_react["useContext"]; const useId = __vite__cjsImport19_react["useId"]; const useRef = __vite__cjsImport19_react["useRef"]; const useState = __vite__cjsImport19_react["useState"];
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
import { TEXT_INPUT_STYLE } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
const StyledInputContainer = styled(FormFieldInputInputContainer)`
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr 0px;
  overflow: visible;
  position: relative;
`;
_c = StyledInputContainer;
const StyledDateInputAbsoluteContainer = styled.div`
  position: absolute;
`;
_c1 = StyledDateInputAbsoluteContainer;
const StyledDateInput = styled.input`
  ${TEXT_INPUT_STYLE}

  &:disabled {
    color: ${({ theme })=>theme.font.color.tertiary};
  }

  ${({ hasError, theme })=>hasError && css`
      color: ${theme.color.red};
    `};
`;
_c2 = StyledDateInput;
const StyledDateInputContainer = styled.div`
  position: relative;
  z-index: 1;
`;
_c3 = StyledDateInputContainer;
export const FormDateTimeFieldInput = ({ dateOnly, label, defaultValue, onChange, VariablePicker, readonly, placeholder })=>{
    _s();
    const { timeZone } = useContext(UserContext);
    const inputId = useId();
    const [draftValue, setDraftValue] = useState(isStandaloneVariableString(defaultValue) ? {
        type: 'variable',
        value: defaultValue
    } : {
        type: 'static',
        value: defaultValue ?? null,
        mode: 'view'
    });
    const draftValueAsDate = isDefined(draftValue.value) ? new Date(draftValue.value) : null;
    const [pickerDate, setPickerDate] = useState(draftValueAsDate);
    const datePickerWrapperRef = useRef(null);
    const [inputDateTime, setInputDateTime] = useState(isDefined(draftValueAsDate) && !isStandaloneVariableString(defaultValue) ? parseDateToString({
        date: draftValueAsDate,
        isDateTimeInput: !dateOnly,
        userTimezone: timeZone
    }) : '');
    const persistDate = (newDate)=>{
        if (!isDefined(newDate)) {
            onChange(null);
        } else {
            const newDateISO = newDate.toISOString();
            onChange(newDateISO);
        }
    };
    const { closeDropdown } = useDropdown(MONTH_AND_YEAR_DROPDOWN_ID);
    const { closeDropdown: closeDropdownMonthSelect } = useDropdown(MONTH_AND_YEAR_DROPDOWN_MONTH_SELECT_ID);
    const { closeDropdown: closeDropdownYearSelect } = useDropdown(MONTH_AND_YEAR_DROPDOWN_YEAR_SELECT_ID);
    const displayDatePicker = draftValue.type === 'static' && draftValue.mode === 'edit';
    const placeholderToDisplay = placeholder ?? (dateOnly ? 'mm/dd/yyyy' : 'mm/dd/yyyy hh:mm');
    useListenClickOutside({
        refs: [
            datePickerWrapperRef
        ],
        listenerId: 'FormDateTimeFieldInputBase',
        callback: (event)=>{
            event.stopImmediatePropagation();
            closeDropdownYearSelect();
            closeDropdownMonthSelect();
            closeDropdown();
            handlePickerClickOutside();
        },
        enabled: displayDatePicker
    });
    const handlePickerChange = (newDate)=>{
        setDraftValue({
            type: 'static',
            mode: 'edit',
            value: newDate?.toDateString() ?? null
        });
        setInputDateTime(isDefined(newDate) ? parseDateToString({
            date: newDate,
            isDateTimeInput: !dateOnly,
            userTimezone: timeZone
        }) : '');
        setPickerDate(newDate);
        persistDate(newDate);
    };
    const handlePickerEnter = ()=>{};
    const handlePickerEscape = ()=>{
        // FIXME: Escape key is not handled properly by the underlying DateInput component. We need to solve that.
        setDraftValue({
            type: 'static',
            value: draftValue.value,
            mode: 'view'
        });
    };
    const handlePickerClickOutside = ()=>{
        setDraftValue({
            type: 'static',
            value: draftValue.value,
            mode: 'view'
        });
    };
    const handlePickerClear = ()=>{
        setDraftValue({
            type: 'static',
            value: null,
            mode: 'view'
        });
        setPickerDate(null);
        setInputDateTime('');
        persistDate(null);
    };
    const handlePickerMouseSelect = (newDate)=>{
        setDraftValue({
            type: 'static',
            value: newDate?.toDateString() ?? null,
            mode: 'view'
        });
        setPickerDate(newDate);
        setInputDateTime(isDefined(newDate) ? parseDateToString({
            date: newDate,
            isDateTimeInput: !dateOnly,
            userTimezone: timeZone
        }) : '');
        persistDate(newDate);
    };
    const handleInputFocus = ()=>{
        setDraftValue({
            type: 'static',
            mode: 'edit',
            value: draftValue.value
        });
    };
    const handleInputChange = (event)=>{
        setInputDateTime(event.target.value);
    };
    const handleInputKeydown = (event)=>{
        if (event.key !== 'Enter') {
            return;
        }
        const inputDateTimeTrimmed = inputDateTime.trim();
        if (inputDateTimeTrimmed === '') {
            handlePickerClear();
            return;
        }
        const parsedInputDateTime = parseStringToDate({
            dateAsString: inputDateTimeTrimmed,
            isDateTimeInput: !dateOnly,
            userTimezone: timeZone
        });
        if (!isDefined(parsedInputDateTime)) {
            return;
        }
        let validatedDate = parsedInputDateTime;
        if (parsedInputDateTime < MIN_DATE) {
            validatedDate = MIN_DATE;
        } else if (parsedInputDateTime > MAX_DATE) {
            validatedDate = MAX_DATE;
        }
        setDraftValue({
            type: 'static',
            value: validatedDate.toDateString(),
            mode: 'edit'
        });
        setPickerDate(validatedDate);
        setInputDateTime(parseDateToString({
            date: validatedDate,
            isDateTimeInput: !dateOnly,
            userTimezone: timeZone
        }));
        persistDate(validatedDate);
    };
    const handleVariableTagInsert = (variableName)=>{
        setDraftValue({
            type: 'variable',
            value: variableName
        });
        setInputDateTime('');
        onChange(variableName);
    };
    const handleUnlinkVariable = ()=>{
        setDraftValue({
            type: 'static',
            value: null,
            mode: 'view'
        });
        setPickerDate(null);
        onChange(null);
    };
    return /*#__PURE__*/ _jsxDEV(FormFieldInputContainer, {
        children: [
            label ? /*#__PURE__*/ _jsxDEV(InputLabel, {
                children: label
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-field/form-types/components/FormDateTimeFieldInput.tsx",
                lineNumber: 334,
                columnNumber: 16
            }, this) : null,
            /*#__PURE__*/ _jsxDEV(FormFieldInputRowContainer, {
                children: [
                    /*#__PURE__*/ _jsxDEV(StyledInputContainer, {
                        ref: datePickerWrapperRef,
                        hasRightElement: isDefined(VariablePicker) && !readonly,
                        children: draftValue.type === 'static' ? /*#__PURE__*/ _jsxDEV(_Fragment, {
                            children: [
                                /*#__PURE__*/ _jsxDEV(StyledDateInput, {
                                    type: "text",
                                    placeholder: placeholderToDisplay,
                                    value: inputDateTime,
                                    onFocus: handleInputFocus,
                                    onChange: handleInputChange,
                                    onKeyDown: handleInputKeydown,
                                    disabled: readonly
                                }, void 0, false, {
                                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-field/form-types/components/FormDateTimeFieldInput.tsx",
                                    lineNumber: 343,
                                    columnNumber: 15
                                }, this),
                                draftValue.mode === 'edit' ? /*#__PURE__*/ _jsxDEV(StyledDateInputContainer, {
                                    children: /*#__PURE__*/ _jsxDEV(StyledDateInputAbsoluteContainer, {
                                        children: /*#__PURE__*/ _jsxDEV(OverlayContainer, {
                                            children: /*#__PURE__*/ _jsxDEV(DateTimePicker, {
                                                date: pickerDate ?? new Date(),
                                                isDateTimeInput: false,
                                                onChange: handlePickerChange,
                                                onClose: handlePickerMouseSelect,
                                                onEnter: handlePickerEnter,
                                                onEscape: handlePickerEscape,
                                                onClear: handlePickerClear,
                                                hideHeaderInput: true
                                            }, void 0, false, {
                                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-field/form-types/components/FormDateTimeFieldInput.tsx",
                                                lineNumber: 357,
                                                columnNumber: 23
                                            }, this)
                                        }, void 0, false, {
                                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-field/form-types/components/FormDateTimeFieldInput.tsx",
                                            lineNumber: 356,
                                            columnNumber: 21
                                        }, this)
                                    }, void 0, false, {
                                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-field/form-types/components/FormDateTimeFieldInput.tsx",
                                        lineNumber: 355,
                                        columnNumber: 19
                                    }, this)
                                }, void 0, false, {
                                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-field/form-types/components/FormDateTimeFieldInput.tsx",
                                    lineNumber: 354,
                                    columnNumber: 17
                                }, this) : null
                            ]
                        }, void 0, true) : /*#__PURE__*/ _jsxDEV(VariableChipStandalone, {
                            rawVariableName: draftValue.value,
                            onRemove: readonly ? undefined : handleUnlinkVariable
                        }, void 0, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-field/form-types/components/FormDateTimeFieldInput.tsx",
                            lineNumber: 373,
                            columnNumber: 13
                        }, this)
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-field/form-types/components/FormDateTimeFieldInput.tsx",
                        lineNumber: 337,
                        columnNumber: 9
                    }, this),
                    VariablePicker && !readonly ? /*#__PURE__*/ _jsxDEV(VariablePicker, {
                        inputId: inputId,
                        onVariableSelect: handleVariableTagInsert
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-field/form-types/components/FormDateTimeFieldInput.tsx",
                        lineNumber: 381,
                        columnNumber: 11
                    }, this) : null
                ]
            }, void 0, true, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-field/form-types/components/FormDateTimeFieldInput.tsx",
                lineNumber: 336,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-field/form-types/components/FormDateTimeFieldInput.tsx",
        lineNumber: 333,
        columnNumber: 5
    }, this);
};
_s(FormDateTimeFieldInput, "IbN7q8KZdyyL2Q2eDQAakU5K7kc=", false, function() {
    return [
        useId,
        useDropdown,
        useDropdown,
        useDropdown,
        useListenClickOutside
    ];
});
_c4 = FormDateTimeFieldInput;
var _c, _c1, _c2, _c3, _c4;
$RefreshReg$(_c, "StyledInputContainer");
$RefreshReg$(_c1, "StyledDateInputAbsoluteContainer");
$RefreshReg$(_c2, "StyledDateInput");
$RefreshReg$(_c3, "StyledDateInputContainer");
$RefreshReg$(_c4, "FormDateTimeFieldInput");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-field/form-types/components/FormDateTimeFieldInput.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-field/form-types/components/FormDateTimeFieldInput.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,