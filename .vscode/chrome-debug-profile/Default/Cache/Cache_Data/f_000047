import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/context-store/components/MainContextStoreProviderEffect.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/context-store/components/MainContextStoreProviderEffect.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

var _s = $RefreshSig$();
import { MAIN_CONTEXT_STORE_INSTANCE_ID } from "/src/modules/context-store/constants/MainContextStoreInstanceId.tsx";
import { contextStoreCurrentObjectMetadataItemIdComponentState } from "/src/modules/context-store/states/contextStoreCurrentObjectMetadataItemIdComponentState.ts";
import { contextStoreCurrentViewIdComponentState } from "/src/modules/context-store/states/contextStoreCurrentViewIdComponentState.ts";
import { contextStoreCurrentViewTypeComponentState } from "/src/modules/context-store/states/contextStoreCurrentViewTypeComponentState.ts";
import { ContextStoreViewType } from "/src/modules/context-store/types/ContextStoreViewType.ts";
import { useSetLastVisitedObjectMetadataId } from "/src/modules/navigation/hooks/useSetLastVisitedObjectMetadataId.ts";
import { useSetLastVisitedViewForObjectMetadataNamePlural } from "/src/modules/navigation/hooks/useSetLastVisitedViewForObjectMetadataNamePlural.ts";
import { prefetchViewFromViewIdFamilySelector } from "/src/modules/prefetch/states/selector/prefetchViewFromViewIdFamilySelector.ts";
import { useRecoilComponentStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentStateV2.ts";
import { ViewType } from "/src/modules/views/types/ViewType.ts";
import __vite__cjsImport11_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useEffect = __vite__cjsImport11_react["useEffect"];
import { useRecoilValue } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/recoil.js?v=226f7286";
export const MainContextStoreProviderEffect = ({ viewId, objectMetadataItem, isRecordIndexPage, isRecordShowPage, isSettingsPage })=>{
    _s();
    const { setLastVisitedViewForObjectMetadataNamePlural } = useSetLastVisitedViewForObjectMetadataNamePlural();
    const { setLastVisitedObjectMetadataId } = useSetLastVisitedObjectMetadataId();
    const [contextStoreCurrentViewId, setContextStoreCurrentViewId] = useRecoilComponentStateV2(contextStoreCurrentViewIdComponentState, MAIN_CONTEXT_STORE_INSTANCE_ID);
    const [contextStoreCurrentViewType, setContextStoreCurrentViewType] = useRecoilComponentStateV2(contextStoreCurrentViewTypeComponentState, MAIN_CONTEXT_STORE_INSTANCE_ID);
    const [contextStoreCurrentObjectMetadataItemId, setContextStoreCurrentObjectMetadataItemId] = useRecoilComponentStateV2(contextStoreCurrentObjectMetadataItemIdComponentState, MAIN_CONTEXT_STORE_INSTANCE_ID);
    const view = useRecoilValue(prefetchViewFromViewIdFamilySelector({
        viewId: viewId ?? ''
    }));
    useEffect(()=>{
        if (!objectMetadataItem) {
            setContextStoreCurrentObjectMetadataItemId(undefined);
            return;
        }
        if (contextStoreCurrentObjectMetadataItemId !== objectMetadataItem.id) {
            setContextStoreCurrentObjectMetadataItemId(objectMetadataItem.id);
        }
        setLastVisitedViewForObjectMetadataNamePlural({
            objectNamePlural: objectMetadataItem.namePlural,
            viewId: viewId ?? ''
        });
        setLastVisitedObjectMetadataId({
            objectMetadataItemId: objectMetadataItem.id
        });
    }, [
        contextStoreCurrentObjectMetadataItemId,
        objectMetadataItem,
        setContextStoreCurrentObjectMetadataItemId,
        setLastVisitedObjectMetadataId,
        setLastVisitedViewForObjectMetadataNamePlural,
        viewId
    ]);
    useEffect(()=>{
        if (isSettingsPage) {
            setContextStoreCurrentViewId(undefined);
            return;
        }
        if (contextStoreCurrentViewId !== viewId) {
            setContextStoreCurrentViewId(viewId);
        }
    }, [
        contextStoreCurrentViewId,
        isSettingsPage,
        setContextStoreCurrentViewId,
        viewId
    ]);
    useEffect(()=>{
        const viewType = getViewType({
            isSettingsPage,
            isRecordShowPage,
            isRecordIndexPage,
            view
        });
        if (contextStoreCurrentViewType !== viewType) {
            setContextStoreCurrentViewType(viewType);
        }
    }, [
        contextStoreCurrentViewType,
        setContextStoreCurrentViewType,
        view,
        isSettingsPage,
        isRecordShowPage,
        isRecordIndexPage
    ]);
    return null;
};
_s(MainContextStoreProviderEffect, "AN2s2A+YpFyhujsH8mUUyXbty68=", false, function() {
    return [
        useSetLastVisitedViewForObjectMetadataNamePlural,
        useSetLastVisitedObjectMetadataId,
        useRecoilComponentStateV2,
        useRecoilComponentStateV2,
        useRecoilComponentStateV2,
        useRecoilValue
    ];
});
_c = MainContextStoreProviderEffect;
const getViewType = ({ isSettingsPage, isRecordShowPage, isRecordIndexPage, view })=>{
    if (isSettingsPage) {
        return null;
    }
    if (isRecordIndexPage) {
        return view?.type === ViewType.Kanban ? ContextStoreViewType.Kanban : ContextStoreViewType.Table;
    }
    if (isRecordShowPage) {
        return ContextStoreViewType.ShowPage;
    }
    return null;
};
var _c;
$RefreshReg$(_c, "MainContextStoreProviderEffect");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/context-store/components/MainContextStoreProviderEffect.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/context-store/components/MainContextStoreProviderEffect.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,