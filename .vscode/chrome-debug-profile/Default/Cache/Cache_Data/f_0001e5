import { useExportMultipleRecordsAction } from "/src/modules/action-menu/actions/record-actions/multiple-records/hooks/useExportMultipleRecordsAction.tsx";
import { MultipleRecordsActionKeys } from "/src/modules/action-menu/actions/record-actions/multiple-records/types/MultipleRecordsActionKeys.ts";
import { useHideDeletedRecordsNoSelectionRecordAction } from "/src/modules/action-menu/actions/record-actions/no-selection/hooks/useHideDeletedRecordsNoSelectionRecordAction.ts";
import { useSeeDeletedRecordsNoSelectionRecordAction } from "/src/modules/action-menu/actions/record-actions/no-selection/hooks/useSeeDeletedRecordsNoSelectionRecordAction.ts";
import { useSeeRunsNoSelectionRecordAction } from "/src/modules/action-menu/actions/record-actions/no-selection/hooks/useSeeRunsNoSelectionRecordAction.ts";
import { useSeeWorkflowsNoSelectionRecordAction } from "/src/modules/action-menu/actions/record-actions/no-selection/hooks/useSeeWorkflowsNoSelectionRecordAction.ts";
import { NoSelectionRecordActionKeys } from "/src/modules/action-menu/actions/record-actions/no-selection/types/NoSelectionRecordActionsKey.ts";
import { useAddToFavoritesSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/hooks/useAddToFavoritesSingleRecordAction.ts";
import { useNavigateToNextRecordSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/hooks/useNavigateToNextRecordSingleRecordAction.ts";
import { useNavigateToPreviousRecordSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/hooks/useNavigateToPreviousRecordSingleRecordAction.ts";
import { useRemoveFromFavoritesSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/hooks/useRemoveFromFavoritesSingleRecordAction.ts";
import { SingleRecordActionKeys } from "/src/modules/action-menu/actions/record-actions/single-record/types/SingleRecordActionsKey.ts";
import { useSeeRunsWorkflowVersionSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-version-actions/hooks/useSeeRunsWorkflowVersionSingleRecordAction.ts";
import { useSeeVersionsWorkflowVersionSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-version-actions/hooks/useSeeVersionsWorkflowVersionSingleRecordAction.ts";
import { useSeeWorkflowWorkflowVersionSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-version-actions/hooks/useSeeWorkflowWorkflowVersionSingleRecordAction.ts";
import { useUseAsDraftWorkflowVersionSingleRecordAction } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-version-actions/hooks/useUseAsDraftWorkflowVersionSingleRecordAction.tsx";
import { WorkflowVersionSingleRecordActionKeys } from "/src/modules/action-menu/actions/record-actions/single-record/workflow-version-actions/types/WorkflowVersionSingleRecordActionsKeys.ts";
import { ActionViewType } from "/src/modules/action-menu/actions/types/ActionViewType.ts";
import { ActionMenuEntryScope, ActionMenuEntryType } from "/src/modules/action-menu/types/ActionMenuEntry.ts";
import { IconChevronDown, IconChevronUp, IconDatabaseExport, IconEyeOff, IconHeart, IconHeartOff, IconHistoryToggle, IconPencil, IconRotate2, IconSettingsAutomation, IconVersions } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
export const WORKFLOW_VERSIONS_ACTIONS_CONFIG = {
    useAsDraftWorkflowVersionSingleRecord: {
        key: WorkflowVersionSingleRecordActionKeys.USE_AS_DRAFT,
        label: {
            id: "6dMpmz",
            message: "Use as draft"
        },
        shortLabel: {
            id: "6dMpmz",
            message: "Use as draft"
        },
        position: 1,
        isPinned: true,
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        Icon: IconPencil,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useUseAsDraftWorkflowVersionSingleRecordAction
    },
    seeWorkflowSingleRecord: {
        key: WorkflowVersionSingleRecordActionKeys.SEE_WORKFLOW,
        label: {
            id: "qEKLJV",
            message: "See workflow"
        },
        shortLabel: {
            id: "qEKLJV",
            message: "See workflow"
        },
        position: 2,
        isPinned: true,
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        Icon: IconSettingsAutomation,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useSeeWorkflowWorkflowVersionSingleRecordAction
    },
    seeWorkflowRunsSingleRecord: {
        key: WorkflowVersionSingleRecordActionKeys.SEE_RUNS,
        label: {
            id: "OpPn5Z",
            message: "See runs"
        },
        shortLabel: {
            id: "OpPn5Z",
            message: "See runs"
        },
        position: 3,
        isPinned: true,
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        Icon: IconHistoryToggle,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useSeeRunsWorkflowVersionSingleRecordAction
    },
    seeWorkflowVersionsHistorySingleRecord: {
        key: WorkflowVersionSingleRecordActionKeys.SEE_VERSIONS,
        label: {
            id: "lYhPN0",
            message: "See versions history"
        },
        shortLabel: {
            id: "EtyY4+",
            message: "See versions"
        },
        position: 4,
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        Icon: IconVersions,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useSeeVersionsWorkflowVersionSingleRecordAction
    },
    navigateToPreviousRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.NAVIGATE_TO_PREVIOUS_RECORD,
        label: {
            id: "I+Pm5V",
            message: "Navigate to previous version"
        },
        position: 5,
        Icon: IconChevronUp,
        availableOn: [
            ActionViewType.SHOW_PAGE
        ],
        useAction: useNavigateToPreviousRecordSingleRecordAction
    },
    navigateToNextRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.NAVIGATE_TO_NEXT_RECORD,
        label: {
            id: "veSA19",
            message: "Navigate to next version"
        },
        position: 6,
        Icon: IconChevronDown,
        availableOn: [
            ActionViewType.SHOW_PAGE
        ],
        useAction: useNavigateToNextRecordSingleRecordAction
    },
    addToFavoritesSingleRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.ADD_TO_FAVORITES,
        label: {
            id: "pBsoKL",
            message: "Add to favorites"
        },
        shortLabel: {
            id: "pBsoKL",
            message: "Add to favorites"
        },
        position: 7,
        isPinned: false,
        Icon: IconHeart,
        availableOn: [
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION,
            ActionViewType.SHOW_PAGE
        ],
        useAction: useAddToFavoritesSingleRecordAction
    },
    removeFromFavoritesSingleRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.REMOVE_FROM_FAVORITES,
        label: {
            id: "T/pF0Z",
            message: "Remove from favorites"
        },
        shortLabel: {
            id: "T/pF0Z",
            message: "Remove from favorites"
        },
        isPinned: false,
        position: 8,
        Icon: IconHeartOff,
        availableOn: [
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION,
            ActionViewType.SHOW_PAGE
        ],
        useAction: useRemoveFromFavoritesSingleRecordAction
    },
    exportSingleRecord: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: SingleRecordActionKeys.EXPORT,
        label: {
            id: "BuprEs",
            message: "Export version"
        },
        shortLabel: {
            id: "GS+Mus",
            message: "Export"
        },
        position: 9,
        Icon: IconDatabaseExport,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.SHOW_PAGE,
            ActionViewType.INDEX_PAGE_SINGLE_RECORD_SELECTION
        ],
        useAction: useExportMultipleRecordsAction
    },
    exportMultipleRecords: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.RecordSelection,
        key: MultipleRecordsActionKeys.EXPORT,
        label: {
            id: "4FLUle",
            message: "Export versions"
        },
        shortLabel: {
            id: "GS+Mus",
            message: "Export"
        },
        position: 10,
        Icon: IconDatabaseExport,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.INDEX_PAGE_BULK_SELECTION
        ],
        useAction: useExportMultipleRecordsAction
    },
    exportView: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.Object,
        key: NoSelectionRecordActionKeys.EXPORT_VIEW,
        label: {
            id: "DaGxE0",
            message: "Export view"
        },
        shortLabel: {
            id: "GS+Mus",
            message: "Export"
        },
        position: 11,
        Icon: IconDatabaseExport,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.INDEX_PAGE_NO_SELECTION
        ],
        useAction: useExportMultipleRecordsAction
    },
    seeDeletedRecords: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.Object,
        key: NoSelectionRecordActionKeys.SEE_DELETED_RECORDS,
        label: {
            id: "91fiCe",
            message: "See deleted versions"
        },
        shortLabel: {
            id: "Wj5mzm",
            message: "Deleted versions"
        },
        position: 12,
        Icon: IconRotate2,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.INDEX_PAGE_NO_SELECTION
        ],
        useAction: useSeeDeletedRecordsNoSelectionRecordAction
    },
    hideDeletedRecords: {
        type: ActionMenuEntryType.Standard,
        scope: ActionMenuEntryScope.Object,
        key: NoSelectionRecordActionKeys.HIDE_DELETED_RECORDS,
        label: {
            id: "Jc6FrI",
            message: "Hide deleted versions"
        },
        shortLabel: {
            id: "OlbYor",
            message: "Hide deleted"
        },
        position: 13,
        Icon: IconEyeOff,
        accent: 'default',
        isPinned: false,
        availableOn: [
            ActionViewType.INDEX_PAGE_NO_SELECTION
        ],
        useAction: useHideDeletedRecordsNoSelectionRecordAction
    },
    seeAllWorkflows: {
        type: ActionMenuEntryType.Navigation,
        scope: ActionMenuEntryScope.Global,
        key: NoSelectionRecordActionKeys.SEE_WORKFLOWS,
        label: {
            id: "A5WHZY",
            message: "Go to workflows"
        },
        shortLabel: {
            id: "XThiR2",
            message: "See workflows"
        },
        position: 14,
        Icon: IconSettingsAutomation,
        accent: 'default',
        isPinned: true,
        availableOn: [
            ActionViewType.INDEX_PAGE_NO_SELECTION
        ],
        useAction: useSeeWorkflowsNoSelectionRecordAction,
        hotKeys: [
            'G',
            'W'
        ]
    },
    seeAllRuns: {
        type: ActionMenuEntryType.Navigation,
        scope: ActionMenuEntryScope.Global,
        key: NoSelectionRecordActionKeys.SEE_RUNS,
        label: {
            id: "iS69s6",
            message: "Go to runs"
        },
        shortLabel: {
            id: "OpPn5Z",
            message: "See runs"
        },
        position: 15,
        Icon: IconHistoryToggle,
        accent: 'default',
        isPinned: true,
        availableOn: [
            ActionViewType.INDEX_PAGE_NO_SELECTION
        ],
        useAction: useSeeRunsNoSelectionRecordAction
    }
};

//# sourceMappingURL=data:application/json;base64,