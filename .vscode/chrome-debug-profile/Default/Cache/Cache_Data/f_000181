import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/app/effect-components/PageChangeEffect.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/app/effect-components/PageChangeEffect.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import __vite__cjsImport2_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useEffect = __vite__cjsImport2_react["useEffect"]; const useState = __vite__cjsImport2_react["useState"];
import { matchPath, useLocation, useNavigate, useParams } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react-router-dom.js?v=226f7286";
import { useRecoilValue } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/recoil.js?v=226f7286";
import { setSessionId, useEventTracker } from "/src/modules/analytics/hooks/useEventTracker.ts";
import { useRequestFreshCaptchaToken } from "/src/modules/captcha/hooks/useRequestFreshCaptchaToken.ts";
import { isCaptchaScriptLoadedState } from "/src/modules/captcha/states/isCaptchaScriptLoadedState.ts";
import { CoreObjectNamePlural } from "/src/modules/object-metadata/types/CoreObjectNamePlural.ts";
import { useResetTableRowSelection } from "/src/modules/object-record/record-table/hooks/internal/useResetTableRowSelection.ts";
import { TableHotkeyScope } from "/src/modules/object-record/record-table/types/TableHotkeyScope.ts";
import { AppBasePath } from "/src/modules/types/AppBasePath.ts";
import { AppPath } from "/src/modules/types/AppPath.ts";
import { PageHotkeyScope } from "/src/modules/types/PageHotkeyScope.ts";
import { SettingsPath } from "/src/modules/types/SettingsPath.ts";
import { useSetHotkeyScope } from "/src/modules/ui/utilities/hotkey/hooks/useSetHotkeyScope.ts";
import { useIsMatchingLocation } from "/src/hooks/useIsMatchingLocation.ts";
import { usePageChangeEffectNavigateLocation } from "/src/hooks/usePageChangeEffectNavigateLocation.ts";
import { isCaptchaRequiredForPath } from "/src/modules/captcha/utils/isCaptchaRequiredForPath.ts";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
// TODO: break down into smaller functions and / or hooks
//  - moved usePageChangeEffectNavigateLocation into dedicated hook
export const PageChangeEffect = ()=>{
    _s();
    const navigate = useNavigate();
    const { isMatchingLocation } = useIsMatchingLocation();
    const [previousLocation, setPreviousLocation] = useState('');
    const setHotkeyScope = useSetHotkeyScope();
    const location = useLocation();
    const pageChangeEffectNavigateLocation = usePageChangeEffectNavigateLocation();
    const eventTracker = useEventTracker();
    //TODO: refactor useResetTableRowSelection hook to not throw when the argument `recordTableId` is an empty string
    // - replace CoreObjectNamePlural.Person
    const objectNamePlural = useParams().objectNamePlural ?? CoreObjectNamePlural.Person;
    const resetTableSelections = useResetTableRowSelection(objectNamePlural);
    useEffect(()=>{
        if (!previousLocation || previousLocation !== location.pathname) {
            setPreviousLocation(location.pathname);
        } else {
            return;
        }
    }, [
        location,
        previousLocation
    ]);
    useEffect(()=>{
        if (isDefined(pageChangeEffectNavigateLocation)) {
            navigate(pageChangeEffectNavigateLocation);
        }
    }, [
        navigate,
        pageChangeEffectNavigateLocation
    ]);
    useEffect(()=>{
        const isLeavingRecordIndexPage = !!matchPath(AppPath.RecordIndexPage, previousLocation);
        if (isLeavingRecordIndexPage) {
            resetTableSelections();
        }
    }, [
        isMatchingLocation,
        previousLocation,
        resetTableSelections
    ]);
    useEffect(()=>{
        switch(true){
            case isMatchingLocation(AppPath.RecordIndexPage):
                {
                    setHotkeyScope(TableHotkeyScope.Table, {
                        goto: true,
                        keyboardShortcutMenu: true
                    });
                    break;
                }
            case isMatchingLocation(AppPath.RecordShowPage):
                {
                    setHotkeyScope(PageHotkeyScope.CompanyShowPage, {
                        goto: true,
                        keyboardShortcutMenu: true
                    });
                    break;
                }
            case isMatchingLocation(AppPath.OpportunitiesPage):
                {
                    setHotkeyScope(PageHotkeyScope.OpportunitiesPage, {
                        goto: true,
                        keyboardShortcutMenu: true
                    });
                    break;
                }
            case isMatchingLocation(AppPath.TasksPage):
                {
                    setHotkeyScope(PageHotkeyScope.TaskPage, {
                        goto: true,
                        keyboardShortcutMenu: true
                    });
                    break;
                }
            case isMatchingLocation(AppPath.SignInUp):
                {
                    setHotkeyScope(PageHotkeyScope.SignInUp);
                    break;
                }
            case isMatchingLocation(AppPath.Invite):
                {
                    setHotkeyScope(PageHotkeyScope.SignInUp);
                    break;
                }
            case isMatchingLocation(AppPath.CreateProfile):
                {
                    setHotkeyScope(PageHotkeyScope.CreateProfile);
                    break;
                }
            case isMatchingLocation(AppPath.CreateWorkspace):
                {
                    setHotkeyScope(PageHotkeyScope.CreateWorkspace);
                    break;
                }
            case isMatchingLocation(AppPath.SyncEmails):
                {
                    setHotkeyScope(PageHotkeyScope.SyncEmail);
                    break;
                }
            case isMatchingLocation(AppPath.InviteTeam):
                {
                    setHotkeyScope(PageHotkeyScope.InviteTeam);
                    break;
                }
            case isMatchingLocation(AppPath.PlanRequired):
                {
                    setHotkeyScope(PageHotkeyScope.PlanRequired);
                    break;
                }
            case isMatchingLocation(SettingsPath.ProfilePage, AppBasePath.Settings):
                {
                    setHotkeyScope(PageHotkeyScope.ProfilePage, {
                        goto: true,
                        keyboardShortcutMenu: true
                    });
                    break;
                }
            case isMatchingLocation(SettingsPath.Domain, AppBasePath.Settings):
                {
                    setHotkeyScope(PageHotkeyScope.Settings, {
                        goto: false,
                        keyboardShortcutMenu: true
                    });
                    break;
                }
            case isMatchingLocation(SettingsPath.WorkspaceMembersPage, AppBasePath.Settings):
                {
                    setHotkeyScope(PageHotkeyScope.WorkspaceMemberPage, {
                        goto: true,
                        keyboardShortcutMenu: true
                    });
                    break;
                }
        }
    }, [
        isMatchingLocation,
        setHotkeyScope
    ]);
    useEffect(()=>{
        setTimeout(()=>{
            setSessionId();
            eventTracker('pageview', {
                pathname: location.pathname,
                locale: navigator.language,
                userAgent: window.navigator.userAgent,
                href: window.location.href,
                referrer: document.referrer,
                timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone
            });
        }, 500);
    }, [
        eventTracker,
        location.pathname
    ]);
    const { requestFreshCaptchaToken } = useRequestFreshCaptchaToken();
    const isCaptchaScriptLoaded = useRecoilValue(isCaptchaScriptLoadedState);
    useEffect(()=>{
        if (isCaptchaScriptLoaded && isCaptchaRequiredForPath(location.pathname)) {
            requestFreshCaptchaToken();
        }
    }, [
        isCaptchaScriptLoaded,
        location.pathname,
        requestFreshCaptchaToken
    ]);
    return /*#__PURE__*/ _jsxDEV(_Fragment, {}, void 0, false);
};
_s(PageChangeEffect, "B18nQJj+VcCSBksCbX+P7nFHBbE=", false, function() {
    return [
        useNavigate,
        useIsMatchingLocation,
        useSetHotkeyScope,
        useLocation,
        usePageChangeEffectNavigateLocation,
        useEventTracker,
        useParams,
        useResetTableRowSelection,
        useRequestFreshCaptchaToken,
        useRecoilValue
    ];
});
_c = PageChangeEffect;
var _c;
$RefreshReg$(_c, "PageChangeEffect");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/app/effect-components/PageChangeEffect.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/app/effect-components/PageChangeEffect.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,