import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { LABEL_IDENTIFIER_FIELD_METADATA_TYPES } from "/src/modules/object-metadata/constants/LabelIdentifierFieldMetadataTypes.ts";
import { useFieldMetadataItem } from "/src/modules/object-metadata/hooks/useFieldMetadataItem.ts";
import { useGetRelationMetadata } from "/src/modules/object-metadata/hooks/useGetRelationMetadata.ts";
import { useUpdateOneObjectMetadataItem } from "/src/modules/object-metadata/hooks/useUpdateOneObjectMetadataItem.ts";
import { CoreObjectNameSingular } from "/src/modules/object-metadata/types/CoreObjectNameSingular.ts";
import { isLabelIdentifierField } from "/src/modules/object-metadata/utils/isLabelIdentifierField.ts";
import { useDeleteRecordFromCache } from "/src/modules/object-record/cache/hooks/useDeleteRecordFromCache.ts";
import { prefetchViewsState } from "/src/modules/prefetch/states/prefetchViewsState.ts";
import { SettingsObjectFieldActiveActionDropdown } from "/src/modules/settings/data-model/object-details/components/SettingsObjectFieldActiveActionDropdown.tsx";
import { SettingsObjectFieldInactiveActionDropdown } from "/src/modules/settings/data-model/object-details/components/SettingsObjectFieldDisabledActionDropdown.tsx";
import { settingsObjectFieldsFamilyState } from "/src/modules/settings/data-model/object-details/states/settingsObjectFieldsFamilyState.ts";
import { isFieldTypeSupportedInSettings } from "/src/modules/settings/data-model/utils/isFieldTypeSupportedInSettings.ts";
import { SettingsPath } from "/src/modules/types/SettingsPath.ts";
import { TableCell } from "/src/modules/ui/layout/table/components/TableCell.tsx";
import { TableRow } from "/src/modules/ui/layout/table/components/TableRow.tsx";
import { navigationMemorizedUrlState } from "/src/modules/ui/navigation/states/navigationMemorizedUrlState.ts";
import { useTheme } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react.js?v=226f7286";
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import __vite__cjsImport20_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useMemo = __vite__cjsImport20_react["useMemo"];
import { useRecoilState, useRecoilValue } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/recoil.js?v=226f7286";
import { IconMinus, IconPlus, LightIconButton, UndecoratedLink, useIcons } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { RelationDefinitionType } from "/src/generated-metadata/graphql.ts";
import { useNavigateSettings } from "/src/hooks/useNavigateSettings.ts";
import { getSettingsPath } from "/src/utils/navigation/getSettingsPath.ts";
import { RELATION_TYPES } from "/src/modules/settings/data-model/constants/RelationTypes.ts";
import { SettingsObjectFieldDataType } from "/src/modules/settings/data-model/object-details/components/SettingsObjectFieldDataType.tsx";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
export const StyledObjectFieldTableRow = styled(TableRow)`
  grid-template-columns: 180px 148px 148px 36px;
`;
_c = StyledObjectFieldTableRow;
const StyledNameTableCell = styled(TableCell)`
  color: ${({ theme })=>theme.font.color.primary};
  gap: ${({ theme })=>theme.spacing(2)};
`;
_c1 = StyledNameTableCell;
const StyledNameLabel = styled.div`
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
`;
_c2 = StyledNameLabel;
const StyledIconTableCell = styled(TableCell)`
  justify-content: center;
  padding-right: ${({ theme })=>theme.spacing(1)};
`;
_c3 = StyledIconTableCell;
export const SettingsObjectFieldItemTableRow = ({ settingsObjectDetailTableItem, mode, status })=>{
    _s();
    const { fieldMetadataItem, identifierType, objectMetadataItem } = settingsObjectDetailTableItem;
    const isRemoteObjectField = objectMetadataItem.isRemote;
    const variant = objectMetadataItem.isCustom ? 'identifier' : 'field-type';
    const navigate = useNavigateSettings();
    const [navigationMemorizedUrl, setNavigationMemorizedUrl] = useRecoilState(navigationMemorizedUrlState);
    const theme = useTheme();
    const { getIcon } = useIcons();
    const Icon = getIcon(fieldMetadataItem.icon);
    const getRelationMetadata = useGetRelationMetadata();
    const { relationObjectMetadataItem, relationType } = useMemo(()=>getRelationMetadata({
            fieldMetadataItem
        }), [
        fieldMetadataItem,
        getRelationMetadata
    ]) ?? {};
    const fieldType = fieldMetadataItem.type;
    const isFieldTypeSupported = isFieldTypeSupportedInSettings(fieldType);
    const RelationIcon = relationType ? RELATION_TYPES[relationType].Icon : undefined;
    const isLabelIdentifier = isLabelIdentifierField({
        fieldMetadataItem,
        objectMetadataItem
    });
    const canToggleField = !isLabelIdentifier;
    const canBeSetAsLabelIdentifier = objectMetadataItem.isCustom && !isLabelIdentifier && LABEL_IDENTIFIER_FIELD_METADATA_TYPES.includes(fieldMetadataItem.type);
    const linkToNavigate = getSettingsPath(SettingsPath.ObjectFieldEdit, {
        objectNamePlural: objectMetadataItem.namePlural,
        fieldName: fieldMetadataItem.name
    });
    const { activateMetadataField, deactivateMetadataField, deleteMetadataField } = useFieldMetadataItem();
    const prefetchViews = useRecoilValue(prefetchViewsState);
    const deleteViewFromCache = useDeleteRecordFromCache({
        objectNameSingular: CoreObjectNameSingular.View
    });
    const handleDisableField = async (activeFieldMetadatItem)=>{
        await deactivateMetadataField(activeFieldMetadatItem.id, objectMetadataItem.id);
        const deletedViewIds = prefetchViews.map((view)=>{
            if (view.kanbanFieldMetadataId === activeFieldMetadatItem.id) {
                deleteViewFromCache(view);
                return view.id;
            }
            return null;
        }).filter(isDefined);
        const [baseUrl, queryParams] = navigationMemorizedUrl.includes('?') ? navigationMemorizedUrl.split('?') : [
            navigationMemorizedUrl,
            ''
        ];
        const params = new URLSearchParams(queryParams);
        const currentViewId = params.get('view');
        if (isDefined(currentViewId) && deletedViewIds.includes(currentViewId)) {
            params.delete('view');
            const updatedUrl = params.toString() ? `${baseUrl}?${params.toString()}` : baseUrl;
            setNavigationMemorizedUrl(updatedUrl);
        }
    };
    const { updateOneObjectMetadataItem } = useUpdateOneObjectMetadataItem();
    const handleSetLabelIdentifierField = (activeFieldMetadatItem)=>updateOneObjectMetadataItem({
            idToUpdate: objectMetadataItem.id,
            updatePayload: {
                labelIdentifierFieldMetadataId: activeFieldMetadatItem.id
            }
        });
    const [, setActiveSettingsObjectFields] = useRecoilState(settingsObjectFieldsFamilyState({
        objectMetadataItemId: objectMetadataItem.id
    }));
    const handleToggleField = ()=>{
        setActiveSettingsObjectFields((previousFields)=>{
            const newFields = isDefined(previousFields) ? previousFields?.map((field)=>field.id === fieldMetadataItem.id ? {
                    ...field,
                    isActive: !field.isActive
                } : field) : null;
            return newFields;
        });
    };
    const typeLabel = variant === 'field-type' ? isRemoteObjectField ? 'Remote' : fieldMetadataItem.isCustom ? 'Custom' : 'Standard' : variant === 'identifier' ? isDefined(identifierType) ? identifierType === 'label' ? 'Record text' : 'Record image' : '' : '';
    if (!isFieldTypeSupported) return null;
    const isRelatedObjectLinkable = isDefined(relationObjectMetadataItem?.namePlural) && !relationObjectMetadataItem.isSystem;
    return /*#__PURE__*/ _jsxDEV(StyledObjectFieldTableRow, {
        onClick: mode === 'view' ? ()=>navigate(SettingsPath.ObjectFieldEdit, {
                objectNamePlural: objectMetadataItem.namePlural,
                fieldName: fieldMetadataItem.name
            }) : undefined,
        children: [
            /*#__PURE__*/ _jsxDEV(UndecoratedLink, {
                to: linkToNavigate,
                children: /*#__PURE__*/ _jsxDEV(StyledNameTableCell, {
                    children: [
                        !!Icon && /*#__PURE__*/ _jsxDEV(Icon, {
                            style: {
                                minWidth: theme.icon.size.md
                            },
                            size: theme.icon.size.md,
                            stroke: theme.icon.stroke.sm
                        }, void 0, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx",
                            lineNumber: 230,
                            columnNumber: 13
                        }, this),
                        /*#__PURE__*/ _jsxDEV(StyledNameLabel, {
                            title: fieldMetadataItem.label,
                            children: fieldMetadataItem.label
                        }, void 0, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx",
                            lineNumber: 236,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx",
                    lineNumber: 228,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx",
                lineNumber: 227,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(TableCell, {
                children: typeLabel
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx",
                lineNumber: 242,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(TableCell, {
                children: /*#__PURE__*/ _jsxDEV(SettingsObjectFieldDataType, {
                    Icon: RelationIcon,
                    label: relationType === RelationDefinitionType.MANY_TO_ONE || relationType === RelationDefinitionType.ONE_TO_ONE ? relationObjectMetadataItem?.labelSingular : relationObjectMetadataItem?.labelPlural,
                    labelDetail: fieldMetadataItem.settings?.type === 'percentage' ? '%' : undefined,
                    to: isRelatedObjectLinkable ? getSettingsPath(SettingsPath.Objects, {
                        objectNamePlural: relationObjectMetadataItem.namePlural
                    }) : undefined,
                    value: fieldType,
                    onClick: (e)=>{
                        if (isRelatedObjectLinkable) {
                            e.stopPropagation();
                        }
                    }
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx",
                    lineNumber: 244,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx",
                lineNumber: 243,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(StyledIconTableCell, {
                children: status === 'active' ? mode === 'view' ? /*#__PURE__*/ _jsxDEV(SettingsObjectFieldActiveActionDropdown, {
                    isCustomField: fieldMetadataItem.isCustom === true,
                    scopeKey: fieldMetadataItem.id,
                    onEdit: ()=>navigate(SettingsPath.ObjectFieldEdit, {
                            objectNamePlural: objectMetadataItem.namePlural,
                            fieldName: fieldMetadataItem.name
                        }),
                    onSetAsLabelIdentifier: canBeSetAsLabelIdentifier ? ()=>handleSetLabelIdentifierField(fieldMetadataItem) : undefined,
                    onDeactivate: isLabelIdentifier ? undefined : ()=>handleDisableField(fieldMetadataItem)
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx",
                    lineNumber: 273,
                    columnNumber: 13
                }, this) : canToggleField && /*#__PURE__*/ _jsxDEV(LightIconButton, {
                    Icon: IconMinus,
                    accent: "tertiary",
                    onClick: handleToggleField
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx",
                    lineNumber: 295,
                    columnNumber: 15
                }, this) : mode === 'view' ? /*#__PURE__*/ _jsxDEV(SettingsObjectFieldInactiveActionDropdown, {
                    isCustomField: fieldMetadataItem.isCustom === true,
                    scopeKey: fieldMetadataItem.id,
                    onEdit: ()=>navigate(SettingsPath.ObjectFieldEdit, {
                            objectNamePlural: objectMetadataItem.namePlural,
                            fieldName: fieldMetadataItem.name
                        }),
                    onActivate: ()=>activateMetadataField(fieldMetadataItem.id, objectMetadataItem.id),
                    onDelete: ()=>deleteMetadataField(fieldMetadataItem)
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx",
                    lineNumber: 303,
                    columnNumber: 11
                }, this) : /*#__PURE__*/ _jsxDEV(LightIconButton, {
                    Icon: IconPlus,
                    accent: "tertiary",
                    onClick: handleToggleField
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx",
                    lineNumber: 318,
                    columnNumber: 11
                }, this)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx",
                lineNumber: 270,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx",
        lineNumber: 216,
        columnNumber: 5
    }, this);
};
_s(SettingsObjectFieldItemTableRow, "6KZJUpvvf44lVsLdav6lfozMbcs=", false, function() {
    return [
        useNavigateSettings,
        useRecoilState,
        useTheme,
        useIcons,
        useGetRelationMetadata,
        useFieldMetadataItem,
        useRecoilValue,
        useDeleteRecordFromCache,
        useUpdateOneObjectMetadataItem,
        useRecoilState
    ];
});
_c4 = SettingsObjectFieldItemTableRow;
var _c, _c1, _c2, _c3, _c4;
$RefreshReg$(_c, "StyledObjectFieldTableRow");
$RefreshReg$(_c1, "StyledNameTableCell");
$RefreshReg$(_c2, "StyledNameLabel");
$RefreshReg$(_c3, "StyledIconTableCell");
$RefreshReg$(_c4, "SettingsObjectFieldItemTableRow");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/settings/data-model/object-details/components/SettingsObjectFieldItemTableRow.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,