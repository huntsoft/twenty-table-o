import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/workflow/workflow-variables/components/WorkflowVariablesDropdownObjectItems.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-variables/components/WorkflowVariablesDropdownObjectItems.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { DropdownMenuHeader } from "/src/modules/ui/layout/dropdown/components/DropdownMenuHeader/DropdownMenuHeader.tsx";
import { DropdownMenuItemsContainer } from "/src/modules/ui/layout/dropdown/components/DropdownMenuItemsContainer.tsx";
import { DropdownMenuSearchInput } from "/src/modules/ui/layout/dropdown/components/DropdownMenuSearchInput.tsx";
import { DropdownMenuSeparator } from "/src/modules/ui/layout/dropdown/components/DropdownMenuSeparator.tsx";
import { getCurrentSubStepFromPath } from "/src/modules/workflow/workflow-variables/utils/getCurrentSubStepFromPath.ts";
import { getStepHeaderLabel } from "/src/modules/workflow/workflow-variables/utils/getStepHeaderLabel.ts";
import { isBaseOutputSchema } from "/src/modules/workflow/workflow-variables/utils/isBaseOutputSchema.ts";
import { isRecordOutputSchema } from "/src/modules/workflow/workflow-variables/utils/isRecordOutputSchema.ts";
import __vite__cjsImport10_react from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/react.js?v=226f7286"; const useState = __vite__cjsImport10_react["useState"];
import { IconChevronLeft, MenuItemSelect, OverflowingTextWithTooltip, useIcons } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { DropdownMenuHeaderLeftComponent } from "/src/modules/ui/layout/dropdown/components/DropdownMenuHeader/internal/DropdownMenuHeaderLeftComponent.tsx";
export const WorkflowVariablesDropdownObjectItems = ({ step, onSelect, onBack })=>{
    _s();
    const [currentPath, setCurrentPath] = useState([]);
    const [searchInputValue, setSearchInputValue] = useState('');
    const { getIcon } = useIcons();
    const getDisplayedSubStepFields = ()=>{
        const currentSubStep = getCurrentSubStepFromPath(step, currentPath);
        if (isRecordOutputSchema(currentSubStep)) {
            return currentSubStep.fields;
        } else if (isBaseOutputSchema(currentSubStep)) {
            return currentSubStep;
        }
    };
    const getDisplayedSubStepObject = ()=>{
        const currentSubStep = getCurrentSubStepFromPath(step, currentPath);
        if (!isRecordOutputSchema(currentSubStep)) {
            return;
        }
        return currentSubStep.object;
    };
    const handleSelectObject = ()=>{
        const currentSubStep = getCurrentSubStepFromPath(step, currentPath);
        if (!isRecordOutputSchema(currentSubStep)) {
            return;
        }
        onSelect(`{{${step.id}.${[
            ...currentPath,
            currentSubStep.object.fieldIdName
        ].join('.')}}}`);
    };
    const handleSelectField = (key)=>{
        setCurrentPath([
            ...currentPath,
            key
        ]);
        setSearchInputValue('');
    };
    const goBack = ()=>{
        if (currentPath.length === 0) {
            onBack();
        } else {
            setCurrentPath(currentPath.slice(0, -1));
        }
    };
    const displayedSubStepObject = getDisplayedSubStepObject();
    const shouldDisplaySubStepObject = searchInputValue ? displayedSubStepObject?.label && displayedSubStepObject.label.toLowerCase().includes(searchInputValue.toLowerCase()) : true;
    const displayedFields = getDisplayedSubStepFields();
    const options = displayedFields ? Object.entries(displayedFields) : [];
    const filteredOptions = searchInputValue ? options.filter(([_, value])=>value.label && value.label.toLowerCase().includes(searchInputValue.toLowerCase())) : options;
    return /*#__PURE__*/ _jsxDEV(_Fragment, {
        children: [
            /*#__PURE__*/ _jsxDEV(DropdownMenuHeader, {
                StartComponent: /*#__PURE__*/ _jsxDEV(DropdownMenuHeaderLeftComponent, {
                    onClick: goBack,
                    Icon: IconChevronLeft
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-variables/components/WorkflowVariablesDropdownObjectItems.tsx",
                    lineNumber: 104,
                    columnNumber: 11
                }, void 0),
                children: /*#__PURE__*/ _jsxDEV(OverflowingTextWithTooltip, {
                    text: getStepHeaderLabel(step, currentPath)
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-variables/components/WorkflowVariablesDropdownObjectItems.tsx",
                    lineNumber: 110,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-variables/components/WorkflowVariablesDropdownObjectItems.tsx",
                lineNumber: 102,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuSearchInput, {
                autoFocus: true,
                value: searchInputValue,
                onChange: (event)=>setSearchInputValue(event.target.value)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-variables/components/WorkflowVariablesDropdownObjectItems.tsx",
                lineNumber: 114,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuSeparator, {}, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-variables/components/WorkflowVariablesDropdownObjectItems.tsx",
                lineNumber: 119,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuItemsContainer, {
                children: [
                    shouldDisplaySubStepObject && displayedSubStepObject?.label && /*#__PURE__*/ _jsxDEV(MenuItemSelect, {
                        selected: false,
                        hovered: false,
                        onClick: handleSelectObject,
                        text: displayedSubStepObject.label,
                        hasSubMenu: false,
                        LeftIcon: displayedSubStepObject.icon ? getIcon(displayedSubStepObject.icon) : undefined
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-variables/components/WorkflowVariablesDropdownObjectItems.tsx",
                        lineNumber: 122,
                        columnNumber: 11
                    }, this),
                    filteredOptions.map(([key, value])=>/*#__PURE__*/ _jsxDEV(MenuItemSelect, {
                            selected: false,
                            hovered: false,
                            onClick: ()=>handleSelectField(key),
                            text: value.label || key,
                            hasSubMenu: !value.isLeaf,
                            LeftIcon: value.icon ? getIcon(value.icon) : undefined
                        }, key, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-variables/components/WorkflowVariablesDropdownObjectItems.tsx",
                            lineNumber: 136,
                            columnNumber: 11
                        }, this))
                ]
            }, void 0, true, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-variables/components/WorkflowVariablesDropdownObjectItems.tsx",
                lineNumber: 120,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true);
};
_s(WorkflowVariablesDropdownObjectItems, "iB7uyw6KEp1YMKX/nC3S1LVW/7U=", false, function() {
    return [
        useIcons
    ];
});
_c = WorkflowVariablesDropdownObjectItems;
var _c;
$RefreshReg$(_c, "WorkflowVariablesDropdownObjectItems");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-variables/components/WorkflowVariablesDropdownObjectItems.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/workflow/workflow-variables/components/WorkflowVariablesDropdownObjectItems.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,