import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/ui/navigation/step-bar/components/Step.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/ui/navigation/step-bar/components/Step.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { useTheme } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react.js?v=226f7286";
import styled from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_styled.js?v=226f7286";
import { motion } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/framer-motion.js?v=226f7286";
import { AnimatedCheckmark, MOBILE_VIEWPORT } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { useIsMobile } from "/src/modules/ui/utilities/responsive/hooks/useIsMobile.ts";
const StyledContainer = styled.div`
  align-items: center;
  display: flex;
  flex-grow: ${({ isLast })=>isLast ? '0' : '1'};
  @media (max-width: ${MOBILE_VIEWPORT}px) {
    flex-grow: 0;
  }
`;
_c = StyledContainer;
const StyledStepCircle = styled(motion.div)`
  align-items: center;
  border-radius: 50%;
  border-style: solid;
  border-width: 1px;
  border-color: ${({ theme, isNextStep })=>isNextStep ? theme.border.color.inverted : theme.border.color.medium} !important;
  display: flex;
  flex-basis: auto;
  flex-shrink: 0;
  height: 20px;
  justify-content: center;
  overflow: hidden;
  position: relative;
  width: 20px;
`;
_c1 = StyledStepCircle;
const StyledStepIndex = styled.span`
  color: ${({ theme, isNextStep })=>isNextStep ? theme.font.color.secondary : theme.font.color.tertiary};
  font-size: ${({ theme })=>theme.font.size.md};
  font-weight: ${({ theme })=>theme.font.weight.medium};
`;
_c2 = StyledStepIndex;
const StyledStepLabel = styled.span`
  color: ${({ theme, isActive, isNextStep })=>isActive || isNextStep ? theme.font.color.primary : theme.font.color.tertiary};
  font-size: ${({ theme })=>theme.font.size.md};
  font-weight: ${({ theme })=>theme.font.weight.semiBold};
  margin-left: ${({ theme })=>theme.spacing(2)};
  white-space: nowrap;
`;
_c3 = StyledStepLabel;
const StyledStepLine = styled(motion.div)`
  height: 2px;
  margin-left: ${({ theme })=>theme.spacing(2)};
  margin-right: ${({ theme })=>theme.spacing(2)};
  overflow: hidden;
  width: 100%;
`;
_c4 = StyledStepLine;
export const Step = ({ isActive = false, isLast = false, index = 0, label, children, activeStep = 0 })=>{
    _s();
    const theme = useTheme();
    const isMobile = useIsMobile();
    const variantsCircle = {
        active: {
            backgroundColor: theme.font.color.primary,
            borderColor: theme.font.color.primary,
            transition: {
                duration: 0.5
            }
        },
        inactive: {
            backgroundColor: theme.background.transparent.lighter,
            borderColor: theme.border.color.medium,
            transition: {
                duration: 0.5
            }
        }
    };
    const variantsLine = {
        active: {
            backgroundColor: theme.font.color.primary,
            transition: {
                duration: 0.5
            }
        },
        inactive: {
            backgroundColor: theme.border.color.medium,
            transition: {
                duration: 0.5
            }
        }
    };
    const isNextStep = activeStep + 1 === index;
    return /*#__PURE__*/ _jsxDEV(StyledContainer, {
        isLast: isLast,
        children: [
            /*#__PURE__*/ _jsxDEV(StyledStepCircle, {
                variants: variantsCircle,
                animate: isActive ? 'active' : 'inactive',
                isNextStep: isNextStep,
                children: [
                    isActive && /*#__PURE__*/ _jsxDEV(AnimatedCheckmark, {
                        isAnimating: isActive,
                        color: theme.grayScale.gray0
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/ui/navigation/step-bar/components/Step.tsx",
                        lineNumber: 116,
                        columnNumber: 11
                    }, this),
                    !isActive && /*#__PURE__*/ _jsxDEV(StyledStepIndex, {
                        isNextStep: isNextStep,
                        children: index + 1
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/ui/navigation/step-bar/components/Step.tsx",
                        lineNumber: 122,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/ui/navigation/step-bar/components/Step.tsx",
                lineNumber: 110,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(StyledStepLabel, {
                isNextStep: isNextStep,
                isActive: isActive,
                children: label
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/ui/navigation/step-bar/components/Step.tsx",
                lineNumber: 125,
                columnNumber: 7
            }, this),
            !isLast && !isMobile && /*#__PURE__*/ _jsxDEV(StyledStepLine, {
                variants: variantsLine,
                animate: isActive ? 'active' : 'inactive'
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/ui/navigation/step-bar/components/Step.tsx",
                lineNumber: 129,
                columnNumber: 9
            }, this),
            isActive && children
        ]
    }, void 0, true, {
        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/ui/navigation/step-bar/components/Step.tsx",
        lineNumber: 109,
        columnNumber: 5
    }, this);
};
_s(Step, "jjf1HgM6wOI9RMgZupDYR21xdjc=", false, function() {
    return [
        useTheme,
        useIsMobile
    ];
});
_c5 = Step;
Step.displayName = 'StepBar';
var _c, _c1, _c2, _c3, _c4, _c5;
$RefreshReg$(_c, "StyledContainer");
$RefreshReg$(_c1, "StyledStepCircle");
$RefreshReg$(_c2, "StyledStepIndex");
$RefreshReg$(_c3, "StyledStepLabel");
$RefreshReg$(_c4, "StyledStepLine");
$RefreshReg$(_c5, "Step");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/ui/navigation/step-bar/components/Step.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/ui/navigation/step-bar/components/Step.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,