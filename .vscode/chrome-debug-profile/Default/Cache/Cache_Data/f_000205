import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/views/view-picker/components/ViewPickerContentEditMode.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentEditMode.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import __vite__cjsImport2_tsKeyEnum from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/ts-key-enum.js?v=226f7286"; const Key = __vite__cjsImport2_tsKeyEnum["Key"];
import { IconChevronLeft } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
import { IconPicker } from "/src/modules/ui/input/components/IconPicker.tsx";
import { TextInputV2 } from "/src/modules/ui/input/components/TextInputV2.tsx";
import { DropdownMenuHeader } from "/src/modules/ui/layout/dropdown/components/DropdownMenuHeader/DropdownMenuHeader.tsx";
import { DropdownMenuHeaderLeftComponent } from "/src/modules/ui/layout/dropdown/components/DropdownMenuHeader/internal/DropdownMenuHeaderLeftComponent.tsx";
import { DropdownMenuItemsContainer } from "/src/modules/ui/layout/dropdown/components/DropdownMenuItemsContainer.tsx";
import { DropdownMenuSeparator } from "/src/modules/ui/layout/dropdown/components/DropdownMenuSeparator.tsx";
import { useScopedHotkeys } from "/src/modules/ui/utilities/hotkey/hooks/useScopedHotkeys.ts";
import { useSetHotkeyScope } from "/src/modules/ui/utilities/hotkey/hooks/useSetHotkeyScope.ts";
import { useRecoilComponentStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentStateV2.ts";
import { useRecoilComponentValueV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentValueV2.ts";
import { useSetRecoilComponentStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useSetRecoilComponentStateV2.ts";
import { ViewsHotkeyScope } from "/src/modules/views/types/ViewsHotkeyScope.ts";
import { ViewPickerEditButton } from "/src/modules/views/view-picker/components/ViewPickerEditButton.tsx";
import { ViewPickerIconAndNameContainer } from "/src/modules/views/view-picker/components/ViewPickerIconAndNameContainer.tsx";
import { ViewPickerSaveButtonContainer } from "/src/modules/views/view-picker/components/ViewPickerSaveButtonContainer.tsx";
import { useUpdateViewFromCurrentState } from "/src/modules/views/view-picker/hooks/useUpdateViewFromCurrentState.ts";
import { useViewPickerMode } from "/src/modules/views/view-picker/hooks/useViewPickerMode.ts";
import { viewPickerInputNameComponentState } from "/src/modules/views/view-picker/states/viewPickerInputNameComponentState.ts";
import { viewPickerIsDirtyComponentState } from "/src/modules/views/view-picker/states/viewPickerIsDirtyComponentState.ts";
import { viewPickerIsPersistingComponentState } from "/src/modules/views/view-picker/states/viewPickerIsPersistingComponentState.ts";
import { viewPickerSelectedIconComponentState } from "/src/modules/views/view-picker/states/viewPickerSelectedIconComponentState.ts";
export const ViewPickerContentEditMode = ()=>{
    _s();
    const { setViewPickerMode } = useViewPickerMode();
    const [viewPickerInputName, setViewPickerInputName] = useRecoilComponentStateV2(viewPickerInputNameComponentState);
    const [viewPickerSelectedIcon, setViewPickerSelectedIcon] = useRecoilComponentStateV2(viewPickerSelectedIconComponentState);
    const viewPickerIsPersisting = useRecoilComponentValueV2(viewPickerIsPersistingComponentState);
    const setViewPickerIsDirty = useSetRecoilComponentStateV2(viewPickerIsDirtyComponentState);
    const setHotkeyScope = useSetHotkeyScope();
    const { updateViewFromCurrentState } = useUpdateViewFromCurrentState();
    useScopedHotkeys(Key.Enter, async ()=>{
        if (viewPickerIsPersisting) {
            return;
        }
        await updateViewFromCurrentState();
    }, ViewsHotkeyScope.ListDropdown);
    const onIconChange = ({ iconKey })=>{
        setViewPickerIsDirty(true);
        setViewPickerSelectedIcon(iconKey);
    };
    const handleClose = async ()=>{
        await updateViewFromCurrentState();
        setViewPickerMode('list');
    };
    return /*#__PURE__*/ _jsxDEV(_Fragment, {
        children: [
            /*#__PURE__*/ _jsxDEV(DropdownMenuHeader, {
                StartComponent: /*#__PURE__*/ _jsxDEV(DropdownMenuHeaderLeftComponent, {
                    onClick: handleClose,
                    Icon: IconChevronLeft
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentEditMode.tsx",
                    lineNumber: 72,
                    columnNumber: 11
                }, void 0),
                children: "Edit view"
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentEditMode.tsx",
                lineNumber: 70,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuSeparator, {}, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentEditMode.tsx",
                lineNumber: 80,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuItemsContainer, {
                children: /*#__PURE__*/ _jsxDEV(ViewPickerIconAndNameContainer, {
                    children: [
                        /*#__PURE__*/ _jsxDEV(IconPicker, {
                            onChange: onIconChange,
                            selectedIconKey: viewPickerSelectedIcon,
                            onClose: ()=>setHotkeyScope(ViewsHotkeyScope.ListDropdown)
                        }, void 0, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentEditMode.tsx",
                            lineNumber: 83,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ _jsxDEV(TextInputV2, {
                            value: viewPickerInputName,
                            onChange: (value)=>{
                                setViewPickerIsDirty(true);
                                setViewPickerInputName(value);
                            },
                            autoFocus: true
                        }, void 0, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentEditMode.tsx",
                            lineNumber: 88,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentEditMode.tsx",
                    lineNumber: 82,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentEditMode.tsx",
                lineNumber: 81,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuSeparator, {}, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentEditMode.tsx",
                lineNumber: 98,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuItemsContainer, {
                scrollable: false,
                children: /*#__PURE__*/ _jsxDEV(ViewPickerSaveButtonContainer, {
                    children: /*#__PURE__*/ _jsxDEV(ViewPickerEditButton, {}, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentEditMode.tsx",
                        lineNumber: 101,
                        columnNumber: 11
                    }, this)
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentEditMode.tsx",
                    lineNumber: 100,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentEditMode.tsx",
                lineNumber: 99,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true);
};
_s(ViewPickerContentEditMode, "4Hqdiv8TyWGNJTsByslgyBGg6y8=", false, function() {
    return [
        useViewPickerMode,
        useRecoilComponentStateV2,
        useRecoilComponentStateV2,
        useRecoilComponentValueV2,
        useSetRecoilComponentStateV2,
        useSetHotkeyScope,
        useUpdateViewFromCurrentState,
        useScopedHotkeys
    ];
});
_c = ViewPickerContentEditMode;
var _c;
$RefreshReg$(_c, "ViewPickerContentEditMode");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentEditMode.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/views/view-picker/components/ViewPickerContentEditMode.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,