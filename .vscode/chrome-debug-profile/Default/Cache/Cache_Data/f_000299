import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/object-record/advanced-filter/components/AdvancedFilterSubFieldSelectMenu.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterSubFieldSelectMenu.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import { DropdownMenuItemsContainer } from "/src/modules/ui/layout/dropdown/components/DropdownMenuItemsContainer.tsx";
import { useRecoilComponentValueV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentValueV2.ts";
import { useSetRecoilComponentStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useSetRecoilComponentStateV2.ts";
import { isDefined } from "/@fs/D:/twenty-table-o/packages/twenty-shared/utils/dist/twenty-shared-utils.esm.js";
import { useAdvancedFilterFieldSelectDropdown } from "/src/modules/object-record/advanced-filter/hooks/useAdvancedFilterFieldSelectDropdown.ts";
import { useSelectFieldUsedInAdvancedFilterDropdown } from "/src/modules/object-record/advanced-filter/hooks/useSelectFieldUsedInAdvancedFilterDropdown.ts";
import { fieldMetadataItemIdUsedInDropdownComponentState } from "/src/modules/object-record/object-filter-dropdown/states/fieldMetadataItemIdUsedInDropdownComponentState.ts";
import { fieldMetadataItemUsedInDropdownComponentSelector } from "/src/modules/object-record/object-filter-dropdown/states/fieldMetadataItemUsedInDropdownComponentSelector.ts";
import { objectFilterDropdownFilterIsSelectedComponentState } from "/src/modules/object-record/object-filter-dropdown/states/objectFilterDropdownFilterIsSelectedComponentState.ts";
import { objectFilterDropdownIsSelectingCompositeFieldComponentState } from "/src/modules/object-record/object-filter-dropdown/states/objectFilterDropdownIsSelectingCompositeFieldComponentState.ts";
import { objectFilterDropdownSubMenuFieldTypeComponentState } from "/src/modules/object-record/object-filter-dropdown/states/objectFilterDropdownSubMenuFieldTypeComponentState.ts";
import { subFieldNameUsedInDropdownComponentState } from "/src/modules/object-record/object-filter-dropdown/states/subFieldNameUsedInDropdownComponentState.ts";
import { getCompositeSubFieldLabel } from "/src/modules/object-record/object-filter-dropdown/utils/getCompositeSubFieldLabel.ts";
import { getFilterableFieldTypeLabel } from "/src/modules/object-record/object-filter-dropdown/utils/getFilterableFieldTypeLabel.ts";
import { SETTINGS_COMPOSITE_FIELD_TYPE_CONFIGS } from "/src/modules/settings/data-model/constants/SettingsCompositeFieldTypeConfigs.ts";
import { DropdownMenuHeader } from "/src/modules/ui/layout/dropdown/components/DropdownMenuHeader/DropdownMenuHeader.tsx";
import { DropdownMenuHeaderLeftComponent } from "/src/modules/ui/layout/dropdown/components/DropdownMenuHeader/internal/DropdownMenuHeaderLeftComponent.tsx";
import { useRecoilComponentStateV2 } from "/src/modules/ui/utilities/state/component-state/hooks/useRecoilComponentStateV2.ts";
import { IconApps, IconChevronLeft, MenuItem, useIcons } from "/@fs/D:/twenty-table-o/packages/twenty-ui/src/index.ts";
export const AdvancedFilterSubFieldSelectMenu = ({ recordFilterId })=>{
    _s();
    const { getIcon } = useIcons();
    const fieldMetadataItemUsedInDropdown = useRecoilComponentValueV2(fieldMetadataItemUsedInDropdownComponentSelector);
    const [, setObjectFilterDropdownFilterIsSelected] = useRecoilComponentStateV2(objectFilterDropdownFilterIsSelectedComponentState);
    const [, setSubFieldNameUsedInDropdown] = useRecoilComponentStateV2(subFieldNameUsedInDropdownComponentState);
    const [, setObjectFilterDropdownIsSelectingCompositeField] = useRecoilComponentStateV2(objectFilterDropdownIsSelectingCompositeFieldComponentState);
    const [objectFilterDropdownSubMenuFieldType, setObjectFilterDropdownSubMenuFieldType] = useRecoilComponentStateV2(objectFilterDropdownSubMenuFieldTypeComponentState);
    const setFieldMetadataItemIdUsedInDropdown = useSetRecoilComponentStateV2(fieldMetadataItemIdUsedInDropdownComponentState);
    const { closeAdvancedFilterFieldSelectDropdown } = useAdvancedFilterFieldSelectDropdown(recordFilterId);
    const { selectFieldUsedInAdvancedFilterDropdown } = useSelectFieldUsedInAdvancedFilterDropdown();
    const handleSelectFilter = (selectedFieldMetadataItem, subFieldName)=>{
        if (!isDefined(selectedFieldMetadataItem)) {
            return;
        }
        selectFieldUsedInAdvancedFilterDropdown({
            fieldMetadataItemId: selectedFieldMetadataItem.id,
            recordFilterId,
            subFieldName
        });
        closeAdvancedFilterFieldSelectDropdown();
    };
    const handleSubMenuBack = ()=>{
        setFieldMetadataItemIdUsedInDropdown(null);
        setObjectFilterDropdownSubMenuFieldType(null);
        setObjectFilterDropdownIsSelectingCompositeField(false);
        setObjectFilterDropdownFilterIsSelected(false);
        setSubFieldNameUsedInDropdown(null);
    };
    if (!isDefined(objectFilterDropdownSubMenuFieldType)) {
        return null;
    }
    const options = SETTINGS_COMPOSITE_FIELD_TYPE_CONFIGS[objectFilterDropdownSubMenuFieldType].filterableSubFields.sort((a, b)=>a.localeCompare(b));
    return /*#__PURE__*/ _jsxDEV(_Fragment, {
        children: [
            /*#__PURE__*/ _jsxDEV(DropdownMenuHeader, {
                StartComponent: /*#__PURE__*/ _jsxDEV(DropdownMenuHeaderLeftComponent, {
                    onClick: handleSubMenuBack,
                    Icon: IconChevronLeft
                }, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterSubFieldSelectMenu.tsx",
                    lineNumber: 104,
                    columnNumber: 11
                }, void 0),
                children: getFilterableFieldTypeLabel(objectFilterDropdownSubMenuFieldType)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterSubFieldSelectMenu.tsx",
                lineNumber: 102,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(DropdownMenuItemsContainer, {
                children: [
                    /*#__PURE__*/ _jsxDEV(MenuItem, {
                        testId: `select-filter-${-1}`,
                        onClick: ()=>{
                            handleSelectFilter(fieldMetadataItemUsedInDropdown);
                        },
                        LeftIcon: IconApps,
                        text: `Any ${getFilterableFieldTypeLabel(objectFilterDropdownSubMenuFieldType)} field`
                    }, `select-filter-${-1}`, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterSubFieldSelectMenu.tsx",
                        lineNumber: 113,
                        columnNumber: 9
                    }, this),
                    fieldMetadataItemUsedInDropdown?.type === 'ACTOR' && options.map((subFieldName, index)=>/*#__PURE__*/ _jsxDEV(MenuItem, {
                            testId: `select-filter-${index}`,
                            onClick: ()=>{
                                if (isDefined(fieldMetadataItemUsedInDropdown)) {
                                    handleSelectFilter(fieldMetadataItemUsedInDropdown, subFieldName);
                                }
                            },
                            text: getCompositeSubFieldLabel(objectFilterDropdownSubMenuFieldType, subFieldName),
                            LeftIcon: getIcon(fieldMetadataItemUsedInDropdown?.icon)
                        }, `select-filter-${index}`, false, {
                            fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterSubFieldSelectMenu.tsx",
                            lineNumber: 125,
                            columnNumber: 13
                        }, this))
                ]
            }, void 0, true, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterSubFieldSelectMenu.tsx",
                lineNumber: 112,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true);
};
_s(AdvancedFilterSubFieldSelectMenu, "QIlFCPr5qDApR2KBni0rkaWyBao=", false, function() {
    return [
        useIcons,
        useRecoilComponentValueV2,
        useRecoilComponentStateV2,
        useRecoilComponentStateV2,
        useRecoilComponentStateV2,
        useRecoilComponentStateV2,
        useSetRecoilComponentStateV2,
        useAdvancedFilterFieldSelectDropdown,
        useSelectFieldUsedInAdvancedFilterDropdown
    ];
});
_c = AdvancedFilterSubFieldSelectMenu;
var _c;
$RefreshReg$(_c, "AdvancedFilterSubFieldSelectMenu");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterSubFieldSelectMenu.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/advanced-filter/components/AdvancedFilterSubFieldSelectMenu.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,