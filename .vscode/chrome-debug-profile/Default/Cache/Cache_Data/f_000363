import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/modules/object-record/record-show/components/FieldsCard.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-show/components/FieldsCard.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import { jsxDEV as _jsxDEV, Fragment as _Fragment } from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/@emotion_react_jsx-dev-runtime.js?v=226f7286";
var _s = $RefreshSig$();
import __vite__cjsImport2_lodash_groupby from "/@fs/D:/twenty-table-o/node_modules/.vite/packages/twenty-front/deps/lodash__groupby.js?v=226f7286"; const groupBy = __vite__cjsImport2_lodash_groupby.__esModule ? __vite__cjsImport2_lodash_groupby.default : __vite__cjsImport2_lodash_groupby;
import { ActivityTargetsInlineCell } from "/src/modules/activities/inline-cell/components/ActivityTargetsInlineCell.tsx";
import { useObjectMetadataItem } from "/src/modules/object-metadata/hooks/useObjectMetadataItem.ts";
import { useObjectMetadataItems } from "/src/modules/object-metadata/hooks/useObjectMetadataItems.ts";
import { CoreObjectNameSingular } from "/src/modules/object-metadata/types/CoreObjectNameSingular.ts";
import { formatFieldMetadataItemAsColumnDefinition } from "/src/modules/object-metadata/utils/formatFieldMetadataItemAsColumnDefinition.ts";
import { FieldContext } from "/src/modules/object-record/record-field/contexts/FieldContext.ts";
import { RecordFieldComponentInstanceContext } from "/src/modules/object-record/record-field/states/contexts/RecordFieldComponentInstanceContext.ts";
import { RecordInlineCell } from "/src/modules/object-record/record-inline-cell/components/RecordInlineCell.tsx";
import { PropertyBox } from "/src/modules/object-record/record-inline-cell/property-box/components/PropertyBox.tsx";
import { PropertyBoxSkeletonLoader } from "/src/modules/object-record/record-inline-cell/property-box/components/PropertyBoxSkeletonLoader.tsx";
import { InlineCellHotkeyScope } from "/src/modules/object-record/record-inline-cell/types/InlineCellHotkeyScope.ts";
import { useRecordShowContainerActions } from "/src/modules/object-record/record-show/hooks/useRecordShowContainerActions.ts";
import { useRecordShowContainerData } from "/src/modules/object-record/record-show/hooks/useRecordShowContainerData.ts";
import { RecordDetailDuplicatesSection } from "/src/modules/object-record/record-show/record-detail-section/components/RecordDetailDuplicatesSection.tsx";
import { RecordDetailRelationSection } from "/src/modules/object-record/record-show/record-detail-section/components/RecordDetailRelationSection.tsx";
import { getRecordFieldInputId } from "/src/modules/object-record/utils/getRecordFieldInputId.ts";
import { isFieldCellSupported } from "/src/modules/object-record/utils/isFieldCellSupported.ts";
import { FieldMetadataType } from "/src/generated/graphql.tsx";
export const FieldsCard = ({ objectNameSingular, objectRecordId })=>{
    _s();
    const { recordLoading, labelIdentifierFieldMetadataItem, isPrefetchLoading } = useRecordShowContainerData({
        objectNameSingular,
        objectRecordId
    });
    const { objectMetadataItem } = useObjectMetadataItem({
        objectNameSingular
    });
    const { objectMetadataItems } = useObjectMetadataItems();
    const { useUpdateOneObjectRecordMutation } = useRecordShowContainerActions({
        objectNameSingular,
        objectRecordId
    });
    const availableFieldMetadataItems = objectMetadataItem.fields.filter((fieldMetadataItem)=>isFieldCellSupported(fieldMetadataItem, objectMetadataItems) && fieldMetadataItem.id !== labelIdentifierFieldMetadataItem?.id).sort((fieldMetadataItemA, fieldMetadataItemB)=>fieldMetadataItemA.name.localeCompare(fieldMetadataItemB.name));
    const { inlineFieldMetadataItems, relationFieldMetadataItems } = groupBy(availableFieldMetadataItems.filter((fieldMetadataItem)=>fieldMetadataItem.name !== 'createdAt' && fieldMetadataItem.name !== 'deletedAt'), (fieldMetadataItem)=>fieldMetadataItem.type === FieldMetadataType.RELATION ? 'relationFieldMetadataItems' : 'inlineFieldMetadataItems');
    const inlineRelationFieldMetadataItems = relationFieldMetadataItems?.filter((fieldMetadataItem)=>objectNameSingular === CoreObjectNameSingular.Note && fieldMetadataItem.name === 'noteTargets' || objectNameSingular === CoreObjectNameSingular.Task && fieldMetadataItem.name === 'taskTargets');
    const boxedRelationFieldMetadataItems = relationFieldMetadataItems?.filter((fieldMetadataItem)=>!(objectNameSingular === CoreObjectNameSingular.Note && fieldMetadataItem.name === 'noteTargets' || objectNameSingular === CoreObjectNameSingular.Task && fieldMetadataItem.name === 'taskTargets'));
    return /*#__PURE__*/ _jsxDEV(_Fragment, {
        children: [
            /*#__PURE__*/ _jsxDEV(PropertyBox, {
                children: isPrefetchLoading ? /*#__PURE__*/ _jsxDEV(PropertyBoxSkeletonLoader, {}, void 0, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-show/components/FieldsCard.tsx",
                    lineNumber: 91,
                    columnNumber: 11
                }, this) : /*#__PURE__*/ _jsxDEV(_Fragment, {
                    children: [
                        inlineRelationFieldMetadataItems?.map((fieldMetadataItem, index)=>/*#__PURE__*/ _jsxDEV(FieldContext.Provider, {
                                value: {
                                    recordId: objectRecordId,
                                    maxWidth: 200,
                                    isLabelIdentifier: false,
                                    fieldDefinition: formatFieldMetadataItemAsColumnDefinition({
                                        field: fieldMetadataItem,
                                        position: index,
                                        objectMetadataItem,
                                        showLabel: true,
                                        labelWidth: 90
                                    }),
                                    useUpdateRecord: useUpdateOneObjectRecordMutation,
                                    hotkeyScope: InlineCellHotkeyScope.InlineCell,
                                    isDisplayModeFixHeight: true
                                },
                                children: /*#__PURE__*/ _jsxDEV(ActivityTargetsInlineCell, {
                                    componentInstanceId: getRecordFieldInputId(objectRecordId, fieldMetadataItem.name, 'fields-card'),
                                    activityObjectNameSingular: objectNameSingular,
                                    activityRecordId: objectRecordId,
                                    showLabel: true,
                                    maxWidth: 200
                                }, void 0, false, {
                                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-show/components/FieldsCard.tsx",
                                    lineNumber: 114,
                                    columnNumber: 19
                                }, this)
                            }, objectRecordId + fieldMetadataItem.id, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-show/components/FieldsCard.tsx",
                                lineNumber: 96,
                                columnNumber: 17
                            }, this)),
                        inlineFieldMetadataItems?.map((fieldMetadataItem, index)=>/*#__PURE__*/ _jsxDEV(FieldContext.Provider, {
                                value: {
                                    recordId: objectRecordId,
                                    maxWidth: 200,
                                    isLabelIdentifier: false,
                                    fieldDefinition: formatFieldMetadataItemAsColumnDefinition({
                                        field: fieldMetadataItem,
                                        position: index,
                                        objectMetadataItem,
                                        showLabel: true,
                                        labelWidth: 90
                                    }),
                                    useUpdateRecord: useUpdateOneObjectRecordMutation,
                                    hotkeyScope: InlineCellHotkeyScope.InlineCell,
                                    isDisplayModeFixHeight: true
                                },
                                children: /*#__PURE__*/ _jsxDEV(RecordFieldComponentInstanceContext.Provider, {
                                    value: {
                                        instanceId: getRecordFieldInputId(objectRecordId, fieldMetadataItem.name, 'fields-card')
                                    },
                                    children: /*#__PURE__*/ _jsxDEV(RecordInlineCell, {
                                        loading: recordLoading
                                    }, void 0, false, {
                                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-show/components/FieldsCard.tsx",
                                        lineNumber: 160,
                                        columnNumber: 19
                                    }, this)
                                }, void 0, false, {
                                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-show/components/FieldsCard.tsx",
                                    lineNumber: 151,
                                    columnNumber: 17
                                }, this)
                            }, objectRecordId + fieldMetadataItem.id, false, {
                                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-show/components/FieldsCard.tsx",
                                lineNumber: 133,
                                columnNumber: 15
                            }, this))
                    ]
                }, void 0, true)
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-show/components/FieldsCard.tsx",
                lineNumber: 89,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDEV(RecordDetailDuplicatesSection, {
                objectRecordId: objectRecordId,
                objectNameSingular: objectNameSingular
            }, void 0, false, {
                fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-show/components/FieldsCard.tsx",
                lineNumber: 167,
                columnNumber: 7
            }, this),
            boxedRelationFieldMetadataItems?.map((fieldMetadataItem, index)=>/*#__PURE__*/ _jsxDEV(FieldContext.Provider, {
                    value: {
                        recordId: objectRecordId,
                        isLabelIdentifier: false,
                        fieldDefinition: formatFieldMetadataItemAsColumnDefinition({
                            field: fieldMetadataItem,
                            position: index,
                            objectMetadataItem
                        }),
                        useUpdateRecord: useUpdateOneObjectRecordMutation,
                        hotkeyScope: InlineCellHotkeyScope.InlineCell,
                        isDisplayModeFixHeight: true
                    },
                    children: /*#__PURE__*/ _jsxDEV(RecordDetailRelationSection, {
                        loading: isPrefetchLoading || recordLoading
                    }, void 0, false, {
                        fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-show/components/FieldsCard.tsx",
                        lineNumber: 187,
                        columnNumber: 11
                    }, this)
                }, objectRecordId + fieldMetadataItem.id, false, {
                    fileName: "D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-show/components/FieldsCard.tsx",
                    lineNumber: 172,
                    columnNumber: 9
                }, this))
        ]
    }, void 0, true);
};
_s(FieldsCard, "FJWou7dIlYJWGvrUtKDoFzKv13I=", false, function() {
    return [
        useRecordShowContainerData,
        useObjectMetadataItem,
        useObjectMetadataItems,
        useRecordShowContainerActions
    ];
});
_c = FieldsCard;
var _c;
$RefreshReg$(_c, "FieldsCard");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-show/components/FieldsCard.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/twenty-table-o/packages/twenty-front/src/modules/object-record/record-show/components/FieldsCard.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,